{"version":3,"file":"core.js","sources":["../../../../packages/core/index.ts","../../../../packages/core/public_api.ts","../../../../packages/core/src/core.ts","../../../../packages/core/src/animation/animation_metadata_wrapped.ts","../../../../packages/core/src/animation/dsl.ts","../../../../packages/core/src/codegen_private_exports.ts","../../../../packages/core/src/core_private_export.ts","../../../../packages/core/src/view/index.ts","../../../../packages/core/src/view/entrypoint.ts","../../../../packages/core/src/view/services.ts","../../../../packages/core/src/view/view.ts","../../../../packages/core/src/view/text.ts","../../../../packages/core/src/view/pure_expression.ts","../../../../packages/core/src/view/ng_content.ts","../../../../packages/core/src/view/query.ts","../../../../packages/core/src/view/provider.ts","../../../../packages/core/src/view/refs.ts","../../../../packages/core/src/view/view_attach.ts","../../../../packages/core/src/view/ng_module.ts","../../../../packages/core/src/view/element.ts","../../../../packages/core/src/view/util.ts","../../../../packages/core/src/view/errors.ts","../../../../packages/core/src/view/types.ts","../../../../packages/core/src/security.ts","../../../../packages/core/src/application_module.ts","../../../../packages/core/src/i18n/tokens.ts","../../../../packages/core/src/platform_core_providers.ts","../../../../packages/core/src/change_detection.ts","../../../../packages/core/src/change_detection/change_detection.ts","../../../../packages/core/src/change_detection/pipe_transform.ts","../../../../packages/core/src/change_detection/differs/keyvalue_differs.ts","../../../../packages/core/src/change_detection/differs/iterable_differs.ts","../../../../packages/core/src/change_detection/differs/default_keyvalue_differ.ts","../../../../packages/core/src/change_detection/differs/default_iterable_differ.ts","../../../../packages/core/src/change_detection/change_detection_util.ts","../../../../packages/core/src/debug/debug_node.ts","../../../../packages/core/src/linker.ts","../../../../packages/core/src/linker/view_ref.ts","../../../../packages/core/src/change_detection/change_detector_ref.ts","../../../../packages/core/src/linker/view_container_ref.ts","../../../../packages/core/src/linker/template_ref.ts","../../../../packages/core/src/linker/system_js_ng_module_factory_loader.ts","../../../../packages/core/src/linker/query_list.ts","../../../../packages/core/src/linker/ng_module_factory_loader.ts","../../../../packages/core/src/linker/element_ref.ts","../../../../packages/core/src/render.ts","../../../../packages/core/src/render/api.ts","../../../../packages/core/src/zone.ts","../../../../packages/core/src/application_ref.ts","../../../../packages/core/src/testability/testability.ts","../../../../packages/core/src/zone/ng_zone.ts","../../../../packages/core/src/event_emitter.ts","../../../../packages/core/src/profile/profile.ts","../../../../packages/core/src/profile/wtf_impl.ts","../../../../packages/core/src/linker/ng_module_factory.ts","../../../../packages/core/src/linker/component_factory_resolver.ts","../../../../packages/core/src/linker/component_factory.ts","../../../../packages/core/src/linker/compiler.ts","../../../../packages/core/src/console.ts","../../../../packages/core/src/application_tokens.ts","../../../../packages/core/src/application_init.ts","../../../../packages/core/src/util/lang.ts","../../../../packages/core/src/di.ts","../../../../packages/core/src/di/provider.ts","../../../../packages/core/src/di/reflective_injector.ts","../../../../packages/core/src/di/reflective_provider.ts","../../../../packages/core/src/reflection/reflection.ts","../../../../packages/core/src/reflection/reflector.ts","../../../../packages/core/src/reflection/platform_reflection_capabilities.ts","../../../../packages/core/src/reflection/reflection_capabilities.ts","../../../../packages/core/src/type.ts","../../../../packages/core/src/di/reflective_key.ts","../../../../packages/core/src/di/reflective_errors.ts","../../../../packages/core/src/error_handler.ts","../../../../packages/core/src/errors.ts","../../../../packages/core/src/di/injector.ts","../../../../packages/core/src/di/forward_ref.ts","../../../../packages/core/src/di/metadata.ts","../../../../packages/core/src/version.ts","../../../../packages/core/src/metadata.ts","../../../../packages/core/src/metadata/view.ts","../../../../packages/core/src/metadata/ng_module.ts","../../../../packages/core/src/metadata/lifecycle_hooks.ts","../../../../packages/core/src/metadata/directives.ts","../../../../packages/core/src/change_detection/constants.ts","../../../../packages/core/src/metadata/di.ts","../../../../packages/core/src/util/decorators.ts","../../../../packages/core/src/util.ts","../../../../packages/core/src/di/injection_token.ts"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Class,ClassDefinition,TypeDecorator,createPlatform,assertPlatform,destroyPlatform,getPlatform,PlatformRef,ApplicationRef,enableProdMode,isDevMode,createPlatformFactory,NgProbeToken,APP_ID,PACKAGE_ROOT_URL,PLATFORM_INITIALIZER,PLATFORM_ID,APP_BOOTSTRAP_LISTENER,APP_INITIALIZER,ApplicationInitStatus,DebugElement,DebugNode,asNativeElements,getDebugNode,Predicate,GetTestability,Testability,TestabilityRegistry,setTestabilityGetter,TRANSLATIONS,TRANSLATIONS_FORMAT,LOCALE_ID,MissingTranslationStrategy,ApplicationModule,wtfCreateScope,wtfLeave,wtfStartTimeRange,wtfEndTimeRange,WtfScopeFn,Type,EventEmitter,ErrorHandler,Sanitizer,SecurityContext,AnimationEntryMetadata,AnimationStateTransitionMetadata,AnimationPlayer,AnimationStyles,AnimationKeyframe,ANALYZE_FOR_ENTRY_COMPONENTS,Attribute,ContentChild,ContentChildDecorator,ContentChildren,ContentChildrenDecorator,Query,ViewChild,ViewChildDecorator,ViewChildren,ViewChildrenDecorator,Component,ComponentDecorator,Directive,DirectiveDecorator,HostBinding,HostListener,Input,Output,Pipe,AfterContentChecked,AfterContentInit,AfterViewChecked,AfterViewInit,DoCheck,OnChanges,OnDestroy,OnInit,CUSTOM_ELEMENTS_SCHEMA,ModuleWithProviders,NO_ERRORS_SCHEMA,NgModule,SchemaMetadata,ViewEncapsulation,Version,VERSION,forwardRef,resolveForwardRef,ForwardRefFn,Injector,ReflectiveInjector,Provider,TypeProvider,ValueProvider,ClassProvider,ExistingProvider,FactoryProvider,ResolvedReflectiveFactory,ResolvedReflectiveProvider,ReflectiveKey,InjectionToken,OpaqueToken,InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host,NgZone,RenderComponentType,Renderer,Renderer2,RendererFactory2,RendererStyleFlags2,RendererType2,RootRenderer,COMPILER_OPTIONS,Compiler,CompilerFactory,CompilerOptions,ModuleWithComponentFactories,ComponentFactory,ComponentRef,ComponentFactoryResolver,ElementRef,NgModuleFactory,NgModuleRef,NgModuleFactoryLoader,getModuleFactory,QueryList,SystemJsNgModuleLoader,SystemJsNgModuleLoaderConfig,TemplateRef,ViewContainerRef,EmbeddedViewRef,ViewRef,ChangeDetectionStrategy,ChangeDetectorRef,CollectionChangeRecord,DefaultIterableDiffer,IterableChangeRecord,IterableChanges,IterableDiffer,IterableDifferFactory,IterableDiffers,KeyValueChangeRecord,KeyValueChanges,KeyValueDiffer,KeyValueDifferFactory,KeyValueDiffers,NgIterable,PipeTransform,SimpleChange,SimpleChanges,TrackByFn,TrackByFunction,WrappedValue,platformCore,ɵALLOW_MULTIPLE_PLATFORMS,ɵAPP_ID_RANDOM_PROVIDER,ɵValueUnwrapper,ɵdevModeEqual,ɵisListLikeIterable,ɵChangeDetectorStatus,ɵisDefaultChangeDetectionStrategy,ɵConsole,ɵERROR_COMPONENT_TYPE,ɵComponentFactory,ɵCodegenComponentFactoryResolver,ɵViewMetadata,ɵReflectionCapabilities,ɵGetterFn,ɵMethodFn,ɵSetterFn,ɵDirectRenderer,ɵRenderDebugInfo,ɵglobal,ɵlooseIdentical,ɵstringify,ɵmakeDecorator,ɵisObservable,ɵisPromise,ɵclearProviderOverrides,ɵoverrideProvider,ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,ɵregisterModuleFactory,ɵArgumentType,ɵBindingFlags,ɵDepFlags,ɵEMPTY_ARRAY,ɵEMPTY_MAP,ɵNodeFlags,ɵQueryBindingType,ɵQueryValueType,ɵViewDefinition,ɵViewFlags,ɵand,ɵccf,ɵcmf,ɵcrt,ɵdid,ɵeld,ɵelementEventFullName,ɵgetComponentViewDefinitionFactory,ɵinlineInterpolate,ɵinterpolate,ɵmod,ɵmpd,ɵncd,ɵnov,ɵpid,ɵprd,ɵpad,ɵpod,ɵppd,ɵqud,ɵted,ɵunv,ɵvid,AUTO_STYLE,AnimationMetadata,AnimationTriggerMetadata,AnimationStateMetadata,AnimationTransitionMetadata,AnimationKeyframesSequenceMetadata,AnimationStyleMetadata,AnimationAnimateMetadata,AnimationSequenceMetadata,AnimationGroupMetadata,trigger,animate,group,sequence,style,state,keyframes,transition,AnimationTransitionEvent} from './public_api';\n\nexport {AnimationMetadataType as ɵv,animate as ɵx,group as ɵy,keyframes as ɵbc,sequence as ɵz,state as ɵbb,style as ɵba,transition as ɵbd,trigger as ɵw} from './src/animation/dsl';\nexport {_iterableDiffersFactory as ɵk,_keyValueDiffersFactory as ɵl,_localeFactory as ɵm} from './src/application_module';\nexport {ApplicationRef_ as ɵe} from './src/application_ref';\nexport {_appIdRandomProviderFactory as ɵf} from './src/application_tokens';\nexport {defaultIterableDiffers as ɵg,defaultKeyValueDiffers as ɵh} from './src/change_detection/change_detection';\nexport {DefaultIterableDifferFactory as ɵi} from './src/change_detection/differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory as ɵj} from './src/change_detection/differs/default_keyvalue_differ';\nexport {ReflectiveInjector_ as ɵb} from './src/di/reflective_injector';\nexport {ReflectiveDependency as ɵc,resolveReflectiveProviders as ɵd} from './src/di/reflective_provider';\nexport {wtfEnabled as ɵn} from './src/profile/profile';\nexport {createScope as ɵp,detectWTF as ɵo,endTimeRange as ɵs,leave as ɵq,startTimeRange as ɵr} from './src/profile/wtf_impl';\nexport {makeParamDecorator as ɵa} from './src/util/decorators';\nexport {_def as ɵt} from './src/view/provider';\nexport {DebugContext as ɵu} from './src/view/types';","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the core package.\n */\nexport {Class,ClassDefinition,TypeDecorator,createPlatform,assertPlatform,destroyPlatform,getPlatform,PlatformRef,ApplicationRef,enableProdMode,isDevMode,createPlatformFactory,NgProbeToken,APP_ID,PACKAGE_ROOT_URL,PLATFORM_INITIALIZER,PLATFORM_ID,APP_BOOTSTRAP_LISTENER,APP_INITIALIZER,ApplicationInitStatus,DebugElement,DebugNode,asNativeElements,getDebugNode,Predicate,GetTestability,Testability,TestabilityRegistry,setTestabilityGetter,TRANSLATIONS,TRANSLATIONS_FORMAT,LOCALE_ID,MissingTranslationStrategy,ApplicationModule,wtfCreateScope,wtfLeave,wtfStartTimeRange,wtfEndTimeRange,WtfScopeFn,Type,EventEmitter,ErrorHandler,Sanitizer,SecurityContext,AnimationEntryMetadata,AnimationStateTransitionMetadata,AnimationPlayer,AnimationStyles,AnimationKeyframe,ANALYZE_FOR_ENTRY_COMPONENTS,Attribute,ContentChild,ContentChildDecorator,ContentChildren,ContentChildrenDecorator,Query,ViewChild,ViewChildDecorator,ViewChildren,ViewChildrenDecorator,Component,ComponentDecorator,Directive,DirectiveDecorator,HostBinding,HostListener,Input,Output,Pipe,AfterContentChecked,AfterContentInit,AfterViewChecked,AfterViewInit,DoCheck,OnChanges,OnDestroy,OnInit,CUSTOM_ELEMENTS_SCHEMA,ModuleWithProviders,NO_ERRORS_SCHEMA,NgModule,SchemaMetadata,ViewEncapsulation,Version,VERSION,forwardRef,resolveForwardRef,ForwardRefFn,Injector,ReflectiveInjector,Provider,TypeProvider,ValueProvider,ClassProvider,ExistingProvider,FactoryProvider,ResolvedReflectiveFactory,ResolvedReflectiveProvider,ReflectiveKey,InjectionToken,OpaqueToken,InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host,NgZone,RenderComponentType,Renderer,Renderer2,RendererFactory2,RendererStyleFlags2,RendererType2,RootRenderer,COMPILER_OPTIONS,Compiler,CompilerFactory,CompilerOptions,ModuleWithComponentFactories,ComponentFactory,ComponentRef,ComponentFactoryResolver,ElementRef,NgModuleFactory,NgModuleRef,NgModuleFactoryLoader,getModuleFactory,QueryList,SystemJsNgModuleLoader,SystemJsNgModuleLoaderConfig,TemplateRef,ViewContainerRef,EmbeddedViewRef,ViewRef,ChangeDetectionStrategy,ChangeDetectorRef,CollectionChangeRecord,DefaultIterableDiffer,IterableChangeRecord,IterableChanges,IterableDiffer,IterableDifferFactory,IterableDiffers,KeyValueChangeRecord,KeyValueChanges,KeyValueDiffer,KeyValueDifferFactory,KeyValueDiffers,NgIterable,PipeTransform,SimpleChange,SimpleChanges,TrackByFn,TrackByFunction,WrappedValue,platformCore,ɵALLOW_MULTIPLE_PLATFORMS,ɵAPP_ID_RANDOM_PROVIDER,ɵValueUnwrapper,ɵdevModeEqual,ɵisListLikeIterable,ɵChangeDetectorStatus,ɵisDefaultChangeDetectionStrategy,ɵConsole,ɵERROR_COMPONENT_TYPE,ɵComponentFactory,ɵCodegenComponentFactoryResolver,ɵViewMetadata,ɵReflectionCapabilities,ɵGetterFn,ɵMethodFn,ɵSetterFn,ɵDirectRenderer,ɵRenderDebugInfo,ɵglobal,ɵlooseIdentical,ɵstringify,ɵmakeDecorator,ɵisObservable,ɵisPromise,ɵclearProviderOverrides,ɵoverrideProvider,ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,ɵregisterModuleFactory,ɵArgumentType,ɵBindingFlags,ɵDepFlags,ɵEMPTY_ARRAY,ɵEMPTY_MAP,ɵNodeFlags,ɵQueryBindingType,ɵQueryValueType,ɵViewDefinition,ɵViewFlags,ɵand,ɵccf,ɵcmf,ɵcrt,ɵdid,ɵeld,ɵelementEventFullName,ɵgetComponentViewDefinitionFactory,ɵinlineInterpolate,ɵinterpolate,ɵmod,ɵmpd,ɵncd,ɵnov,ɵpid,ɵprd,ɵpad,ɵpod,ɵppd,ɵqud,ɵted,ɵunv,ɵvid,AUTO_STYLE,AnimationMetadata,AnimationTriggerMetadata,AnimationStateMetadata,AnimationTransitionMetadata,AnimationKeyframesSequenceMetadata,AnimationStyleMetadata,AnimationAnimateMetadata,AnimationSequenceMetadata,AnimationGroupMetadata,trigger,animate,group,sequence,style,state,keyframes,transition,AnimationTransitionEvent} from './src/core';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\nexport {ANALYZE_FOR_ENTRY_COMPONENTS,Attribute,ContentChild,ContentChildDecorator,ContentChildren,ContentChildrenDecorator,Query,ViewChild,ViewChildDecorator,ViewChildren,ViewChildrenDecorator,Component,ComponentDecorator,Directive,DirectiveDecorator,HostBinding,HostListener,Input,Output,Pipe,AfterContentChecked,AfterContentInit,AfterViewChecked,AfterViewInit,DoCheck,OnChanges,OnDestroy,OnInit,CUSTOM_ELEMENTS_SCHEMA,ModuleWithProviders,NO_ERRORS_SCHEMA,NgModule,SchemaMetadata,ViewEncapsulation} from './metadata';\nexport {Version,VERSION} from './version';\nexport {Class, ClassDefinition, TypeDecorator} from './util/decorators';\nexport {forwardRef,resolveForwardRef,ForwardRefFn,Injector,ReflectiveInjector,Provider,TypeProvider,ValueProvider,ClassProvider,ExistingProvider,FactoryProvider,ResolvedReflectiveFactory,ResolvedReflectiveProvider,ReflectiveKey,InjectionToken,OpaqueToken,InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host} from './di';\nexport {createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken} from './application_ref';\nexport {APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER} from './application_tokens';\nexport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nexport {NgZone} from './zone';\nexport {RenderComponentType,Renderer,Renderer2,RendererFactory2,RendererStyleFlags2,RendererType2,RootRenderer} from './render';\nexport {COMPILER_OPTIONS,Compiler,CompilerFactory,CompilerOptions,ModuleWithComponentFactories,ComponentFactory,ComponentRef,ComponentFactoryResolver,ElementRef,NgModuleFactory,NgModuleRef,NgModuleFactoryLoader,getModuleFactory,QueryList,SystemJsNgModuleLoader,SystemJsNgModuleLoaderConfig,TemplateRef,ViewContainerRef,EmbeddedViewRef,ViewRef} from './linker';\nexport {DebugElement, DebugNode, asNativeElements, getDebugNode, Predicate} from './debug/debug_node';\nexport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter} from './testability/testability';\nexport {ChangeDetectionStrategy,ChangeDetectorRef,CollectionChangeRecord,DefaultIterableDiffer,IterableChangeRecord,IterableChanges,IterableDiffer,IterableDifferFactory,IterableDiffers,KeyValueChangeRecord,KeyValueChanges,KeyValueDiffer,KeyValueDifferFactory,KeyValueDiffers,NgIterable,PipeTransform,SimpleChange,SimpleChanges,TrackByFn,TrackByFunction,WrappedValue} from './change_detection';\nexport {platformCore} from './platform_core_providers';\nexport {TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy} from './i18n/tokens';\nexport {ApplicationModule} from './application_module';\nexport {wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, WtfScopeFn} from './profile/profile';\nexport {Type} from './type';\nexport {EventEmitter} from './event_emitter';\nexport {ErrorHandler} from './error_handler';\nexport {ɵALLOW_MULTIPLE_PLATFORMS,ɵAPP_ID_RANDOM_PROVIDER,ɵValueUnwrapper,ɵdevModeEqual,ɵisListLikeIterable,ɵChangeDetectorStatus,ɵisDefaultChangeDetectionStrategy,ɵConsole,ɵERROR_COMPONENT_TYPE,ɵComponentFactory,ɵCodegenComponentFactoryResolver,ɵViewMetadata,ɵReflectionCapabilities,ɵGetterFn,ɵMethodFn,ɵSetterFn,ɵDirectRenderer,ɵRenderDebugInfo,ɵglobal,ɵlooseIdentical,ɵstringify,ɵmakeDecorator,ɵisObservable,ɵisPromise,ɵclearProviderOverrides,ɵoverrideProvider,ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from './core_private_export';\nexport {Sanitizer, SecurityContext} from './security';\nexport {ɵregisterModuleFactory,ɵArgumentType,ɵBindingFlags,ɵDepFlags,ɵEMPTY_ARRAY,ɵEMPTY_MAP,ɵNodeFlags,ɵQueryBindingType,ɵQueryValueType,ɵViewDefinition,ɵViewFlags,ɵand,ɵccf,ɵcmf,ɵcrt,ɵdid,ɵeld,ɵelementEventFullName,ɵgetComponentViewDefinitionFactory,ɵinlineInterpolate,ɵinterpolate,ɵmod,ɵmpd,ɵncd,ɵnov,ɵpid,ɵprd,ɵpad,ɵpod,ɵppd,ɵqud,ɵted,ɵunv,ɵvid} from './codegen_private_exports';\nexport {AUTO_STYLE,AnimationMetadata,AnimationTriggerMetadata,AnimationStateMetadata,AnimationTransitionMetadata,AnimationKeyframesSequenceMetadata,AnimationStyleMetadata,AnimationAnimateMetadata,AnimationSequenceMetadata,AnimationGroupMetadata,trigger,animate,group,sequence,style,state,keyframes,transition,AnimationTransitionEvent} from './animation/animation_metadata_wrapped';\nimport {AnimationTriggerMetadata} from './animation/animation_metadata_wrapped';\n\n\n// For backwards compatibility.\n/**\n * @deprecated from v4\n */\nexport type AnimationEntryMetadata = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationStateTransitionMetadata = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationPlayer = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationStyles = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationKeyframe = any;\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimateTimings, AnimationMetadataType, animate as _animate, group as _group, keyframes as _keyframes, sequence as _sequence, state as _state, style as _style, transition as _transition, trigger as _trigger} from './dsl';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nexport const /** @type {?} */ AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationMetadata() {}\n\n\nfunction AnimationMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationMetadata.prototype.type;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationMetadata { type: AnimationMetadataType; }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationTriggerMetadata() {}\n\n\nfunction AnimationTriggerMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTriggerMetadata.prototype.name;\n/** @type {?} */\nAnimationTriggerMetadata.prototype.definitions;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationTriggerMetadata {\n  name: string;\n  definitions: AnimationMetadata[];\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationStateMetadata() {}\n\n\nfunction AnimationStateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStateMetadata.prototype.name;\n/** @type {?} */\nAnimationStateMetadata.prototype.styles;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationStateMetadata extends AnimationMetadata {\n  name: string;\n  styles: AnimationStyleMetadata;\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationTransitionMetadata() {}\n\n\nfunction AnimationTransitionMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionMetadata.prototype.expr;\n/** @type {?} */\nAnimationTransitionMetadata.prototype.animation;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationTransitionMetadata extends AnimationMetadata {\n  expr: string|((fromState: string, toState: string) => boolean);\n  animation: AnimationMetadata|AnimationMetadata[];\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationKeyframesSequenceMetadata() {}\n\n\nfunction AnimationKeyframesSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationKeyframesSequenceMetadata.prototype.steps;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationKeyframesSequenceMetadata extends AnimationMetadata {\n  steps: AnimationStyleMetadata[];\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationStyleMetadata() {}\n\n\nfunction AnimationStyleMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStyleMetadata.prototype.styles;\n/** @type {?} */\nAnimationStyleMetadata.prototype.offset;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationStyleMetadata extends AnimationMetadata {\n  styles: '*'|{[key: string]: string | number}|Array<{[key: string]: string | number}|'*'>;\n  offset: number|null;\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationAnimateMetadata() {}\n\n\nfunction AnimationAnimateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateMetadata.prototype.timings;\n/** @type {?} */\nAnimationAnimateMetadata.prototype.styles;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationAnimateMetadata extends AnimationMetadata {\n  timings: string|number|AnimateTimings;\n  styles: AnimationStyleMetadata|AnimationKeyframesSequenceMetadata|null;\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationSequenceMetadata() {}\n\n\nfunction AnimationSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationSequenceMetadata.prototype.steps;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationSequenceMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationGroupMetadata() {}\n\n\nfunction AnimationGroupMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationGroupMetadata.prototype.steps;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationGroupMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nexport function trigger(name: string, definitions: AnimationMetadata[]): AnimationTriggerMetadata {\n  return _trigger(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nexport function animate(\n    timings: string | number, styles?: AnimationStyleMetadata |\n        AnimationKeyframesSequenceMetadata): AnimationAnimateMetadata {\n  return _animate(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function group(steps: AnimationMetadata[]): AnimationGroupMetadata {\n  return _group(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function sequence(steps: AnimationMetadata[]): AnimationSequenceMetadata {\n  return _sequence(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nexport function style(\n    tokens: {[key: string]: string | number} |\n    Array<{[key: string]: string | number}>): AnimationStyleMetadata {\n  return _style(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nexport function state(name: string, styles: AnimationStyleMetadata): AnimationStateMetadata {\n  return _state(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function keyframes(steps: AnimationStyleMetadata[]): AnimationKeyframesSequenceMetadata {\n  return _keyframes(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nexport function transition(stateChangeExpr: string, steps: AnimationMetadata | AnimationMetadata[]):\n    AnimationTransitionMetadata {\n  return _transition(stateChangeExpr, steps);\n}\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from \\@angular/animations.\n * @record\n */\nexport function AnimationTransitionEvent() {}\n\n\nfunction AnimationTransitionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionEvent.prototype.fromState;\n/** @type {?} */\nAnimationTransitionEvent.prototype.toState;\n/** @type {?} */\nAnimationTransitionEvent.prototype.totalTime;\n/** @type {?} */\nAnimationTransitionEvent.prototype.phaseName;\n/** @type {?} */\nAnimationTransitionEvent.prototype.element;\n/** @type {?} */\nAnimationTransitionEvent.prototype.triggerName;\n}\n\n\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from @angular/animations.\n */\nexport interface AnimationTransitionEvent {\n  fromState: string;\n  toState: string;\n  totalTime: number;\n  phaseName: string;\n  element: any;\n  triggerName: string;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\nexport function ɵStyleData() {}\n\n\nfunction ɵStyleData_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n[key: string]: string|number;\n*/\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport interface ɵStyleData { [key: string]: string|number; }\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are created internally\n * within the Angular animation DSL.\n *\n * @experimental Animation support is experimental.\n */\nexport declare type AnimateTimings = {\n  duration: number,\n  delay: number,\n  easing: string | null\n};\n\n/**\n * `AnimationOptions` represents options that can be passed into most animation DSL methods.\n * When options are provided, the delay value of an animation can be changed and animation input\n * parameters can be passed in to change styling and timing data when an animation is started.\n *\n * The following animation DSL functions are able to accept animation option data:\n *\n * - {@link transition transition()}\n * - {@link sequence sequence()}\n * - {@link group group()}\n * - {@link query query()}\n * - {@link animation animation()}\n * - {@link useAnimation useAnimation()}\n * - {@link animateChild animateChild()}\n *\n * Programmatic animations built using {@link AnimationBuilder the AnimationBuilder service} also\n * make use of AnimationOptions.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimationOptions {\n  delay?: number|string;\n  params?: {[name: string]: any};\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are created internally\n * within the Angular animation DSL when {@link animateChild animateChild()} is used.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimateChildOptions extends AnimationOptions { duration?: number|string; }\n\n/**\n * Metadata representing the entry of animations. Usages of this enum are created\n * each time an animation DSL function is used.\n *\n * @experimental Animation support is experimental.\n */\nexport const enum AnimationMetadataType {\n  State = 0,\n  Transition = 1,\n  Sequence = 2,\n  Group = 3,\n  Animate = 4,\n  Keyframes = 5,\n  Style = 6,\n  Trigger = 7,\n  Reference = 8,\n  AnimateChild = 9,\n  AnimateRef = 10,\n  Query = 11,\n  Stagger = 12\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nexport const /** @type {?} */ AUTO_STYLE = '*';\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationMetadata() {}\n\n\nfunction AnimationMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationMetadata.prototype.type;\n}\n\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationMetadata { type: AnimationMetadataType; }\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationTriggerMetadata() {}\n\n\nfunction AnimationTriggerMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTriggerMetadata.prototype.name;\n/** @type {?} */\nAnimationTriggerMetadata.prototype.definitions;\n/** @type {?} */\nAnimationTriggerMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link trigger trigger animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationTriggerMetadata extends AnimationMetadata {\n  name: string;\n  definitions: AnimationMetadata[];\n  options: {params?: {[name: string]: any}}|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationStateMetadata() {}\n\n\nfunction AnimationStateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStateMetadata.prototype.name;\n/** @type {?} */\nAnimationStateMetadata.prototype.styles;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link state state animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationStateMetadata extends AnimationMetadata {\n  name: string;\n  styles: AnimationStyleMetadata;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationTransitionMetadata() {}\n\n\nfunction AnimationTransitionMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionMetadata.prototype.expr;\n/** @type {?} */\nAnimationTransitionMetadata.prototype.animation;\n/** @type {?} */\nAnimationTransitionMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link transition transition animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationTransitionMetadata extends AnimationMetadata {\n  expr: string;\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationReferenceMetadata() {}\n\n\nfunction AnimationReferenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationReferenceMetadata.prototype.animation;\n/** @type {?} */\nAnimationReferenceMetadata.prototype.options;\n}\n\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationReferenceMetadata extends AnimationMetadata {\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationQueryMetadata() {}\n\n\nfunction AnimationQueryMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationQueryMetadata.prototype.selector;\n/** @type {?} */\nAnimationQueryMetadata.prototype.animation;\n/** @type {?} */\nAnimationQueryMetadata.prototype.options;\n}\n\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationQueryMetadata extends AnimationMetadata {\n  selector: string;\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationQueryOptions|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationKeyframesSequenceMetadata() {}\n\n\nfunction AnimationKeyframesSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationKeyframesSequenceMetadata.prototype.steps;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link keyframes keyframes animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationKeyframesSequenceMetadata extends AnimationMetadata {\n  steps: AnimationStyleMetadata[];\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationStyleMetadata() {}\n\n\nfunction AnimationStyleMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStyleMetadata.prototype.styles;\n/** @type {?} */\nAnimationStyleMetadata.prototype.offset;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link style style animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationStyleMetadata extends AnimationMetadata {\n  styles: '*'|{[key: string]: string | number}|Array<{[key: string]: string | number}|'*'>;\n  offset: number|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationAnimateMetadata() {}\n\n\nfunction AnimationAnimateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateMetadata.prototype.timings;\n/** @type {?} */\nAnimationAnimateMetadata.prototype.styles;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link animate animate animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateMetadata extends AnimationMetadata {\n  timings: string|number|AnimateTimings;\n  styles: AnimationStyleMetadata|AnimationKeyframesSequenceMetadata|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationAnimateChildMetadata() {}\n\n\nfunction AnimationAnimateChildMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateChildMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link animateChild animateChild animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateChildMetadata extends AnimationMetadata {\n  options: AnimationOptions|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationAnimateRefMetadata() {}\n\n\nfunction AnimationAnimateRefMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateRefMetadata.prototype.animation;\n/** @type {?} */\nAnimationAnimateRefMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link useAnimation useAnimation animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateRefMetadata extends AnimationMetadata {\n  animation: AnimationReferenceMetadata;\n  options: AnimationOptions|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationSequenceMetadata() {}\n\n\nfunction AnimationSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationSequenceMetadata.prototype.steps;\n/** @type {?} */\nAnimationSequenceMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link sequence sequence animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationSequenceMetadata extends AnimationMetadata {\n  steps: AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationGroupMetadata() {}\n\n\nfunction AnimationGroupMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationGroupMetadata.prototype.steps;\n/** @type {?} */\nAnimationGroupMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link group group animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationGroupMetadata extends AnimationMetadata {\n  steps: AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link query query animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimationQueryOptions extends AnimationOptions {\n  optional?: boolean;\n  limit?: number;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationStaggerMetadata() {}\n\n\nfunction AnimationStaggerMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStaggerMetadata.prototype.timings;\n/** @type {?} */\nAnimationStaggerMetadata.prototype.animation;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link stagger stagger animation function} is called.\n *\n* @experimental Animation support is experimental.\n*/\nexport interface AnimationStaggerMetadata extends AnimationMetadata {\n  timings: string|number;\n  animation: AnimationMetadata|AnimationMetadata[];\n}\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n * \n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n * \n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n * \n * ### Usage\n * \n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n * \n * ```typescript\n * \\@Component({ \n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n * \n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n * \n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n * \n * ## Disable Child Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element.\n * \n * When true, the `\\@.disabled` binding will prevent inner animations from rendering. The example\n * below shows how to use this feature:\n * \n * ```ts\n * \\@Component({ \n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n * \n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n * \n * Note that `\\@.disbled` will only disable inner animations (any animations running on the same\n * element will not be disabled).\n * \n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n * \n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n * \n * \\@Component({ \n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n * \n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nexport function trigger(name: string, definitions: AnimationMetadata[]): AnimationTriggerMetadata {\n  return {type: AnimationMetadataType.Trigger, name, definitions, options: {}};\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n * \n * ### Usage\n * \n * The `animate` function accepts two input parameters: `timing` and `styles`:\n * \n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n * \n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n * \n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nexport function animate(\n    timings: string | number, styles: AnimationStyleMetadata | AnimationKeyframesSequenceMetadata |\n        null = null): AnimationAnimateMetadata {\n  return {type: AnimationMetadataType.Animate, styles, timings};\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n * \n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n * \n * ### Usage\n * \n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n * \n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function group(\n    steps: AnimationMetadata[], options: AnimationOptions | null = null): AnimationGroupMetadata {\n  return {type: AnimationMetadataType.Group, steps, options};\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n * \n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n * \n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n * \n * ### Usage\n * \n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n * \n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function sequence(steps: AnimationMetadata[], options: AnimationOptions | null = null):\n    AnimationSequenceMetadata {\n  return {type: AnimationMetadataType.Sequence, steps, options};\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n * \n * ### Usage\n * \n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n * \n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n * \n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n * \n * #### Auto-styles (using `*`)\n * \n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n * \n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n * \n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nexport function style(\n    tokens: '*' | {[key: string]: string | number} |\n    Array<'*'|{[key: string]: string | number}>): AnimationStyleMetadata {\n  return {type: AnimationMetadataType.Style, styles: tokens, offset: null};\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n * \n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n * \n * #### The `void` state\n * \n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n * \n * #### The `*` (default) state\n * \n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n * \n * ### Usage\n * \n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n * \n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n * \n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n * \n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nexport function state(name: string, styles: AnimationStyleMetadata): AnimationStateMetadata {\n  return {type: AnimationMetadataType.State, name, styles};\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n * \n * ### Usage\n * \n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n * \n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n * \n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n * \n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n * \n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nexport function keyframes(steps: AnimationStyleMetadata[]): AnimationKeyframesSequenceMetadata {\n  return {type: AnimationMetadataType.Keyframes, steps};\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n * \n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n * \n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n * \n * ### Usage\n * \n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n * \n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n * \n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n * \n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n * \n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n * \n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n * \n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n * \n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n * \n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n * \n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n * \n * #### The final `animate` call\n * \n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n * \n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n * \n * ### Using :enter and :leave\n * \n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n * \n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n * \n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n * \n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n * \n * \\@Component({ \n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n * \n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n * \n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n * \n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function transition(\n    stateChangeExpr: string, steps: AnimationMetadata | AnimationMetadata[],\n    options: AnimationOptions | null = null): AnimationTransitionMetadata {\n  return {type: AnimationMetadataType.Transition, expr: stateChangeExpr, animation: steps, options};\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n * \n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n * \n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n * \n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n * \n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n * \n * If one or more parameter values are missing before animated then an error will be thrown.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function animation(\n    steps: AnimationMetadata | AnimationMetadata[],\n    options: AnimationOptions | null = null): AnimationReferenceMetadata {\n  return {type: AnimationMetadataType.Reference, animation: steps, options};\n}\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n * \n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n * \n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n * \n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n * \n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n * \n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n * \n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({ \n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n * \n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n * \n * This example can be further extended by using stagger:\n * \n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n * \n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n * \n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n * \n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n * \n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n * \n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\nexport function animateChild(options: AnimateChildOptions | null = null):\n    AnimationAnimateChildMetadata {\n  return {type: AnimationMetadataType.AnimateChild, options};\n}\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nexport function useAnimation(\n    animation: AnimationReferenceMetadata,\n    options: AnimationOptions | null = null): AnimationAnimateRefMetadata {\n  return {type: AnimationMetadataType.AnimateRef, animation, options};\n}\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n * \n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n * \n * ### Usage\n * \n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n * \n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n * \n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n * \n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n * \n * ### Special Selector Values\n * \n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n * \n * These include:\n * \n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n * \n * \n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n * \n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n * \n * ### Demo\n * \n * ```\n * \\@Component({ \n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n * \n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n * \n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n * \n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nexport function query(\n    selector: string, animation: AnimationMetadata | AnimationMetadata[],\n    options: AnimationQueryOptions | null = null): AnimationQueryMetadata {\n  return {type: AnimationMetadataType.Query, selector, animation, options};\n}\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n * \n * ### Usage\n * \n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n * \n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n * \n * The component code for this looks as such:\n * \n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({ \n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n * \n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n * \n *   hideItems() {\n *     this.items = [];\n *   }\n * \n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n * \n * And now for the animation trigger code:\n * \n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n * \n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\nexport function stagger(\n    timings: string | number,\n    animation: AnimationMetadata | AnimationMetadata[]): AnimationStaggerMetadata {\n  return {type: AnimationMetadataType.Stagger, timings, animation};\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {registerModuleFactory as ɵregisterModuleFactory} from './linker/ng_module_factory_loader';\nexport {ArgumentType as ɵArgumentType, BindingFlags as ɵBindingFlags, DepFlags as ɵDepFlags, EMPTY_ARRAY as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, NodeFlags as ɵNodeFlags, QueryBindingType as ɵQueryBindingType, QueryValueType as ɵQueryValueType, ViewDefinition as ɵViewDefinition, ViewFlags as ɵViewFlags, anchorDef as ɵand, createComponentFactory as ɵccf, createNgModuleFactory as ɵcmf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue as ɵunv, viewDef as ɵvid} from './view/index';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS} from './application_ref';\nexport {APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER} from './application_tokens';\nexport {ValueUnwrapper as ɵValueUnwrapper, devModeEqual as ɵdevModeEqual} from './change_detection/change_detection_util';\nexport {isListLikeIterable as ɵisListLikeIterable} from './change_detection/change_detection_util';\nexport {ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy} from './change_detection/constants';\nexport {Console as ɵConsole} from './console';\nexport {ERROR_COMPONENT_TYPE as ɵERROR_COMPONENT_TYPE} from './errors';\nexport {ComponentFactory as ɵComponentFactory} from './linker/component_factory';\nexport {CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {ViewMetadata as ɵViewMetadata} from './metadata/view';\nexport {ReflectionCapabilities as ɵReflectionCapabilities} from './reflection/reflection_capabilities';\nexport {GetterFn as ɵGetterFn, MethodFn as ɵMethodFn, SetterFn as ɵSetterFn} from './reflection/types';\nexport {DirectRenderer as ɵDirectRenderer, RenderDebugInfo as ɵRenderDebugInfo} from './render/api';\nexport {global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify} from './util';\nexport {makeDecorator as ɵmakeDecorator} from './util/decorators';\nexport {isObservable as ɵisObservable, isPromise as ɵisPromise} from './util/lang';\nexport {clearProviderOverrides as ɵclearProviderOverrides, overrideProvider as ɵoverrideProvider} from './view/index';\nexport {NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from './view/provider';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {anchorDef, elementDef} from './element';\nexport {clearProviderOverrides, createNgModuleFactory, overrideProvider} from './entrypoint';\nexport {ngContentDef} from './ng_content';\nexport {moduleDef, moduleProvideDef} from './ng_module';\nexport {directiveDef, pipeDef, providerDef} from './provider';\nexport {pureArrayDef, pureObjectDef, purePipeDef} from './pure_expression';\nexport {queryDef} from './query';\nexport {ViewRef_, createComponentFactory, getComponentViewDefinitionFactory, nodeValue} from './refs';\nexport {initServicesIfNeeded} from './services';\nexport {textDef} from './text';\nexport {EMPTY_ARRAY, EMPTY_MAP, createRendererType2, elementEventFullName, inlineInterpolate, interpolate, rootRenderNodes, tokenKey, unwrapValue} from './util';\nexport {viewDef} from './view';\nexport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView} from './view_attach';\n\nexport {DefinitionFactory,NodeLogger,Definition,NgModuleDefinition,NgModuleDefinitionFactory,ViewDefinition,ViewDefinitionFactory,ViewUpdateFn,NodeCheckFn,ArgumentType,ViewHandleEventFn,ViewFlags,NodeDef,NodeFlags,BindingDef,BindingFlags,OutputDef,OutputType,QueryValueType,ElementDef,ElementHandleEventFn,ProviderDef,NgModuleProviderDef,DepDef,DepFlags,TextDef,QueryDef,QueryBindingDef,QueryBindingType,NgContentDef,NgModuleData,ViewData,ViewState,DisposableFn,NodeData,TextData,asTextData,ElementData,ViewContainerData,TemplateData,asElementData,ProviderData,asProviderData,PureExpressionData,asPureExpressionData,asQueryList,RootData,DebugContext,CheckType,ProviderOverride,Services} from './types';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinitionFactory, ProviderOverride, Services} from './types';\nimport {resolveDefinition} from './util';\n/**\n * @param {?} override\n * @return {?}\n */\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nexport function clearProviderOverrides() {\n  initServicesIfNeeded();\n  return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n/**\n * @param {?} moduleType\n * @param {?} _bootstrapComponents\n * @param {?} _ngModuleDefFactory\n */\nconstructor(\npublic readonly moduleType: Type<any>,\nprivate _bootstrapComponents: Type<any>[],\nprivate _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n/**\n * @param {?} parentInjector\n * @return {?}\n */\ncreate(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    const /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n\nfunction NgModuleFactory__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleFactory_.prototype.moduleType;\n/** @type {?} */\nNgModuleFactory_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleFactory_.prototype._ngModuleDefFactory;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../security';\nimport {Type} from '../type';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, DepDef, ElementData, NgModuleDefinition, NgModuleProviderDef, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, splitDepsDsl, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.clearProviderOverrides = services.clearProviderOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    clearProviderOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    clearProviderOverrides: debugClearProviderOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const /** @type {?} */ root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n  const /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n  const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null,\n      [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst /** @type {?} */ providerOverrides = new Map<any, ProviderOverride>();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n  providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  for (let /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const /** @type {?} */ elIndicesWithOverwrittenProviders: number[] = [];\n    let /** @type {?} */ lastElementDef: NodeDef|null = null;\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has( /** @type {?} */((nodeDef.provider)).token)) {\n        elIndicesWithOverwrittenProviders.push( /** @type {?} */((lastElementDef)).index);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n/**\n * @param {?} viewDef\n * @param {?} elIndex\n * @return {?}\n */\nfunction applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let /** @type {?} */ i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        // Make all providers lazy, so that we don't get into trouble\n        // with ordering problems of providers on the same element\n        nodeDef.flags |= NodeFlags.LazyProvider;\n        const /** @type {?} */ provider = /** @type {?} */(( nodeDef.provider));\n        const /** @type {?} */ override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction hasOverrrides(def: NgModuleDefinition): boolean {\n    return def.providers.some(\n        node =>\n            !!(node.flags & NodeFlags.CatProviderNoDirective) && providerOverrides.has(node.token));\n  }\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverrides(def: NgModuleDefinition) {\n    for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n      const /** @type {?} */ provider = def.providers[i];\n      // Make all providers lazy, so that we don't get into trouble\n      // with ordering problems of providers on the same element\n      provider.flags |= NodeFlags.LazyProvider;\n      const /** @type {?} */ override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\ntype DebugAction = number;\nlet DebugAction: any = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\n\n\nlet /** @type {?} */ _currentAction: DebugAction;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number|null;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const /** @type {?} */ changed = ( /** @type {?} */((<any>checkAndUpdateNode)))(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const /** @type {?} */ bindingValues: {[key: string]: string} = {};\n      for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */ binding = nodeDef.bindings[i];\n        const /** @type {?} */ value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName( /** @type {?} */((binding.nonMinifiedName)))] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */ elDef = /** @type {?} */(( nodeDef.parent));\n      const /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n      if (! /** @type {?} */((elDef.element)).name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */ attr in bindingValues) {\n          const /** @type {?} */ value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  ( /** @type {?} */((<any>checkNoChangesNode)))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch ( /** @type {?} */e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elView: ViewData;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let /** @type {?} */ elDef = this.nodeDef;\n    let /** @type {?} */ elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = /** @type {?} */(( elDef.parent));\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = /** @type {?} */(( viewParentEl(elView)));\n        elView = /** @type {?} */(( elView.parent));\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n/**\n * @return {?}\n */\n\nprivate get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.index).componentView || this.view;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.elView, this.elDef); }\n/**\n * @return {?}\n */\nget component(): any { return this.elOrCompView.component; }\n/**\n * @return {?}\n */\nget context(): any { return this.elOrCompView.context; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push( /** @type {?} */((childDef.provider)).token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {\n    let /** @type {?} */ logViewDef: ViewDefinition;\n    let /** @type {?} */ logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.index;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.index;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let /** @type {?} */ currRenderNodeIndex = -1;\n    let /** @type {?} */ nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    }; /** @type {?} */((\n    logViewDef.factory))(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      ( /** @type {?} */((<any>console.error)))(...values);\n    }\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elView;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let /** @type {?} */ renderNodeIndex = -1;\n  for (let /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n    const /** @type {?} */ nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = /** @type {?} */(( view.parent));\n  }\n  if (view.parent) {\n    return asElementData(view.parent, /** @type {?} */(( viewParentEl(view))).index);\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, /** @type {?} */(( getCurrentDebugContext())));\n  }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 implements RendererFactory2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererFactory2) {}\n/**\n * @param {?} element\n * @param {?} renderData\n * @return {?}\n */\ncreateRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n/**\n * @return {?}\n */\nbegin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n/**\n * @return {?}\n */\nend() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n/**\n * @return {?}\n */\nwhenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nfunction DebugRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererFactory2.prototype.delegate;\n}\n\nclass DebugRenderer2 implements Renderer2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    removeDebugNodeFromIndex( /** @type {?} */((getDebugNode(node))));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ comment = this.delegate.createComment(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ text = this.delegate.createText(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */ debugRefEl = /** @type {?} */(( getDebugNode(refChild)));\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const /** @type {?} */ debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n\nfunction DebugRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRenderer2.prototype.delegate;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: ViewUpdateFn,\n    updateRenderer?: ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewRootNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef|null = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRenderRootNode: NodeDef|null = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent: NodeDef|null = currentParent.parent;\n      if (newParent) {\n        newParent.childFlags |= /** @type {?} */(( currentParent.childFlags));\n        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ node = nodes[i];\n    node.index = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n\n    // renderParent needs to account for ng-container!\n    let /** @type {?} */ currentRenderParent: NodeDef|null;\n    if (currentParent && currentParent.flags & NodeFlags.TypeElement &&\n        ! /** @type {?} */((currentParent.element)).name) {\n      currentRenderParent = currentParent.renderParent;\n    } else {\n      currentRenderParent = currentParent;\n    }\n    node.renderParent = currentRenderParent;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? /** @type {?} */(( currentParent.element)).publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n    }\n    validateNode(currentParent, node, nodes.length);\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n    if (node.element && node.element.template) {\n      viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n    }\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true; /** @type {?} */(( /** @type {?} */((\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent)).element)).publicProviders =\n            Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders); /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders = /** @type {?} */(( /** @type {?} */(( currentParent)).element)).publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) { /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).publicProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true; /** @type {?} */(( /** @type {?} */((\n          // Use protoyypical inheritance to not get O(n^2) complexity...\n          currentParent)).element)).allProviders =\n              Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders);\n        } /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      }\n      if (isComponent) { /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).componentProvider = node;\n      }\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = currentParent.parent;\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n    }\n    currentParent = newParent;\n  }\n  const /** @type {?} */ handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) => /** @type {?} */(( /** @type {?} */((\n      nodes[nodeIndex].element)).handleEvent))(view, eventName, event);\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP,\n    handleEvent: handleEvent || NOOP,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: Provider/Directive nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.index}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n    if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ rendererType = /** @type {?} */(( nodeDef.element)).componentRendererType;\n  let /** @type {?} */ compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, /** @type {?} */(( nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData( /** @type {?} */((view.parent)), /** @type {?} */(( /** @type {?} */(( hostDef)).parent)).index).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let /** @type {?} */ nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const /** @type {?} */ el = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        let /** @type {?} */ componentView: ViewData = /** @type {?} */(( undefined));\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const /** @type {?} */ compViewDef = resolveDefinition( /** @type {?} */(( /** @type {?} */((nodeDef.element)).componentView)));\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = /** @type {?} */(( <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: /** @type {?} */(( nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n        }));\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        if (nodeDef.flags & NodeFlags.Component) {\n          const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( nodeDef.parent)).index).componentView;\n          initView(compView, instance, instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ i = 0; i < projectedViews.length; i++) {\n          const /** @type {?} */ projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeDirective:\n      changed =\n          checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed =\n          checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeDirective:\n      changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n      break;\n  }\n  if (changed) {\n    // Update oldValues after all bindings have been updated,\n    // as a setter for a property might update other properties.\n    const /** @type {?} */ bindLen = nodeDef.bindings.length;\n    const /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n    const /** @type {?} */ oldValues = view.oldValues;\n    for (let /** @type {?} */ i = 0; i < bindLen; i++) {\n      oldValues[bindingStart + i] = values[i];\n    }\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.index), `Query ${( /** @type {?} */((nodeDef.query))).id} not dirty`,\n        `Query ${( /** @type {?} */((nodeDef.query))).id} dirty`, (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) { /** @type {?} */((\n      view.renderer.destroyNode))(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) { /** @type {?} */((\n      view.renderer.destroyNode))(asTextData(view, i).renderText);\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckNoChangesProjectedViews = 2;\nViewAction.CheckAndUpdate = 3;\nViewAction.CheckAndUpdateProjectedViews = 4;\nViewAction.Destroy = 5;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, i).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.index);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding, getParentRenderElement} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nexport function textDef(ngContentIndex: number, constants: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(constants.length - 1);\n  for (let /** @type {?} */ i = 1; i < constants.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: constants[i]\n    };\n  }\n  const /** @type {?} */ flags = NodeFlags.TypeText;\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: constants[0]},\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let /** @type {?} */ renderNode: any;\n  const /** @type {?} */ renderer = view.renderer;\n  renderNode = renderer.createText( /** @type {?} */((def.text)).prefix);\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindings = def.bindings;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let /** @type {?} */ value = /** @type {?} */(( def.text)).prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let /** @type {?} */ value = '';\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = /** @type {?} */(( def.text)).prefix + value;\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const /** @type {?} */ valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, new Array(argCount));\n}\n/**\n * @param {?} propToIndex\n * @return {?}\n */\nexport function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef {\n  const /** @type {?} */ keys = Object.keys(propToIndex);\n  const /** @type {?} */ nbKeys = keys.length;\n  const /** @type {?} */ propertyNames = new Array(nbKeys);\n  for (let /** @type {?} */ i = 0; i < nbKeys; i++) {\n    const /** @type {?} */ key = keys[i];\n    const /** @type {?} */ index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags: NodeFlags, propertyNames: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */ prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[ /** @type {?} */((bindings[0].name))] = v0;\n        if (bindLen > 1) value[ /** @type {?} */((bindings[1].name))] = v1;\n        if (bindLen > 2) value[ /** @type {?} */((bindings[2].name))] = v2;\n        if (bindLen > 3) value[ /** @type {?} */((bindings[3].name))] = v3;\n        if (bindLen > 4) value[ /** @type {?} */((bindings[4].name))] = v4;\n        if (bindLen > 5) value[ /** @type {?} */((bindings[5].name))] = v5;\n        if (bindLen > 6) value[ /** @type {?} */((bindings[6].name))] = v6;\n        if (bindLen > 7) value[ /** @type {?} */((bindings[7].name))] = v7;\n        if (bindLen > 8) value[ /** @type {?} */((bindings[8].name))] = v8;\n        if (bindLen > 9) value[ /** @type {?} */((bindings[9].name))] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[ /** @type {?} */((bindings[i].name))] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = values[0];\n        const /** @type {?} */ params = values.slice(1);\n        value = ( /** @type {?} */((<any>pipe.transform)))(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex: number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const /** @type {?} */ ngContentIndex = /** @type {?} */(( def.ngContent)).index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let /** @type {?} */ bindingDefs: QueryBindingDef[] = [];\n  for (let /** @type {?} */ propName in bindings) {\n    const /** @type {?} */ bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n/**\n * @return {?}\n */\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view: ViewData) {\n  const /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let /** @type {?} */ tplDef = /** @type {?} */(( view.parentNodeDef));\n    view = view.parent;\n    // content queries\n    const /** @type {?} */ end = tplDef.index + tplDef.childCount;\n    for (let /** @type {?} */ i = 0; i <= end; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          ( /** @type {?} */((nodeDef.query)).filterId & queryIds) === /** @type {?} */(( nodeDef.query)).filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.index) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (!queryList.dirty) {\n    return;\n  }\n  let /** @type {?} */ directiveInstance: any;\n  let /** @type {?} */ newValues: any[] = /** @type {?} */(( undefined));\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const /** @type {?} */ elementDef = /** @type {?} */(( /** @type {?} */(( nodeDef.parent)).parent));\n    newValues = calcQueryValues(\n        view, elementDef.index, elementDef.index + elementDef.childCount, /** @type {?} */(( nodeDef.query)), []);\n    directiveInstance = asProviderData(view, /** @type {?} */(( nodeDef.parent)).index).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */(( nodeDef.query)), []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const /** @type {?} */ bindings = /** @type {?} */(( nodeDef.query)).bindings;\n  let /** @type {?} */ notify = false;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ binding = bindings[i];\n    let /** @type {?} */ boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    const /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && /** @type {?} */(( nodeDef.element)).template &&\n        ( /** @type {?} */(( /** @type {?} */((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      // check embedded views that were attached at the place of their template.\n      const /** @type {?} */ elementData = asElementData(view, i);\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          const /** @type {?} */ embeddedView = embeddedViews[k];\n          const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const /** @type {?} */ projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */ projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    let /** @type {?} */ value: any;\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        value = asElementData(view, nodeDef.index).renderElement;\n        break;\n      case QueryValueType.ElementRef:\n        value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n        break;\n      case QueryValueType.TemplateRef:\n        value = asElementData(view, nodeDef.index).template;\n        break;\n      case QueryValueType.ViewContainerRef:\n        value = asElementData(view, nodeDef.index).viewContainer;\n        break;\n      case QueryValueType.Provider:\n        value = asProviderData(view, nodeDef.index).instance;\n        break;\n    }\n    return value;\n  }\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst /** @type {?} */ RendererV1TokenKey = tokenKey(RendererV1);\nconst /** @type {?} */ Renderer2TokenKey = tokenKey(Renderer2);\nconst /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nconst /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nconst /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(\n    flags: NodeFlags, matchedQueries: [string | number, QueryValueType][], childCount: number,\n    ctor: any, deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    outputs?: {[name: string]: string}): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = [];\n  if (props) {\n    for (let /** @type {?} */ prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const /** @type {?} */ outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let /** @type {?} */ propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: [string | number, QueryValueType][], token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][] | null,\n    childCount: number, token: any, value: any, deps: ([DepFlags, any] | any)[],\n    bindings?: BindingDef[], outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return def.flags & NodeFlags.LazyProvider ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let /** @type {?} */ compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const /** @type {?} */ allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass( /** @type {?} */((\n      compView.parent)), /** @type {?} */(( viewParentEl(compView))), allowPrivateServices, /** @type {?} */(( def.provider)).value, /** @type {?} */((\n      def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const /** @type {?} */ instance = createClass(\n      view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( def.provider)).value, /** @type {?} */(( def.provider)).deps);\n  if (def.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n      const /** @type {?} */ output = def.outputs[i];\n      const /** @type {?} */ subscription = instance[ /** @type {?} */((output.propName))].subscribe(\n          eventHandlerClosure(view, /** @type {?} */(( def.parent)).index, output.eventName)); /** @type {?} */((\n      view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges = /** @type {?} */(( undefined));\n  const /** @type {?} */ bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges = /** @type {?} */(( undefined));\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const /** @type {?} */ providerDef = def.provider;\n  let /** @type {?} */ injectable: any;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = createClass(\n          view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).value, /** @type {?} */(( providerDef)).deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = callFactory(\n          view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).value, /** @type {?} */(( providerDef)).deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveDep(view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = /** @type {?} */(( providerDef)).value;\n      break;\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n      break;\n    case 2:\n      injectable = new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n      break;\n    case 2:\n      injectable = factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const /** @type {?} */ NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const /** @type {?} */ startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && /** @type {?} */(( elDef.element)).componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = /** @type {?} */(( elDef.parent));\n  }\n\n  while (view) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(view, elDef.index).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(view, elDef.index).viewContainer;\n        case TemplateRefTokenKey: {\n          if ( /** @type {?} */((elDef.element)).template) {\n            return asElementData(view, elDef.index).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n          return createInjector(view, elDef);\n        default:\n          const /** @type {?} */ providerDef = /** @type {?} */((\n              (allowPrivateServices ? /** @type {?} */(( elDef.element)).allProviders : /** @type {?} */((\n                                      elDef.element)).publicProviders)))[tokenKey];\n          if (providerDef) {\n            const /** @type {?} */ providerData = asProviderData(view, providerDef.index);\n            if (providerData.instance === NOT_CREATED) {\n              providerData.instance = _createProviderInstance(view, providerDef);\n            }\n            return providerData.instance;\n          }\n      }\n    }\n    allowPrivateServices = isComponentView(view);\n    elDef = /** @type {?} */(( viewParentEl(view)));\n    view = /** @type {?} */(( view.parent));\n  }\n\n  const /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let /** @type {?} */ compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.index).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( def.parent)).index).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ propName = /** @type {?} */(( binding.name));\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    let /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    changes[ /** @type {?} */((binding.nonMinifiedName))] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */ nodes = view.def.nodes;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    const /** @type {?} */ nodeDef = nodes[i];\n    let /** @type {?} */ parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.index + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        callElementProvidersLifecycles(view, parent, lifecycles);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view: ViewData, elDef: NodeDef, lifecycles: NodeFlags) {\n  for (let /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view: ViewData, index: number, lifecycles: NodeFlags) {\n  const /** @type {?} */ provider = asProviderData(view, index).instance;\n  if (provider === NOT_CREATED) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return ( /** @type {?} */((componentFactory as ComponentFactory_))).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory<any> {\n/**\n * \\@internal\n */\nviewDefFactory: ViewDefinitionFactory;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} _inputs\n * @param {?} _outputs\n * @param {?} ngContentSelectors\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory,\nprivate _inputs: {[propName: string]: string}|null,\nprivate _outputs: {[propName: string]: string},\npublic ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n/**\n * @return {?}\n */\nget inputs() {\n    const /** @type {?} */ inputsArr: {propName: string, templateName: string}[] = [];\n    const /** @type {?} */ inputs = /** @type {?} */(( this._inputs));\n    for (let /** @type {?} */ propName in inputs) {\n      const /** @type {?} */ templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n/**\n * @return {?}\n */\nget outputs() {\n    const /** @type {?} */ outputsArr: {propName: string, templateName: string}[] = [];\n    for (let /** @type {?} */ propName in this._outputs) {\n      const /** @type {?} */ templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n    const /** @type {?} */ componentNodeIndex = /** @type {?} */(( /** @type {?} */(( viewDef.nodes[0].element)).componentProvider)).index;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype.viewDefFactory;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n/** @type {?} */\nComponentFactory_.prototype._inputs;\n/** @type {?} */\nComponentFactory_.prototype._outputs;\n/** @type {?} */\nComponentFactory_.prototype.ngContentSelectors;\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ implements ViewContainerData {\n/**\n * \\@internal\n */\n_embeddedViews: ViewData[] = [];\n/**\n * @param {?} _view\n * @param {?} _elDef\n * @param {?} _data\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef,\nprivate _data: ElementData) {}\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = /** @type {?} */(( view.parent));\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = /** @type {?} */(( detachEmbeddedView(this._data, i)));\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef|null {\n    const /** @type {?} */ view = this._embeddedViews[index];\n    if (view) {\n      const /** @type {?} */ ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget length(): number { return this._embeddedViews.length; };\n/**\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModuleRef\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const /** @type {?} */ componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    const /** @type {?} */ viewRef_ = /** @type {?} */(( <ViewRef_>viewRef));\n    const /** @type {?} */ viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    const /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef|null {\n    const /** @type {?} */ view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewContainerRef_.prototype._embeddedViews;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n/** @type {?} */\nViewContainerRef_.prototype._data;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n/**\n * \\@internal\n */\n_view: ViewData;\nprivate _viewContainerRef: ViewContainerRef|null;\nprivate _appRef: ApplicationRef|null;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { markParentViewsForCheck(this._view); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.Attached; }\n/**\n * @return {?}\n */\ndetectChanges(): void {\n    const /** @type {?} */ fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    Services.checkAndUpdateView(this._view);\n    if (fs.end) {\n      fs.end();\n    }\n  }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.Attached; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */((<any>callback)));\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n/**\n * @return {?}\n */\ndetachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n/**\n * @param {?} vcRef\n * @return {?}\n */\nattachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n/** @type {?} */\nViewRef_.prototype._viewContainerRef;\n/** @type {?} */\nViewRef_.prototype._appRef;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n/**\n * \\@internal\n */\n_projectedViews: ViewData[];\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) { super(); }\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, /** @type {?} */(( /** @type {?} */(( this._def.element)).template)), context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTemplateRef_.prototype._projectedViews;\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef|null) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const /** @type {?} */ allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view: ViewData, index: number): any {\n  const /** @type {?} */ def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const /** @type {?} */ elData = asElementData(view, def.index);\n    return /** @type {?} */(( def.element)).template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.index).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.index).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter implements RendererV1 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} parent\n * @param {?} namespaceAndName\n * @return {?}\n */\ncreateElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */ el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n/**\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n/**\n * @param {?} parentElement\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const /** @type {?} */ comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n/**\n * @param {?} parentElement\n * @param {?} value\n * @return {?}\n */\ncreateText(parentElement: Element|DocumentFragment, value: string): any {\n    const /** @type {?} */ node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n/**\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n/**\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n/**\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */ node = viewRootNodes[i];\n      const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n/**\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) { /** @type {?} */((\n      this.delegate.destroyNode))(viewAllNodes[i]);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n/**\n * @param {?} renderElement\n * @param {?} namespaceAndName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n/**\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    ( /** @type {?} */((renderElement as any)))[methodName].apply(renderElement, args);\n  }\n/**\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n/**\n * @return {?}\n */\nanimate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\nfunction RendererAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAdapter.prototype.delegate;\n}\n\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\nprivate _destroyListeners: (() => void)[] = [];\nprivate _destroyed: boolean = false;\n/**\n * \\@internal\n */\n_providers: any[];\n/**\n * @param {?} _moduleType\n * @param {?} _parent\n * @param {?} _bootstrapComponents\n * @param {?} _def\n */\nconstructor(\nprivate _moduleType: Type<any>,\npublic _parent: Injector,\npublic _bootstrapComponents: Type<any>[],\npublic _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: DepFlags.None}, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget instance() { return this.get(this._moduleType); }\n/**\n * @return {?}\n */\nget componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n\nfunction NgModuleRef__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleRef_.prototype._destroyListeners;\n/** @type {?} */\nNgModuleRef_.prototype._destroyed;\n/**\n * \\@internal\n * @type {?}\n */\nNgModuleRef_.prototype._providers;\n/** @type {?} */\nNgModuleRef_.prototype._moduleType;\n/** @type {?} */\nNgModuleRef_.prototype._parent;\n/** @type {?} */\nNgModuleRef_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleRef_.prototype._def;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, /** @type {?} */(( viewIndex)), view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const /** @type {?} */ prevView = /** @type {?} */(( viewIndex)) > 0 ? embeddedViews[ /** @type {?} */((viewIndex)) - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even accross component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate( /** @type {?} */((view.parent)).def, /** @type {?} */(( view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let /** @type {?} */ parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const /** @type {?} */ view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  const /** @type {?} */ view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */(( prevView.def.lastRenderRootNode))) :\n                                    elementData.renderElement;\n  const /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n  const /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {NgModuleRef} from '../linker/ng_module_factory';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleDefinitionFactory, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\nconst /** @type {?} */ NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const /** @type {?} */ providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers\n  };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function initNgModule(data: NgModuleData) {\n  const /** @type {?} */ def = data._def;\n  const /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    providers[i] = provDef.flags & NodeFlags.LazyProvider ? NOT_CREATED :\n                                                            _createProviderInstance(data, provDef);\n  }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  if (depDef.flags & DepFlags.SkipSelf) {\n    return data._parent.get(depDef.token, notFoundValue);\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n  switch (tokenKey) {\n    case InjectorRefTokenKey:\n    case NgModuleRefTokenKey:\n      return data;\n  }\n  const /** @type {?} */ providerDef = data._def.providersByKey[tokenKey];\n  if (providerDef) {\n    let /** @type {?} */ providerInstance = data._providers[providerDef.index];\n    if (providerInstance === NOT_CREATED) {\n      providerInstance = data._providers[providerDef.index] =\n          _createProviderInstance(data, providerDef);\n    }\n    return providerInstance;\n  }\n  return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let /** @type {?} */ injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]));\n      break;\n    case 2:\n      injectable =\n          new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveNgModuleDep(ngModule, deps[0]));\n      break;\n    case 2:\n      injectable =\n          factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const /** @type {?} */ def = ngModule._def;\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const /** @type {?} */ instance = ngModule._providers[i];\n      if (instance && instance !== NOT_CREATED) {\n        instance.ngOnDestroy();\n      }\n    }\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, handleEvent?: ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, namespaceAndName: string,\n    fixedAttrs: [string, string][] = [],\n    bindings?: [BindingFlags, string, string | SecurityContext][], outputs?: ([string, string])[],\n    handleEvent?: ElementHandleEventFn, componentView?: ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let /** @type {?} */ ns: string = /** @type {?} */(( null));\n  let /** @type {?} */ name: string = /** @type {?} */(( null));\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const /** @type {?} */ bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let /** @type {?} */ securityContext: SecurityContext = /** @type {?} */(( undefined));\n    let /** @type {?} */ suffix: string = /** @type {?} */(( undefined));\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = /** @type {?} */(( <string>suffixOrSecurityContext));\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = /** @type {?} */(( <SecurityContext>suffixOrSecurityContext));\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const /** @type {?} */ outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let /** @type {?} */ i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: /** @type {?} */(( <any>target)), eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const /** @type {?} */ attrs = /** @type {?} */(( <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  })));\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const /** @type {?} */ elDef = /** @type {?} */(( def.element));\n  const /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n  const /** @type {?} */ renderer = view.renderer;\n  let /** @type {?} */ el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n    const /** @type {?} */ output = def.outputs[i];\n    const /** @type {?} */ handleEventClosure = renderEventHandlerClosure(\n        view, def.index, elementEventFullName(output.target, output.eventName));\n    let /** @type {?} */ listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let /** @type {?} */ listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const /** @type {?} */ disposable = /** @type {?} */((\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure))); /** @type {?} */((\n    view.disposables))[def.outputIndex + i] = disposable;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindLen = def.bindings.length;\n  let /** @type {?} */ changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ elData = asElementData(view, def.index);\n  const /** @type {?} */ renderNode = elData.renderElement;\n  const /** @type {?} */ name = /** @type {?} */(( binding.name));\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const /** @type {?} */ bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const /** @type {?} */ renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const /** @type {?} */ renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let /** @type {?} */ renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */(( value as{} | string)));\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const /** @type {?} */ unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const /** @type {?} */ renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\n\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const /** @type {?} */ NOOP: any = () => {};\n\nconst /** @type {?} */ _tokenKeyCache = new Map<any, string>();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token: any): string {\n  let /** @type {?} */ key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (value instanceof WrappedValue) {\n    value = value.wrapped;\n    let /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    let /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst /** @type {?} */ UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst /** @type {?} */ EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet /** @type {?} */ _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const /** @type {?} */ isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const /** @type {?} */ oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.index), oldValue, value,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view: ViewData) {\n  let /** @type {?} */ currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let /** @type {?} */ currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean|undefined {\n  try {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    const /** @type {?} */ startView = nodeDef.flags & NodeFlags.ComponentView ?\n        asElementData(view, nodeIndex).componentView :\n        view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n  } catch ( /** @type {?} */e) {\n    // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n    view.root.errorHandler.handleError(e);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const /** @type {?} */ parentView = view.parent;\n    return asElementData(parentView, /** @type {?} */(( view.parentNodeDef)).index);\n  }\n  return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const /** @type {?} */ parentView = view.parent;\n  if (parentView) {\n    return /** @type {?} */(( view.parentNodeDef)).parent;\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.index).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.index).renderText;\n  }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!( /** @type {?} */((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !( /** @type {?} */((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const /** @type {?} */ matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let /** @type {?} */ matchedQueryIds = 0;\n  const /** @type {?} */ references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[]): DepDef[] {\n  return deps.map(value => {\n    let /** @type {?} */ token: any;\n    let /** @type {?} */ flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let /** @type {?} */ renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        ( /** @type {?} */((renderParent.element)).componentRendererType && /** @type {?} */(( /** @type {?} */((\n         renderParent.element)).componentRendererType)).encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, /** @type {?} */(( def.renderParent)).index).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst /** @type {?} */ DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let /** @type {?} */ value = /** @type {?} */(( /** @type {?} */(( DEFINITION_CACHE.get(factory)))as D));\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view: ViewData): any[] {\n  const /** @type {?} */ renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */(( view.def.lastRenderRootNode))));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let /** @type {?} */ compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const /** @type {?} */ hostView = /** @type {?} */(( compView)).parent;\n  const /** @type {?} */ hostElDef = viewParentEl( /** @type {?} */((compView)));\n  const /** @type {?} */ startIndex = /** @type {?} */(( hostElDef)).index + 1;\n  const /** @type {?} */ endIndex = /** @type {?} */(( hostElDef)).index + /** @type {?} */(( hostElDef)).childCount;\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = /** @type {?} */(( hostView)).def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode( /** @type {?} */((hostView)), nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (! /** @type {?} */((hostView)).parent) {\n    // a root view\n    const /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, /** @type {?} */(( nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n  } else {\n    const /** @type {?} */ rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const /** @type {?} */ compView = asElementData(view, nodeDef.index).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, nodeDef.index).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && ! /** @type {?} */((nodeDef.element)).name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const /** @type {?} */ renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect: /** @type {?} */((\n      target)).push(renderNode);\n      break;\n  }\n}\n\nconst /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const /** @type {?} */ match = /** @type {?} */(( name.match(NS_PREFIX_RE)));\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let /** @type {?} */ flags = 0;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let /** @type {?} */ result = '';\n  for (let /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const /** @type {?} */ EMPTY_ARRAY: any[] = [];\nexport const /** @type {?} */ EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let /** @type {?} */ msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const /** @type {?} */ err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  ( /** @type {?} */((err as any)))[ERROR_DEBUG_CONTEXT] = context;\n  ( /** @type {?} */((err as any)))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\nimport {Type} from '../type';\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\nexport function DefinitionFactory() {}\n\n\nfunction DefinitionFactory_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(logger: NodeLogger): D;\n*/\n}\n\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\nexport function NodeLogger() {}\n\n\nfunction NodeLogger_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): () => void;\n*/\n}\n\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n/**\n * @record\n */\nexport function Definition() {}\n\n\nfunction Definition_tsickle_Closure_declarations() {\n/** @type {?} */\nDefinition.prototype.factory;\n}\n\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n/**\n * @record\n */\nexport function NgModuleDefinition() {}\n\n\nfunction NgModuleDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleDefinition.prototype.providers;\n/** @type {?} */\nNgModuleDefinition.prototype.providersByKey;\n}\n\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n}\n/**\n * @record\n */\nexport function NgModuleDefinitionFactory() {}\n\n\nfunction NgModuleDefinitionFactory_tsickle_Closure_declarations() {\n}\n\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n;\n/**\n * @record\n */\nexport function ViewDefinition() {}\n\n\nfunction ViewDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nViewDefinition.prototype.flags;\n/** @type {?} */\nViewDefinition.prototype.updateDirectives;\n/** @type {?} */\nViewDefinition.prototype.updateRenderer;\n/** @type {?} */\nViewDefinition.prototype.handleEvent;\n/**\n * Order: Depth first.\n * Especially providers are before elements / anchors.\n * @type {?}\n */\nViewDefinition.prototype.nodes;\n/**\n * aggregated NodeFlags for all nodes *\n * @type {?}\n */\nViewDefinition.prototype.nodeFlags;\n/** @type {?} */\nViewDefinition.prototype.rootNodeFlags;\n/** @type {?} */\nViewDefinition.prototype.lastRenderRootNode;\n/** @type {?} */\nViewDefinition.prototype.bindingCount;\n/** @type {?} */\nViewDefinition.prototype.outputCount;\n/**\n * Binary or of all query ids that are matched by one of the nodes.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nViewDefinition.prototype.nodeMatchedQueries;\n}\n\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n/**\n * @record\n */\nexport function ViewDefinitionFactory() {}\n\n\nfunction ViewDefinitionFactory_tsickle_Closure_declarations() {\n}\n\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n/**\n * @record\n */\nexport function ViewUpdateFn() {}\n\n\nfunction ViewUpdateFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(check: NodeCheckFn, view: ViewData): void;\n*/\n}\n\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n/**\n * @record\n */\nexport function NodeCheckFn() {}\n\n\nfunction NodeCheckFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n*/\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n*/\n}\n\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline, Dynamic}\n/**\n * @record\n */\nexport function ViewHandleEventFn() {}\n\n\nfunction ViewHandleEventFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n*/\n}\n\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n/**\n * A node definition in the view.\n * \n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\nexport function NodeDef() {}\n\n\nfunction NodeDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeDef.prototype.flags;\n/** @type {?} */\nNodeDef.prototype.index;\n/** @type {?} */\nNodeDef.prototype.parent;\n/** @type {?} */\nNodeDef.prototype.renderParent;\n/**\n * this is checked against NgContentDef.index to find matched nodes\n * @type {?}\n */\nNodeDef.prototype.ngContentIndex;\n/**\n * number of transitive children\n * @type {?}\n */\nNodeDef.prototype.childCount;\n/**\n * aggregated NodeFlags for all transitive children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.childFlags;\n/**\n * aggregated NodeFlags for all direct children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.directChildFlags;\n/** @type {?} */\nNodeDef.prototype.bindingIndex;\n/** @type {?} */\nNodeDef.prototype.bindings;\n/** @type {?} */\nNodeDef.prototype.bindingFlags;\n/** @type {?} */\nNodeDef.prototype.outputIndex;\n/** @type {?} */\nNodeDef.prototype.outputs;\n/**\n * references that the user placed on the element\n * @type {?}\n */\nNodeDef.prototype.references;\n/**\n * ids and value types of all queries that are matched by this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueries;\n/**\n * Binary or of all matched query ids of this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueryIds;\n/**\n * Binary or of all query ids that are matched by one of the children.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nNodeDef.prototype.childMatchedQueries;\n/** @type {?} */\nNodeDef.prototype.element;\n/** @type {?} */\nNodeDef.prototype.provider;\n/** @type {?} */\nNodeDef.prototype.text;\n/** @type {?} */\nNodeDef.prototype.query;\n/** @type {?} */\nNodeDef.prototype.ngContent;\n}\n\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  index: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n/**\n * @record\n */\nexport function BindingDef() {}\n\n\nfunction BindingDef_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingDef.prototype.flags;\n/** @type {?} */\nBindingDef.prototype.ns;\n/** @type {?} */\nBindingDef.prototype.name;\n/** @type {?} */\nBindingDef.prototype.nonMinifiedName;\n/** @type {?} */\nBindingDef.prototype.securityContext;\n/** @type {?} */\nBindingDef.prototype.suffix;\n}\n\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n/**\n * @record\n */\nexport function OutputDef() {}\n\n\nfunction OutputDef_tsickle_Closure_declarations() {\n/** @type {?} */\nOutputDef.prototype.type;\n/** @type {?} */\nOutputDef.prototype.target;\n/** @type {?} */\nOutputDef.prototype.eventName;\n/** @type {?} */\nOutputDef.prototype.propName;\n}\n\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef,\n  RenderElement,\n  TemplateRef,\n  ViewContainerRef,\n  Provider\n}\n/**\n * @record\n */\nexport function ElementDef() {}\n\n\nfunction ElementDef_tsickle_Closure_declarations() {\n/** @type {?} */\nElementDef.prototype.name;\n/** @type {?} */\nElementDef.prototype.ns;\n/**\n * ns, name, value\n * @type {?}\n */\nElementDef.prototype.attrs;\n/** @type {?} */\nElementDef.prototype.template;\n/** @type {?} */\nElementDef.prototype.componentProvider;\n/** @type {?} */\nElementDef.prototype.componentRendererType;\n/** @type {?} */\nElementDef.prototype.componentView;\n/**\n * visible public providers for DI in the view,\n * as see from this element. This does not include private providers.\n * @type {?}\n */\nElementDef.prototype.publicProviders;\n/**\n * same as visiblePublicProviders, but also includes private providers\n * that are located on this element.\n * @type {?}\n */\nElementDef.prototype.allProviders;\n/** @type {?} */\nElementDef.prototype.handleEvent;\n}\n\n\nexport interface ElementDef {\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n/**\n * @record\n */\nexport function ElementHandleEventFn() {}\n\n\nfunction ElementHandleEventFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, eventName: string, event: any): boolean;\n*/\n}\n\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n/**\n * @record\n */\nexport function ProviderDef() {}\n\n\nfunction ProviderDef_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderDef.prototype.token;\n/** @type {?} */\nProviderDef.prototype.value;\n/** @type {?} */\nProviderDef.prototype.deps;\n}\n\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n/**\n * @record\n */\nexport function NgModuleProviderDef() {}\n\n\nfunction NgModuleProviderDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleProviderDef.prototype.flags;\n/** @type {?} */\nNgModuleProviderDef.prototype.index;\n/** @type {?} */\nNgModuleProviderDef.prototype.token;\n/** @type {?} */\nNgModuleProviderDef.prototype.value;\n/** @type {?} */\nNgModuleProviderDef.prototype.deps;\n}\n\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n/**\n * @record\n */\nexport function DepDef() {}\n\n\nfunction DepDef_tsickle_Closure_declarations() {\n/** @type {?} */\nDepDef.prototype.flags;\n/** @type {?} */\nDepDef.prototype.token;\n/** @type {?} */\nDepDef.prototype.tokenKey;\n}\n\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Value = 2 << 2,\n}\n/**\n * @record\n */\nexport function TextDef() {}\n\n\nfunction TextDef_tsickle_Closure_declarations() {\n/** @type {?} */\nTextDef.prototype.prefix;\n}\n\n\nexport interface TextDef { prefix: string; }\n/**\n * @record\n */\nexport function QueryDef() {}\n\n\nfunction QueryDef_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryDef.prototype.id;\n/** @type {?} */\nQueryDef.prototype.filterId;\n/** @type {?} */\nQueryDef.prototype.bindings;\n}\n\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n/**\n * @record\n */\nexport function QueryBindingDef() {}\n\n\nfunction QueryBindingDef_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBindingDef.prototype.propName;\n/** @type {?} */\nQueryBindingDef.prototype.bindingType;\n}\n\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First, All}\n/**\n * @record\n */\nexport function NgContentDef() {}\n\n\nfunction NgContentDef_tsickle_Closure_declarations() {\n/**\n * this index is checked against NodeDef.ngContentIndex to find the nodes\n * that are matched by this ng-content.\n * Note that a NodeDef with an ng-content can be reprojected, i.e.\n * have a ngContentIndex on its own.\n * @type {?}\n */\nNgContentDef.prototype.index;\n}\n\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n/**\n * @record\n */\nexport function NgModuleData() {}\n\n\nfunction NgModuleData_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleData.prototype._def;\n/** @type {?} */\nNgModuleData.prototype._parent;\n/** @type {?} */\nNgModuleData.prototype._providers;\n}\n\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ViewData() {}\n\n\nfunction ViewData_tsickle_Closure_declarations() {\n/** @type {?} */\nViewData.prototype.def;\n/** @type {?} */\nViewData.prototype.root;\n/** @type {?} */\nViewData.prototype.renderer;\n/** @type {?} */\nViewData.prototype.parentNodeDef;\n/** @type {?} */\nViewData.prototype.parent;\n/** @type {?} */\nViewData.prototype.viewContainerParent;\n/** @type {?} */\nViewData.prototype.component;\n/** @type {?} */\nViewData.prototype.context;\n/** @type {?} */\nViewData.prototype.nodes;\n/** @type {?} */\nViewData.prototype.state;\n/** @type {?} */\nViewData.prototype.oldValues;\n/** @type {?} */\nViewData.prototype.disposables;\n}\n\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges\n}\n/**\n * @record\n */\nexport function DisposableFn() {}\n\n\nfunction DisposableFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): void;\n*/\n}\n\n\nexport interface DisposableFn { (): void; }\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n/**\n * Data for an instantiated NodeType.Text.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function TextData() {}\n\n\nfunction TextData_tsickle_Closure_declarations() {\n/** @type {?} */\nTextData.prototype.renderText;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.Element.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ElementData() {}\n\n\nfunction ElementData_tsickle_Closure_declarations() {\n/** @type {?} */\nElementData.prototype.renderElement;\n/** @type {?} */\nElementData.prototype.componentView;\n/** @type {?} */\nElementData.prototype.viewContainer;\n/** @type {?} */\nElementData.prototype.template;\n}\n\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n/**\n * @record\n */\nexport function ViewContainerData() {}\n\n\nfunction ViewContainerData_tsickle_Closure_declarations() {\n/** @type {?} */\nViewContainerData.prototype._embeddedViews;\n}\n\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n/**\n * @record\n */\nexport function TemplateData() {}\n\n\nfunction TemplateData_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateData.prototype._projectedViews;\n}\n\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.Provider.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ProviderData() {}\n\n\nfunction ProviderData_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderData.prototype.instance;\n}\n\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function PureExpressionData() {}\n\n\nfunction PureExpressionData_tsickle_Closure_declarations() {\n/** @type {?} */\nPureExpressionData.prototype.value;\n}\n\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * @record\n */\nexport function RootData() {}\n\n\nfunction RootData_tsickle_Closure_declarations() {\n/** @type {?} */\nRootData.prototype.injector;\n/** @type {?} */\nRootData.prototype.ngModule;\n/** @type {?} */\nRootData.prototype.projectableNodes;\n/** @type {?} */\nRootData.prototype.selectorOrNode;\n/** @type {?} */\nRootData.prototype.renderer;\n/** @type {?} */\nRootData.prototype.rendererFactory;\n/** @type {?} */\nRootData.prototype.errorHandler;\n/** @type {?} */\nRootData.prototype.sanitizer;\n}\n\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n/**\n * @abstract\n */\nexport abstract class DebugContext {\n  abstract get view(): ViewData;\n  abstract get nodeIndex(): number|null;\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get componentRenderElement(): any;\n  abstract get renderNode(): any;\n  abstract logError(console: Console, ...values: any[]): void;\n}\n\nfunction DebugContext_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.view = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.nodeIndex = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.injector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.component = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.providerTokens = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.references = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.context = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.componentRenderElement = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.renderNode = function() {};\n\n/**\n * @abstract\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nDebugContext.prototype.logError = function(console, values) {};\n}\n\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n/**\n * @record\n */\nexport function ProviderOverride() {}\n\n\nfunction ProviderOverride_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderOverride.prototype.token;\n/** @type {?} */\nProviderOverride.prototype.flags;\n/** @type {?} */\nProviderOverride.prototype.value;\n/** @type {?} */\nProviderOverride.prototype.deps;\n}\n\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  clearProviderOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const /** @type {?} */ Services: Services = {\n  setCurrentNode: /** @type {?} */(( undefined)),\n  createRootView: /** @type {?} */(( undefined)),\n  createEmbeddedView: /** @type {?} */(( undefined)),\n  createComponentView: /** @type {?} */(( undefined)),\n  createNgModuleRef: /** @type {?} */(( undefined)),\n  overrideProvider: /** @type {?} */(( undefined)),\n  clearProviderOverrides: /** @type {?} */(( undefined)),\n  checkAndUpdateView: /** @type {?} */(( undefined)),\n  checkNoChangesView: /** @type {?} */(( undefined)),\n  destroyView: /** @type {?} */(( undefined)),\n  resolveDep: /** @type {?} */(( undefined)),\n  createDebugContext: /** @type {?} */(( undefined)),\n  handleEvent: /** @type {?} */(( undefined)),\n  updateDirectives: /** @type {?} */(( undefined)),\n  updateRenderer: /** @type {?} */(( undefined)),\n  dirtyParentQueries: /** @type {?} */(( undefined)),\n};\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport type SecurityContext = number;\nexport let SecurityContext: any = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Sanitizer {\n  abstract sanitize(context: SecurityContext, value: {}|string|null): string|null;\n}\n\nfunction Sanitizer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nSanitizer.prototype.sanitize = function(context, value) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationInitStatus} from './application_init';\nimport {ApplicationRef, ApplicationRef_} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n * \n * \\@experimental\n */\nexport class ApplicationModule {\n/**\n * @param {?} appRef\n */\nconstructor(appRef: ApplicationRef) {}\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{\n  providers: [\n    ApplicationRef_,\n    {provide: ApplicationRef, useExisting: ApplicationRef_},\n    ApplicationInitStatus,\n    Compiler,\n    APP_ID_RANDOM_PROVIDER,\n    {provide: IterableDiffers, useFactory: _iterableDiffersFactory},\n    {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory},\n    {\n      provide: LOCALE_ID,\n      useFactory: _localeFactory,\n      deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ApplicationRef, },\n];\n}\n\nfunction ApplicationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationModule.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const /** @type {?} */ LOCALE_ID = new InjectionToken<string>('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const /** @type {?} */ TRANSLATIONS = new InjectionToken<string>('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const /** @type {?} */ TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\nexport type MissingTranslationStrategy = number;\nexport let MissingTranslationStrategy: any = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, PlatformRef_, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Provider} from './di';\nimport {Reflector, reflector} from './reflection/reflection';\nimport {TestabilityRegistry} from './testability/testability';\n/**\n * @return {?}\n */\nfunction _reflector(): Reflector {\n  return reflector;\n}\n\nconst /** @type {?} */ _CORE_PLATFORM_PROVIDERS: Provider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  PlatformRef_,\n  {provide: PlatformRef, useExisting: PlatformRef_},\n  {provide: Reflector, useFactory: _reflector, deps: []},\n  TestabilityRegistry,\n  Console,\n];\n/**\n * This platform has to be included in any other platform\n * \n * \\@experimental\n */\nexport const /** @type {?} */ platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\nexport {ChangeDetectionStrategy, ChangeDetectorRef, CollectionChangeRecord, DefaultIterableDiffer, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers, NgIterable, PipeTransform, SimpleChange, SimpleChanges, TrackByFn, TrackByFunction, WrappedValue} from './change_detection/change_detection';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, ValueUnwrapper, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFn, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst /** @type {?} */ keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst /** @type {?} */ iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * To create a Pipe, you must implement this interface.\n * \n * Angular invokes the `transform` method with the value of a binding\n * as the first argument, and any parameters as the second argument in list form.\n * \n * ## Syntax\n * \n * `value | pipeName[:arg0[:arg1...]]`\n * \n * ### Example ([live demo](http://plnkr.co/edit/f5oyIked9M2cKzvZNKHV?p=preview))\n * \n * The `RepeatPipe` below repeats the value as many times as indicated by the first argument:\n * \n * ```\n * import {Pipe, PipeTransform} from '\\@angular/core';\n * \n * \\@Pipe({name: 'repeat'})\n * export class RepeatPipe implements PipeTransform {\n *   transform(value: any, times: number) {\n *     return value.repeat(times);\n *   }\n * }\n * ```\n * \n * Invoking `{{ 'ok' | repeat:3 }}` in a template produces `okokok`.\n * \n * \\@stable\n * @record\n */\nexport function PipeTransform() {}\n\n\nfunction PipeTransform_tsickle_Closure_declarations() {\n/** @type {?} */\nPipeTransform.prototype.transform;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * To create a Pipe, you must implement this interface.\n *\n * Angular invokes the `transform` method with the value of a binding\n * as the first argument, and any parameters as the second argument in list form.\n *\n * ## Syntax\n *\n * `value | pipeName[:arg0[:arg1...]]`\n *\n * ### Example ([live demo](http://plnkr.co/edit/f5oyIked9M2cKzvZNKHV?p=preview))\n *\n * The `RepeatPipe` below repeats the value as many times as indicated by the first argument:\n *\n * ```\n * import {Pipe, PipeTransform} from '@angular/core';\n *\n * @Pipe({name: 'repeat'})\n * export class RepeatPipe implements PipeTransform {\n *   transform(value: any, times: number) {\n *     return value.repeat(times);\n *   }\n * }\n * ```\n *\n * Invoking `{{ 'ok' | repeat:3 }}` in a template produces `okokok`.\n *\n * @stable\n */\nexport interface PipeTransform { transform(value: any, ...args: any[]): any; }\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n/**\n * A differ that tracks changes made to an object over time.\n * \n * \\@stable\n * @record\n */\nexport function KeyValueDiffer() {}\n\n\nfunction KeyValueDiffer_tsickle_Closure_declarations() {\n/**\n * Compute a difference between the previous state and the new `object` state.\n * \n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nKeyValueDiffer.prototype.diff;\n/**\n * Compute a difference between the previous state and the new `object` state.\n * \n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nKeyValueDiffer.prototype.diff;\n}\n\n\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @stable\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n * \n * \\@stable\n * @record\n */\nexport function KeyValueChanges() {}\n\n\nfunction KeyValueChanges_tsickle_Closure_declarations() {\n/**\n * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n * to each item.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachItem;\n/**\n * Iterate over changes in the order of original Map showing where the original items\n * have moved.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachPreviousItem;\n/**\n * Iterate over all keys for which values have changed.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachChangedItem;\n/**\n * Iterate over all added items.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachAddedItem;\n/**\n * Iterate over all removed items.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachRemovedItem;\n}\n\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n/**\n * Record representing the item change information.\n * \n * \\@stable\n * @record\n */\nexport function KeyValueChangeRecord() {}\n\n\nfunction KeyValueChangeRecord_tsickle_Closure_declarations() {\n/**\n * Current key in the Map.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.key;\n/**\n * Current value for the key or `null` if removed.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.currentValue;\n/**\n * Previous value for the key or `null` if added.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.previousValue;\n}\n\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n * \n * \\@stable\n * @record\n */\nexport function KeyValueDifferFactory() {}\n\n\nfunction KeyValueDifferFactory_tsickle_Closure_declarations() {\n/**\n * Test to see if the differ knows how to diff this kind of object.\n * @type {?}\n */\nKeyValueDifferFactory.prototype.supports;\n/**\n * Create a `KeyValueDiffer`.\n * @type {?}\n */\nKeyValueDifferFactory.prototype.create;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @type {?}\n */\nKeyValueDifferFactory.prototype.create;\n}\n\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @stable\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<K, V>(_cdr?: ChangeDetectorRef): KeyValueDiffer<K, V>;\n}\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nexport class KeyValueDiffers {\n/**\n * @deprecated v4.0.0 - Should be private.\n */\nfactories: KeyValueDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n/**\n * @template S\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n/**\n * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n * {\\@link KeyValueDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n *   ]\n * })\n * ```\n * @template S\n * @param {?} factories\n * @return {?}\n */\nstatic extend<S>(factories: KeyValueDifferFactory[]): Provider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} kv\n * @return {?}\n */\nfind(kv: any): KeyValueDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n\nfunction KeyValueDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private.\n * @type {?}\n */\nKeyValueDiffers.prototype.factories;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n/**\n * A type describing supported iterable types.\n *\n * @stable\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n * \n * \\@stable\n * @record\n */\nexport function IterableDiffer() {}\n\n\nfunction IterableDiffer_tsickle_Closure_declarations() {\n/**\n * Compute a difference between the previous state and the new `object` state.\n * \n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nIterableDiffer.prototype.diff;\n}\n\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @stable\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>|null;\n}\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n * \n * \\@stable\n * @record\n */\nexport function IterableChanges() {}\n\n\nfunction IterableChanges_tsickle_Closure_declarations() {\n/**\n * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n * to each item.\n * @type {?}\n */\nIterableChanges.prototype.forEachItem;\n/**\n * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n * new `Iterable`.\n * \n * NOTE: These are not necessarily the actual operations which were applied to the original\n * `Iterable`, rather these are a set of computed operations which may not be the same as the\n * ones applied.\n * \n * \\@param record A change which needs to be applied\n * \\@param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n *        original `Iterable` location, where as `previousIndex` refers to the transient location\n *        of the item, after applying the operations up to this point.\n * \\@param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n *        original `Iterable` location, where as `currentIndex` refers to the transient location\n *        of the item, after applying the operations up to this point.\n * @type {?}\n */\nIterableChanges.prototype.forEachOperation;\n/**\n * Iterate over changes in the order of original `Iterable` showing where the original items\n * have moved.\n * @type {?}\n */\nIterableChanges.prototype.forEachPreviousItem;\n/**\n * Iterate over all added items.\n * @type {?}\n */\nIterableChanges.prototype.forEachAddedItem;\n/**\n * Iterate over all moved items.\n * @type {?}\n */\nIterableChanges.prototype.forEachMovedItem;\n/**\n * Iterate over all removed items.\n * @type {?}\n */\nIterableChanges.prototype.forEachRemovedItem;\n/**\n * Iterate over all items which had their identity (as computed by the `trackByFn`) changed.\n * @type {?}\n */\nIterableChanges.prototype.forEachIdentityChange;\n}\n\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn: (record: IterableChangeRecord<V>, previousIndex: number, currentIndex: number) => void):\n      void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `trackByFn`) changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n/**\n * Record representing the item change information.\n * \n * \\@stable\n * @record\n */\nexport function IterableChangeRecord() {}\n\n\nfunction IterableChangeRecord_tsickle_Closure_declarations() {\n/**\n * Current index of the item in `Iterable` or null if removed.\n * @type {?}\n */\nIterableChangeRecord.prototype.currentIndex;\n/**\n * Previous index of the item in `Iterable` or null if added.\n * @type {?}\n */\nIterableChangeRecord.prototype.previousIndex;\n/**\n * The item.\n * @type {?}\n */\nIterableChangeRecord.prototype.item;\n/**\n * Track by identity as computed by the `trackByFn`.\n * @type {?}\n */\nIterableChangeRecord.prototype.trackById;\n}\n\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `trackByFn`. */\n  readonly trackById: any;\n}\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\nexport function CollectionChangeRecord() {}\n\n\nfunction CollectionChangeRecord_tsickle_Closure_declarations() {\n}\n\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n/**\n * Nolonger used.\n * \n * @deprecated v4.0.0 - Use TrackByFunction instead\n * @record\n */\nexport function TrackByFn() {}\n\n\nfunction TrackByFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(index: number, item: any): any;\n*/\n}\n\n\n\n/**\n * Nolonger used.\n *\n * @deprecated v4.0.0 - Use TrackByFunction instead\n */\nexport interface TrackByFn { (index: number, item: any): any; }\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n * \n * \\@stable\n * @record\n */\nexport function TrackByFunction() {}\n\n\nfunction TrackByFunction_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(index: number, item: T): any;\n*/\n}\n\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @stable\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n * \n * \\@stable\n * @record\n */\nexport function IterableDifferFactory() {}\n\n\nfunction IterableDifferFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nIterableDifferFactory.prototype.supports;\n/** @type {?} */\nIterableDifferFactory.prototype.create;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @type {?}\n */\nIterableDifferFactory.prototype.create;\n}\n\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @stable\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<V>(_cdr?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      IterableDiffer<V>;\n}\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nexport class IterableDiffers {\n/**\n * @deprecated v4.0.0 - Should be private\n */\nfactories: IterableDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n/**\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n      return new IterableDiffers(factories);\n    } else {\n      return new IterableDiffers(factories);\n    }\n  }\n/**\n * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n * {\\@link IterableDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link IterableDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     IterableDiffers.extend([new ImmutableListDiffer()])\n *   ]\n * })\n * ```\n * @param {?} factories\n * @return {?}\n */\nstatic extend(factories: IterableDifferFactory[]): Provider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} iterable\n * @return {?}\n */\nfind(iterable: any): IterableDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nfunction IterableDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private\n * @type {?}\n */\nIterableDiffers.prototype.factories;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): DefaultKeyValueDiffer<K, V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template K, V\n * @param {?=} cd\n * @return {?}\n */\ncreate<K, V>(cd?: ChangeDetectorRef): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\nprivate _records = new Map<K, KeyValueChangeRecord_<K, V>>();\nprivate _mapHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\nprivate _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _changesHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _changesTail: KeyValueChangeRecord_<K, V>|null = null;\nprivate _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\nprivate _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?=} map\n * @return {?}\n */\ndiff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(\n          `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * Check the current state of the map vs the previous.\n * The algorithm is optimised for when the keys do no change.\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let /** @type {?} */ insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const /** @type {?} */ record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n/**\n * Inserts a record before `before` or append at the end of the list when `before` is null.\n * \n * Notes:\n * - This method appends at `this._appendAfter`,\n * - This method updates `this._appendAfter`,\n * - The return value is the new value for the insertion pointer.\n * @param {?} before\n * @param {?} record\n * @return {?}\n */\n\nprivate _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const /** @type {?} */ prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\n\nprivate _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const /** @type {?} */ record = /** @type {?} */(( this._records.get(key)));\n      this._maybeAddToChanges(record, value);\n      const /** @type {?} */ prev = record._prev;\n      const /** @type {?} */ next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const /** @type {?} */ record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\n\nprivate _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\n\nprivate _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else { /** @type {?} */((\n      this._additionsTail))._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\n\nprivate _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else { /** @type {?} */((\n      this._changesTail))._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * \\@internal\n * @template K, V\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\n\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._appendAfter;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n/**\n * \\@internal\n */\n_nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_next: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_prev: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * @param {?} key\n */\nconstructor(public key: K) {}\n}\n\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord_.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.key;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: Object|null|undefined): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template V\n * @param {?=} cdRefOrTrackBy\n * @param {?=} trackByFn\n * @return {?}\n */\ncreate<V>(cdRefOrTrackBy?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn || /** @type {?} */(( <TrackByFunction<any>>cdRefOrTrackBy)));\n  }\n}\n\nconst /** @type {?} */ trackByIdentity = (index: number, item: any) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\nprivate _length: number = 0;\nprivate _collection: NgIterable<V>|null = null;\nprivate _linkedRecords: _DuplicateMap<V>|null = null;\nprivate _unlinkedRecords: _DuplicateMap<V>|null = null;\nprivate _previousItHead: IterableChangeRecord_<V>|null = null;\nprivate _itHead: IterableChangeRecord_<V>|null = null;\nprivate _itTail: IterableChangeRecord_<V>|null = null;\nprivate _additionsHead: IterableChangeRecord_<V>|null = null;\nprivate _additionsTail: IterableChangeRecord_<V>|null = null;\nprivate _movesHead: IterableChangeRecord_<V>|null = null;\nprivate _movesTail: IterableChangeRecord_<V>|null = null;\nprivate _removalsHead: IterableChangeRecord_<V>|null = null;\nprivate _removalsTail: IterableChangeRecord_<V>|null = null;\nprivate _identityChangesHead: IterableChangeRecord_<V>|null = null;\nprivate _identityChangesTail: IterableChangeRecord_<V>|null = null;\nprivate _trackByFn: TrackByFunction<V>;\n/**\n * @param {?=} trackByFn\n */\nconstructor(trackByFn?: TrackByFunction<V>) { this._trackByFn = trackByFn || trackByIdentity; }\n/**\n * @return {?}\n */\nget collection() { return this._collection; }\n/**\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let /** @type {?} */ nextIt = this._itHead;\n    let /** @type {?} */ nextRemove = this._removalsHead;\n    let /** @type {?} */ addRemoveOffset = 0;\n    let /** @type {?} */ moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const /** @type {?} */ record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt && /** @type {?} */((\n                  nextIt.currentIndex)) <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */((\n          nextIt)) :\n          nextRemove;\n      const /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const /** @type {?} */ currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = /** @type {?} */(( nextIt))._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const /** @type {?} */ localCurrentIndex = /** @type {?} */(( currentIndex)) - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n              const /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const /** @type {?} */ index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const /** @type {?} */ previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} collection\n * @return {?}\n */\ndiff(collection: NgIterable<V>): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(\n          `Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} collection\n * @return {?}\n */\ncheck(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null = this._itHead;\n    let /** @type {?} */ mayBeDirty: boolean = false;\n    let /** @type {?} */ index: number;\n    let /** @type {?} */ item: V;\n    let /** @type {?} */ itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      this._length = collection.length;\n\n      for (let /** @type {?} */ index = 0; index < this._length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      this._length = index;\n    }\n\n    this._truncate(record);\n    this._collection = collection;\n    return this.isDirty;\n  }\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n/**\n * Reset the state of the change objects to show no changes. This means set previousKey to\n * currentKey, and clear all of the queues (additions, moves, removals).\n * Set the previousIndexes of moved and added items to their currentIndexes\n * Reset the list of additions, moves and removals\n * \n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n      let /** @type {?} */ nextRecord: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // todo(vicb) when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n/**\n * This is the core function which handles differences between collections.\n * \n * - `record` is the record which we saw at this position last time. If null then it is a new\n *   item.\n * - `item` is the current item in the collection\n * - `index` is the position of the item in the collection\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let /** @type {?} */ previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n/**\n * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n * \n * Use case: `[a, a]` => `[b, a, a]`\n * \n * If we did not have this check then the insertion of `b` would:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) leave `a` at index `1` as is. <-- this is wrong!\n *   3) reinsert `a` at index 2. <-- this is wrong!\n * \n * The correct behavior is:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) reinsert `a` at index 1.\n *   3) move `a` at from `1` to `2`.\n * \n * \n * Double check that we have not evicted a duplicate item. We need to check if the item type may\n * have already been removed:\n * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n * at the end.\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let /** @type {?} */ reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, /** @type {?} */(( record._prev)), index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n/**\n * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n * \n * - `record` The first excess {\\@link IterableChangeRecord_}.\n * \n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const /** @type {?} */ nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // todo(vicb)\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const /** @type {?} */ next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // todo(vicb)\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const /** @type {?} */ prev = record._prev;\n    const /** @type {?} */ next = record._next;\n\n    // todo(vicb)\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} toIndex\n * @return {?}\n */\n_addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // todo(vicb)\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\n\nprivate _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // todo(vicb)\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // todo(vicb)\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} item\n * @return {?}\n */\n_addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ list: IterableChangeRecord_<V>[] = [];\n    this.forEachItem((record: IterableChangeRecord_<V>) => list.push(record));\n\n    const /** @type {?} */ previous: IterableChangeRecord_<V>[] = [];\n    this.forEachPreviousItem((record: IterableChangeRecord_<V>) => previous.push(record));\n\n    const /** @type {?} */ additions: IterableChangeRecord_<V>[] = [];\n    this.forEachAddedItem((record: IterableChangeRecord_<V>) => additions.push(record));\n\n    const /** @type {?} */ moves: IterableChangeRecord_<V>[] = [];\n    this.forEachMovedItem((record: IterableChangeRecord_<V>) => moves.push(record));\n\n    const /** @type {?} */ removals: IterableChangeRecord_<V>[] = [];\n    this.forEachRemovedItem((record: IterableChangeRecord_<V>) => removals.push(record));\n\n    const /** @type {?} */ identityChanges: IterableChangeRecord_<V>[] = [];\n    this.forEachIdentityChange((record: IterableChangeRecord_<V>) => identityChanges.push(record));\n\n    return 'collection: ' + list.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'moves: ' + moves.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n' +\n        'identityChanges: ' + identityChanges.join(', ') + '\\n';\n  }\n}\n\nfunction DefaultIterableDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultIterableDiffer.prototype._length;\n/** @type {?} */\nDefaultIterableDiffer.prototype._collection;\n/** @type {?} */\nDefaultIterableDiffer.prototype._linkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._unlinkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._previousItHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._trackByFn;\n}\n\n/**\n * \\@stable\n */\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n/**\n * \\@internal\n */\n_nextPrevious: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prev: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_next: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prevDup: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextDup: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prevRemoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextRemoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextAdded: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextMoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextIdentityChange: IterableChangeRecord_<V>|null = null;\n/**\n * @param {?} item\n * @param {?} trackById\n */\nconstructor(public item: V,\npublic trackById: any) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                                                      stringify(this.item) + '[' +\n            stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n  }\n}\n\nfunction IterableChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nIterableChangeRecord_.prototype.currentIndex;\n/** @type {?} */\nIterableChangeRecord_.prototype.previousIndex;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextMoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextIdentityChange;\n/** @type {?} */\nIterableChangeRecord_.prototype.item;\n/** @type {?} */\nIterableChangeRecord_.prototype.trackById;\n}\n\nclass _DuplicateItemRecordList<V> {\n/**\n * \\@internal\n */\n_head: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_tail: IterableChangeRecord_<V>|null = null;\n/**\n * Append the record to the list of duplicates.\n * \n * Note: by design all records in the list of duplicates hold the same value in record.item.\n * @param {?} record\n * @return {?}\n */\nadd(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else { /** @type {?} */((\n      // todo(vicb)\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail))._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n/**\n * @param {?} trackById\n * @param {?} atOrAfterIndex\n * @return {?}\n */\nget(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */(( record.currentIndex))) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n/**\n * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * Returns whether the list of duplicates is empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): boolean {\n    // todo(vicb)\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const /** @type {?} */ prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const /** @type {?} */ next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nfunction _DuplicateItemRecordList_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._head;\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._tail;\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n/**\n * @param {?} record\n * @return {?}\n */\nput(record: IterableChangeRecord_<V>) {\n    const /** @type {?} */ key = record.trackById;\n\n    let /** @type {?} */ duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n/**\n * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n * \n * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n * have any more `a`s needs to return the second `a`.\n * @param {?} trackById\n * @param {?} atOrAfterIndex\n * @return {?}\n */\nget(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const /** @type {?} */ key = trackById;\n    const /** @type {?} */ recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n/**\n * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * The list of duplicates also is removed from the map if it gets empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const /** @type {?} */ key = record.trackById;\n    const /** @type {?} */ recordList: _DuplicateItemRecordList<V> = /** @type {?} */(( this.map.get(key)));\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\nget isEmpty(): boolean { return this.map.size === 0; }\n/**\n * @return {?}\n */\nclear() { this.map.clear(); }\n/**\n * @return {?}\n */\ntoString(): string { return '_DuplicateMap(' + stringify(this.map) + ')'; }\n}\n\nfunction _DuplicateMap_tsickle_Closure_declarations() {\n/** @type {?} */\n_DuplicateMap.prototype.map;\n}\n\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(\n    item: any, addRemoveOffset: number, moveOffsets: number[] | null): number {\n  const /** @type {?} */ previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let /** @type {?} */ moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a: any, b: any): boolean {\n  const /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n  const /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n * \n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n * \n * Example:\n * \n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nexport class WrappedValue {\n/**\n * @param {?} wrapped\n */\nconstructor(public wrapped: any) {}\n/**\n * @param {?} value\n * @return {?}\n */\nstatic wrap(value: any): WrappedValue { return new WrappedValue(value); }\n}\n\nfunction WrappedValue_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedValue.prototype.wrapped;\n}\n\n/**\n * Helper class for unwrapping WrappedValue s\n */\nexport class ValueUnwrapper {\npublic hasWrappedValue = false;\n/**\n * @param {?} value\n * @return {?}\n */\nunwrap(value: any): any {\n    if (value instanceof WrappedValue) {\n      this.hasWrappedValue = true;\n      return value.wrapped;\n    }\n    return value;\n  }\n/**\n * @return {?}\n */\nreset() { this.hasWrappedValue = false; }\n}\n\nfunction ValueUnwrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nValueUnwrapper.prototype.hasWrappedValue;\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nexport class SimpleChange {\n/**\n * @param {?} previousValue\n * @param {?} currentValue\n * @param {?} firstChange\n */\nconstructor(public previousValue: any,\npublic currentValue: any,\npublic firstChange: boolean) {}\n/**\n * Check whether the new value is the first value assigned.\n * @return {?}\n */\nisFirstChange(): boolean { return this.firstChange; }\n}\n\nfunction SimpleChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleChange.prototype.previousValue;\n/** @type {?} */\nSimpleChange.prototype.currentValue;\n/** @type {?} */\nSimpleChange.prototype.firstChange;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const /** @type {?} */ item1 = iterator1.next();\n    const /** @type {?} */ item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */ item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {DebugContext} from '../view/index';\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function){}; }\n\nfunction EventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nEventListener.prototype.name;\n/** @type {?} */\nEventListener.prototype.callback;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement|null;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: DebugNode|null,\nprivate _debugContext: DebugContext) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._debugContext.injector; }\n/**\n * @return {?}\n */\nget componentInstance(): any { return this._debugContext.component; }\n/**\n * @return {?}\n */\nget context(): any { return this._debugContext.context; }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} { return this._debugContext.references; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] { return this._debugContext.providerTokens; }\n/**\n * @deprecated since v4\n * @return {?}\n */\nget source(): string { return 'Deprecated since v4'; }\n}\n\nfunction DebugNode_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugNode.prototype.nativeNode;\n/** @type {?} */\nDebugNode.prototype.listeners;\n/** @type {?} */\nDebugNode.prototype.parent;\n/** @type {?} */\nDebugNode.prototype._debugContext;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string | null};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string | null};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n/**\n * @param {?} refChild\n * @param {?} newChild\n * @return {?}\n */\ninsertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    const /** @type {?} */ results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @return {?}\n */\nget children(): DebugElement[] {\n    return /** @type {?} */(( this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[]));\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction DebugElement_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugElement.prototype.name;\n/** @type {?} */\nDebugElement.prototype.properties;\n/** @type {?} */\nDebugElement.prototype.attributes;\n/** @type {?} */\nDebugElement.prototype.classes;\n/** @type {?} */\nDebugElement.prototype.styles;\n/** @type {?} */\nDebugElement.prototype.childNodes;\n/** @type {?} */\nDebugElement.prototype.nativeElement;\n}\n\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n * \n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\nexport function Predicate() {}\n\n\nfunction Predicate_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(value: T): boolean;\n*/\n}\n\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @experimental All debugging apis are currently experimental.\n */\nexport interface Predicate<T> { (value: T): boolean; }\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for compiler\nexport {COMPILER_OPTIONS, Compiler, CompilerFactory, CompilerOptions, ModuleWithComponentFactories} from './linker/compiler';\nexport {ComponentFactory, ComponentRef} from './linker/component_factory';\nexport {ComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {ElementRef} from './linker/element_ref';\nexport {NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nexport {NgModuleFactoryLoader, getModuleFactory} from './linker/ng_module_factory_loader';\nexport {QueryList} from './linker/query_list';\nexport {SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig} from './linker/system_js_ng_module_factory_loader';\nexport {TemplateRef} from './linker/template_ref';\nexport {ViewContainerRef} from './linker/view_container_ref';\nexport {EmbeddedViewRef, ViewRef} from './linker/view_ref';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ViewRef extends ChangeDetectorRef {\n  /**\n   * Destroys the view and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  abstract get destroyed(): boolean;\n\n  abstract onDestroy(callback: Function): any /** TODO #9100 */;\n}\n\nfunction ViewRef_tsickle_Closure_declarations() {\n\n/**\n * Destroys the view and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\nViewRef.prototype.destroy = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nViewRef.prototype.destroyed = function() {};\n\n/**\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nViewRef.prototype.onDestroy = function(callback) {};\n}\n\n/**\n * Represents an Angular View.\n * \n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n * \n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n * \n * ### Example\n * \n * Given this template...\n * \n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n * \n * We have two {\\@link TemplateRef}s:\n * \n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n * \n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n * \n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n * \n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n * \n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n  abstract get context(): C;\n\n  abstract get rootNodes(): any[];\n}\n\nfunction EmbeddedViewRef_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nEmbeddedViewRef.prototype.context = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nEmbeddedViewRef.prototype.rootNodes = function() {};\n}\n\n/**\n * @record\n */\nexport function InternalViewRef() {}\n\n\nfunction InternalViewRef_tsickle_Closure_declarations() {\n/** @type {?} */\nInternalViewRef.prototype.detachFromAppRef;\n/** @type {?} */\nInternalViewRef.prototype.attachToAppRef;\n}\n\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ChangeDetectorRef {\n  /**\n   * Marks all {@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'cmp',\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   *   template: `Number of ticks: {{numberOfTicks}}`\n   * })\n   * class Cmp {\n   *   numberOfTicks = 0;\n   *\n   *   constructor(private ref: ChangeDetectorRef) {\n   *     setInterval(() => {\n   *       this.numberOfTicks ++\n   *       // the following is required, otherwise the view will not be updated\n   *       this.ref.markForCheck();\n   *     }, 1000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   *   template: `\n   *     <cmp><cmp>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  abstract markForCheck(): void;\n\n  /**\n   * Detaches the change detector from the change detector tree.\n   *\n   * The detached change detector will not be checked until it is reattached.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detectChanges} to implement\n   * local change\n   * detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds. We can do that by detaching\n   * the component's change detector and doing a local check every five seconds.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   // in a real application the returned data will be different every time\n   *   get data() {\n   *     return [1,2,3,4,5];\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'giant-list',\n   *   template: `\n   *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n   *   `,\n   * })\n   * class GiantList {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n   *     ref.detach();\n   *     setInterval(() => {\n   *       this.ref.detectChanges();\n   *     }, 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     <giant-list><giant-list>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  abstract detach(): void;\n\n  /**\n   * Checks the change detector and its children.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detach} to implement local\n   * change detection\n   * checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine, the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds.\n   *\n   * We can do that by detaching the component's change detector and doing a local change detection\n   * check\n   * every five seconds.\n   *\n   * See {@link ChangeDetectorRef#detach} for more information.\n   */\n  abstract detectChanges(): void;\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * This is used in development mode to verify that running change detection doesn't introduce\n   * other changes.\n   */\n  abstract checkNoChanges(): void;\n\n  /**\n   * Reattach the change detector to the change detector tree.\n   *\n   * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n   * checked during the next change detection run.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n   *\n   * The following example creates a component displaying `live` data. The component will detach\n   * its change detector from the main change detector tree when the component's live property\n   * is set to false.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   data = 1;\n   *\n   *   constructor() {\n   *     setInterval(() => {\n   *       this.data = this.data * 2;\n   *     }, 500);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'live-data',\n   *   inputs: ['live'],\n   *   template: 'Data: {{dataProvider.data}}'\n   * })\n   * class LiveData {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n   *\n   *   set live(value) {\n   *     if (value)\n   *       this.ref.reattach();\n   *     else\n   *       this.ref.detach();\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n   *     <live-data [live]=\"live\"><live-data>\n   *   `,\n   * })\n   * class App {\n   *   live = true;\n   * }\n   * ```\n   */\n  abstract reattach(): void;\n}\n\nfunction ChangeDetectorRef_tsickle_Closure_declarations() {\n\n/**\n * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n * \n * <!-- TODO: Add a link to a chapter on OnPush components -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n * \n * ```typescript\n * \\@Component({ \n *   selector: 'cmp',\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n *   template: `Number of ticks: {{numberOfTicks}}`\n * })\n * class Cmp {\n *   numberOfTicks = 0;\n * \n *   constructor(private ref: ChangeDetectorRef) {\n *     setInterval(() => {\n *       this.numberOfTicks ++\n *       // the following is required, otherwise the view will not be updated\n *       this.ref.markForCheck();\n *     }, 1000);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n *   template: `\n *     <cmp><cmp>\n *   `,\n * })\n * class App {\n * }\n * ```\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.markForCheck = function() {};\n\n/**\n * Detaches the change detector from the change detector tree.\n * \n * The detached change detector will not be checked until it is reattached.\n * \n * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n * local change\n * detection checks.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n * \n * ### Example\n * \n * The following example defines a component with a large list of readonly data.\n * Imagine the data changes constantly, many times per second. For performance reasons,\n * we want to check and update the list every five seconds. We can do that by detaching\n * the component's change detector and doing a local check every five seconds.\n * \n * ```typescript\n * class DataProvider {\n *   // in a real application the returned data will be different every time\n *   get data() {\n *     return [1,2,3,4,5];\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'giant-list',\n *   template: `\n *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n *   `,\n * })\n * class GiantList {\n *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n *     ref.detach();\n *     setInterval(() => {\n *       this.ref.detectChanges();\n *     }, 5000);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   providers: [DataProvider],\n *   template: `\n *     <giant-list><giant-list>\n *   `,\n * })\n * class App {\n * }\n * ```\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.detach = function() {};\n\n/**\n * Checks the change detector and its children.\n * \n * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n * change detection\n * checks.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n * \n * ### Example\n * \n * The following example defines a component with a large list of readonly data.\n * Imagine, the data changes constantly, many times per second. For performance reasons,\n * we want to check and update the list every five seconds.\n * \n * We can do that by detaching the component's change detector and doing a local change detection\n * check\n * every five seconds.\n * \n * See {\\@link ChangeDetectorRef#detach} for more information.\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.detectChanges = function() {};\n\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n * \n * This is used in development mode to verify that running change detection doesn't introduce\n * other changes.\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.checkNoChanges = function() {};\n\n/**\n * Reattach the change detector to the change detector tree.\n * \n * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n * checked during the next change detection run.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n * \n * The following example creates a component displaying `live` data. The component will detach\n * its change detector from the main change detector tree when the component's live property\n * is set to false.\n * \n * ```typescript\n * class DataProvider {\n *   data = 1;\n * \n *   constructor() {\n *     setInterval(() => {\n *       this.data = this.data * 2;\n *     }, 500);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'live-data',\n *   inputs: ['live'],\n *   template: 'Data: {{dataProvider.data}}'\n * })\n * class LiveData {\n *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n * \n *   set live(value) {\n *     if (value)\n *       this.ref.reattach();\n *     else\n *       this.ref.detach();\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   providers: [DataProvider],\n *   template: `\n *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n *     <live-data [live]=\"live\"><live-data>\n *   `,\n * })\n * class App {\n *   live = true;\n * }\n * ```\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.reattach = function() {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n/**\n * Represents a container where one or more Views can be attached.\n * \n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n * \n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n * \n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n * \n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nexport abstract class ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing View.\n   * <!-- TODO: rename to anchorElement -->\n   */\n  abstract get element(): ElementRef;\n\n  abstract get injector(): Injector;\n\n  abstract get parentInjector(): Injector;\n\n  /**\n   * Destroys all Views in this container.\n   */\n  abstract clear(): void;\n\n  /**\n   * Returns the {@link ViewRef} for the View located in this container at the specified index.\n   */\n  abstract get(index: number): ViewRef|null;\n\n  /**\n   * Returns the number of Views currently attached to this container.\n   */\n  abstract get length(): number;\n\n  /**\n   * Instantiates an Embedded View based on the {@link TemplateRef `templateRef`} and inserts it\n   * into this container at the specified `index`.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * Returns the {@link ViewRef} for the newly created View.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates a single {@link Component} and inserts its Host View into this container at the\n   * specified `index`.\n   *\n   * The component is instantiated using its {@link ComponentFactory} which can be\n   * obtained via {@link ComponentFactoryResolver#resolveComponentFactory}.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * You can optionally specify the {@link Injector} that will be used as parent for the Component.\n   *\n   * Returns the {@link ComponentRef} of the Host View created for the newly instantiated Component.\n   */\n  abstract createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>): ComponentRef<C>;\n\n  /**\n   * Inserts a View identified by a {@link ViewRef} into the container at the specified `index`.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * Returns the inserted {@link ViewRef}.\n   */\n  abstract insert(viewRef: ViewRef, index?: number): ViewRef;\n\n  /**\n   * Moves a View identified by a {@link ViewRef} into the container at the specified `index`.\n   *\n   * Returns the inserted {@link ViewRef}.\n   */\n  abstract move(viewRef: ViewRef, currentIndex: number): ViewRef;\n\n  /**\n   * Returns the index of the View, specified via {@link ViewRef}, within the current container or\n   * `-1` if this container doesn't contain the View.\n   */\n  abstract indexOf(viewRef: ViewRef): number;\n\n  /**\n   * Destroys a View attached to this container at the specified `index`.\n   *\n   * If `index` is not specified, the last View in the container will be removed.\n   */\n  abstract remove(index?: number): void;\n\n  /**\n   * Use along with {@link #insert} to move a View within the current container.\n   *\n   * If the `index` param is omitted, the last {@link ViewRef} is detached.\n   */\n  abstract detach(index?: number): ViewRef|null;\n}\n\nfunction ViewContainerRef_tsickle_Closure_declarations() {\n\n/**\n * Anchor element that specifies the location of this container in the containing View.\n * <!-- TODO: rename to anchorElement -->\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.element = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.injector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.parentInjector = function() {};\n\n/**\n * Destroys all Views in this container.\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.clear = function() {};\n\n/**\n * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n * @abstract\n * @param {?} index\n * @return {?}\n */\nViewContainerRef.prototype.get = function(index) {};\n\n/**\n * Returns the number of Views currently attached to this container.\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.length = function() {};\n\n/**\n * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n * into this container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the {\\@link ViewRef} for the newly created View.\n * @abstract\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\nViewContainerRef.prototype.createEmbeddedView = function(templateRef, context, index) {};\n\n/**\n * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n * specified `index`.\n * \n * The component is instantiated using its {\\@link ComponentFactory} which can be\n * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n * \n * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModule\n * @return {?}\n */\nViewContainerRef.prototype.createComponent = function(componentFactory, index, injector, projectableNodes, ngModule) {};\n\n/**\n * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\nViewContainerRef.prototype.insert = function(viewRef, index) {};\n\n/**\n * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nViewContainerRef.prototype.move = function(viewRef, currentIndex) {};\n\n/**\n * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n * `-1` if this container doesn't contain the View.\n * @abstract\n * @param {?} viewRef\n * @return {?}\n */\nViewContainerRef.prototype.indexOf = function(viewRef) {};\n\n/**\n * Destroys a View attached to this container at the specified `index`.\n * \n * If `index` is not specified, the last View in the container will be removed.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\nViewContainerRef.prototype.remove = function(index) {};\n\n/**\n * Use along with {\\@link #insert} to move a View within the current container.\n * \n * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\nViewContainerRef.prototype.detach = function(index) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n * \n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n * \n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nexport abstract class TemplateRef<C> {\n  /**\n   * The location in the View where the Embedded View logically belongs to.\n   *\n   * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n   * inherit from the contexts of this location.\n   *\n   * Typically new Embedded Views are attached to the View Container of this location, but in\n   * advanced use-cases, the View can be attached to a different container while keeping the\n   * data-binding and injection context from the original location.\n   *\n   */\n  // TODO(i): rename to anchor or location\n  abstract get elementRef(): ElementRef;\n\n  abstract createEmbeddedView(context: C): EmbeddedViewRef<C>;\n}\n\nfunction TemplateRef_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nTemplateRef.prototype.elementRef = function() {};\n\n/**\n * @abstract\n * @param {?} context\n * @return {?}\n */\nTemplateRef.prototype.createEmbeddedView = function(context) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst /** @type {?} */ _SEPARATOR = '#';\n\nconst /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\ndeclare var System: any;\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathPrefix: string;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathSuffix: string;\n}\n\nfunction SystemJsNgModuleLoaderConfig_tsickle_Closure_declarations() {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n\n\nconst /** @type {?} */ DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\nprivate _config: SystemJsNgModuleLoaderConfig;\n/**\n * @param {?} _compiler\n * @param {?=} config\n */\nconstructor(private _compiler: Compiler,  config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nload(path: string): Promise<NgModuleFactory<any>> {\n    const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\n\nprivate loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n/**\n * @param {?} path\n * @return {?}\n */\n\nprivate loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Compiler, },\n{type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction SystemJsNgModuleLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nSystemJsNgModuleLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSystemJsNgModuleLoader.ctorParameters;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._config;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._compiler;\n}\n\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n * \n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n * \n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n * \n * Changes can be observed by subscribing to the changes `Observable`.\n * \n * NOTE: In the future this class will implement an `Observable` interface.\n * \n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...}) \n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\nprivate _dirty = true;\nprivate _results: Array<T> = [];\nprivate _emitter = new EventEmitter();\n/**\n * @return {?}\n */\nget changes(): Observable<any> { return this._emitter; }\n/**\n * @return {?}\n */\nget length(): number { return this._results.length; }\n/**\n * @return {?}\n */\nget first(): T { return this._results[0]; }\n/**\n * @return {?}\n */\nget last(): T { return this._results[this.length - 1]; }\n/**\n * See\n * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n * @template U\n * @param {?} fn\n * @return {?}\n */\nmap<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n/**\n * See\n * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n * @param {?} fn\n * @return {?}\n */\nfilter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n/**\n * See\n * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n * @param {?} fn\n * @return {?}\n */\nfind(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n/**\n * See\n * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n * @template U\n * @param {?} fn\n * @param {?} init\n * @return {?}\n */\nreduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n/**\n * See\n * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n/**\n * See\n * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n * @param {?} fn\n * @return {?}\n */\nsome(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n/**\n * @return {?}\n */\ntoArray(): T[] { return this._results.slice(); }\n/**\n * @return {?}\n */\n[getSymbolIterator()](): Iterator<T> { return ( /** @type {?} */((this._results as any)))[getSymbolIterator()](); }\n/**\n * @return {?}\n */\ntoString(): string { return this._results.toString(); }\n/**\n * @param {?} res\n * @return {?}\n */\nreset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    this._dirty = false;\n  }\n/**\n * @return {?}\n */\nnotifyOnChanges(): void { this._emitter.emit(this); }\n/**\n * internal\n * @return {?}\n */\nsetDirty() { this._dirty = true; }\n/**\n * internal\n * @return {?}\n */\nget dirty() { return this._dirty; }\n}\n\nfunction QueryList_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryList.prototype._dirty;\n/** @type {?} */\nQueryList.prototype._results;\n/** @type {?} */\nQueryList.prototype._emitter;\n}\n\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n    return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n  }, []);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleFactoryLoader {\n  abstract load(path: string): Promise<NgModuleFactory<any>>;\n}\n\nfunction NgModuleFactoryLoader_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} path\n * @return {?}\n */\nNgModuleFactoryLoader.prototype.load = function(path) {};\n}\n\n\nlet /** @type {?} */ moduleFactories = new Map<string, NgModuleFactory<any>>();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nexport function registerModuleFactory(id: string, factory: NgModuleFactory<any>) {\n  const /** @type {?} */ existing = moduleFactories.get(id);\n  if (existing) {\n    throw new Error(`Duplicate module registered for ${id\n                    } - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n  }\n  moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\nexport function clearModulesForTest() {\n  moduleFactories = new Map<string, NgModuleFactory<any>>();\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nexport function getModuleFactory(id: string): NgModuleFactory<any> {\n  const /** @type {?} */ factory = moduleFactories.get(id);\n  if (!factory) throw new Error(`No module with ID ${id} loaded`);\n  return factory;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport class ElementRef {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n */\n\npublic nativeElement: any;\n/**\n * @param {?} nativeElement\n */\nconstructor(nativeElement: any) { this.nativeElement = nativeElement; }\n}\n\nfunction ElementRef_tsickle_Closure_declarations() {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n * @type {?}\n */\nElementRef.prototype.nativeElement;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for render\nexport {RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, RootRenderer} from './render/api';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, Injector} from '../di';\nimport {ViewEncapsulation} from '../metadata/view';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport class RenderComponentType {\n/**\n * @param {?} id\n * @param {?} templateUrl\n * @param {?} slotCount\n * @param {?} encapsulation\n * @param {?} styles\n * @param {?} animations\n */\nconstructor(\npublic id: string,\npublic templateUrl: string,\npublic slotCount: number,\npublic encapsulation: ViewEncapsulation,\npublic styles: Array<string|any[]>,\npublic animations: any) {}\n}\n\nfunction RenderComponentType_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderComponentType.prototype.id;\n/** @type {?} */\nRenderComponentType.prototype.templateUrl;\n/** @type {?} */\nRenderComponentType.prototype.slotCount;\n/** @type {?} */\nRenderComponentType.prototype.encapsulation;\n/** @type {?} */\nRenderComponentType.prototype.styles;\n/** @type {?} */\nRenderComponentType.prototype.animations;\n}\n\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport abstract class RenderDebugInfo {\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get source(): string;\n}\n\nfunction RenderDebugInfo_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.injector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.component = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.providerTokens = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.references = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.context = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.source = function() {};\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\nexport function DirectRenderer() {}\n\n\nfunction DirectRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectRenderer.prototype.remove;\n/** @type {?} */\nDirectRenderer.prototype.appendChild;\n/** @type {?} */\nDirectRenderer.prototype.insertBefore;\n/** @type {?} */\nDirectRenderer.prototype.nextSibling;\n/** @type {?} */\nDirectRenderer.prototype.parentElement;\n}\n\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport abstract class Renderer {\n  abstract selectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract createViewRoot(hostElement: any): any;\n\n  abstract createTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createText(parentElement: any, value: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract projectNodes(parentElement: any, nodes: any[]): void;\n\n  abstract attachViewAfter(node: any, viewRootNodes: any[]): void;\n\n  abstract detachView(viewRootNodes: any[]): void;\n\n  abstract destroyView(hostElement: any, viewAllNodes: any[]): void;\n\n  abstract listen(renderElement: any, name: string, callback: Function): Function;\n\n  abstract listenGlobal(target: string, name: string, callback: Function): Function;\n\n  abstract setElementProperty(renderElement: any, propertyName: string, propertyValue: any): void;\n\n  abstract setElementAttribute(renderElement: any, attributeName: string, attributeValue: string):\n      void;\n\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   */\n  abstract setBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string):\n      void;\n\n  abstract setElementClass(renderElement: any, className: string, isAdd: boolean): void;\n\n  abstract setElementStyle(renderElement: any, styleName: string, styleValue: string): void;\n\n  abstract invokeElementMethod(renderElement: any, methodName: string, args?: any[]): void;\n\n  abstract setText(renderNode: any, text: string): void;\n\n  abstract animate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n\nfunction Renderer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.selectRootElement = function(selectorOrNode, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} name\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createElement = function(parentElement, name, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} hostElement\n * @return {?}\n */\nRenderer.prototype.createViewRoot = function(hostElement) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createTemplateAnchor = function(parentElement, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createText = function(parentElement, value, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nRenderer.prototype.projectNodes = function(parentElement, nodes) {};\n\n/**\n * @abstract\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nRenderer.prototype.attachViewAfter = function(node, viewRootNodes) {};\n\n/**\n * @abstract\n * @param {?} viewRootNodes\n * @return {?}\n */\nRenderer.prototype.detachView = function(viewRootNodes) {};\n\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\nRenderer.prototype.destroyView = function(hostElement, viewAllNodes) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nRenderer.prototype.listen = function(renderElement, name, callback) {};\n\n/**\n * @abstract\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nRenderer.prototype.listenGlobal = function(target, name, callback) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nRenderer.prototype.setElementProperty = function(renderElement, propertyName, propertyValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} attributeName\n * @param {?} attributeValue\n * @return {?}\n */\nRenderer.prototype.setElementAttribute = function(renderElement, attributeName, attributeValue) {};\n\n/**\n * Used only in debug mode to serialize property changes to dom nodes as attributes.\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nRenderer.prototype.setBindingDebugInfo = function(renderElement, propertyName, propertyValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nRenderer.prototype.setElementClass = function(renderElement, className, isAdd) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nRenderer.prototype.setElementStyle = function(renderElement, styleName, styleValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?=} args\n * @return {?}\n */\nRenderer.prototype.invokeElementMethod = function(renderElement, methodName, args) {};\n\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nRenderer.prototype.setText = function(renderNode, text) {};\n\n/**\n * @abstract\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nRenderer.prototype.animate = function(element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {};\n}\n\n\nexport const /** @type {?} */ Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n * \n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n * \n * If you are implementing a custom renderer, you must implement this interface.\n * \n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n * \n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport abstract class RootRenderer {\n  abstract renderComponent(componentType: RenderComponentType): Renderer;\n}\n\nfunction RootRenderer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} componentType\n * @return {?}\n */\nRootRenderer.prototype.renderComponent = function(componentType) {};\n}\n\n/**\n * \\@experimental\n * @record\n */\nexport function RendererType2() {}\n\n\nfunction RendererType2_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererType2.prototype.id;\n/** @type {?} */\nRendererType2.prototype.encapsulation;\n/** @type {?} */\nRendererType2.prototype.styles;\n/** @type {?} */\nRendererType2.prototype.data;\n}\n\n\n/**\n * @experimental\n */\nexport interface RendererType2 {\n  id: string;\n  encapsulation: ViewEncapsulation;\n  styles: (string|any[])[];\n  data: {[kind: string]: any};\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class RendererFactory2 {\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  abstract begin?(): void;\n  abstract end?(): void;\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\nfunction RendererFactory2_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\nRendererFactory2.prototype.createRenderer = function(hostElement, type) {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.begin = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.end = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.whenRenderingDone = function() {};\n}\n\nexport type RendererStyleFlags2 = number;\nexport let RendererStyleFlags2: any = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class Renderer2 {\n  /**\n   * This field can be used to store arbitrary data on this renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  abstract destroy(): void;\n  abstract createElement(name: string, namespace?: string|null): any;\n  abstract createComment(value: string): any;\n  abstract createText(value: string): any;\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n */\ndestroyNode: ((node: any) => void)|null;\n  abstract appendChild(parent: any, newChild: any): void;\n  abstract insertBefore(parent: any, newChild: any, refChild: any): void;\n  abstract removeChild(parent: any, oldChild: any): void;\n  abstract selectRootElement(selectorOrNode: string|any): any;\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   */\n  abstract nextSibling(node: any): any;\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  abstract addClass(el: any, name: string): void;\n  abstract removeClass(el: any, name: string): void;\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n  abstract setProperty(el: any, name: string, value: any): void;\n  abstract setValue(node: any, value: string): void;\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n}\n\nfunction Renderer2_tsickle_Closure_declarations() {\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?}\n */\nRenderer2.prototype.destroyNode;\n\n/**\n * This field can be used to store arbitrary data on this renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @abstract\n * @return {?}\n */\nRenderer2.prototype.data = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderer2.prototype.destroy = function() {};\n\n/**\n * @abstract\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.createElement = function(name, namespace) {};\n\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.createComment = function(value) {};\n\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.createText = function(value) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nRenderer2.prototype.appendChild = function(parent, newChild) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\nRenderer2.prototype.insertBefore = function(parent, newChild, refChild) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nRenderer2.prototype.removeChild = function(parent, oldChild) {};\n\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @return {?}\n */\nRenderer2.prototype.selectRootElement = function(selectorOrNode) {};\n\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nRenderer2.prototype.parentNode = function(node) {};\n\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nRenderer2.prototype.nextSibling = function(node) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.setAttribute = function(el, name, value, namespace) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.removeAttribute = function(el, name, namespace) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nRenderer2.prototype.addClass = function(el, name) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nRenderer2.prototype.removeClass = function(el, name) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?=} flags\n * @return {?}\n */\nRenderer2.prototype.setStyle = function(el, style, value, flags) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?=} flags\n * @return {?}\n */\nRenderer2.prototype.removeStyle = function(el, style, flags) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.setProperty = function(el, name, value) {};\n\n/**\n * @abstract\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.setValue = function(node, value) {};\n\n/**\n * @abstract\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nRenderer2.prototype.listen = function(target, eventName, callback) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for Zone\nexport {NgZone} from './zone/ng_zone';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {share} from 'rxjs/operator/share';\n\nimport {ErrorHandler} from '../src/error_handler';\nimport {scheduleMicroTask, stringify} from '../src/util';\nimport {isPromise} from '../src/util/lang';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, Provider, ReflectiveInjector} from './di';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {NgZone} from './zone/ng_zone';\n\nlet /** @type {?} */ _devMode: boolean = true;\nlet /** @type {?} */ _runModeLocked: boolean = false;\nlet /** @type {?} */ _platform: PlatformRef;\n\nexport const /** @type {?} */ ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n * \n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n * \n * \\@stable\n * @return {?}\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n * \n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n * \n * \\@experimental\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n/**\n * Creates a factory for a platform\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: Provider[]) => PlatformRef) | null, name: string,\n    providers: Provider[] = []): (extraProviders?: Provider[]) => PlatformRef {\n  const /** @type {?} */ marker = new InjectionToken(`Platform: ${name}`);\n  return (extraProviders: Provider[] = []) => {\n    let /** @type {?} */ platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        createPlatform(ReflectiveInjector.resolveAndCreate(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true})));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const /** @type {?} */ platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n/**\n * Destroy the existing platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n/**\n * Returns the current platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * \n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformRef {\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   *\n   * @experimental APIs related to application bootstrap are currently under review.\n   */\n  abstract bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>>;\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   * @stable\n   */\n  abstract bootstrapModule<M>(\n      moduleType: Type<M>,\n      compilerOptions?: CompilerOptions|CompilerOptions[]): Promise<NgModuleRef<M>>;\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  abstract onDestroy(callback: () => void): void;\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  abstract destroy(): void;\n\n  abstract get destroyed(): boolean;\n}\n\nfunction PlatformRef_tsickle_Closure_declarations() {\n\n/**\n * Creates an instance of an `\\@NgModule` for the given platform\n * for offline compilation.\n * \n * ## Simple Example\n * \n * ```typescript\n * my_module.ts:\n * \n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * main.ts:\n * import {MyModuleNgFactory} from './my_module.ngfactory';\n * import {platformBrowser} from '\\@angular/platform-browser';\n * \n * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n * ```\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @abstract\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nPlatformRef.prototype.bootstrapModuleFactory = function(moduleFactory) {};\n\n/**\n * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n * \n * ## Simple Example\n * \n * ```typescript\n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n * ```\n * \\@stable\n * @abstract\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nPlatformRef.prototype.bootstrapModule = function(moduleType, compilerOptions) {};\n\n/**\n * Register a listener to be called when the platform is disposed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nPlatformRef.prototype.onDestroy = function(callback) {};\n\n/**\n * Retrieve the platform {\\@link Injector}, which is the parent injector for\n * every Angular application on the page and provides singleton providers.\n * @abstract\n * @return {?}\n */\nPlatformRef.prototype.injector = function() {};\n\n/**\n * Destroy the Angular platform and all Angular applications on the page.\n * @abstract\n * @return {?}\n */\nPlatformRef.prototype.destroy = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nPlatformRef.prototype.destroyed = function() {};\n}\n\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const /** @type {?} */ result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch ( /** @type {?} */e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class PlatformRef_ extends PlatformRef {\nprivate _modules: NgModuleRef<any>[] = [];\nprivate _destroyListeners: Function[] = [];\nprivate _destroyed: boolean = false;\n/**\n * @param {?} _injector\n */\nconstructor(private _injector: Injector) { super(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @return {?}\n */\nget destroyed() { return this._destroyed; }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleFactoryWithZone(moduleFactory);\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @param {?=} ngZone\n * @return {?}\n */\n\nprivate _bootstrapModuleFactoryWithZone<M>(moduleFactory: NgModuleFactory<M>, ngZone?: NgZone):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    if (!ngZone) ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const /** @type {?} */ ngZoneInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgZone, useValue: ngZone}], this.injector);\n      const /** @type {?} */ moduleRef = /** @type {?} */(( <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector)));\n      const /** @type {?} */ exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef)); /** @type {?} */((\n      ngZone)).runOutsideAngular(\n          () => /** @type {?} */(( ngZone)).onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */(( ngZone)), () => {\n        const /** @type {?} */ initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = []):\n      Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @param {?=} ngZone\n * @return {?}\n */\n\nprivate _bootstrapModuleWithZone<M>(\n      moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = [],\n      ngZone?: NgZone): Promise<NgModuleRef<M>> {\n    const /** @type {?} */ compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const /** @type {?} */ compiler = compilerFactory.createCompiler(\n        Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n  }\n/**\n * @param {?} moduleRef\n * @return {?}\n */\n\nprivate _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const /** @type {?} */ appRef = /** @type {?} */(( moduleRef.injector.get(ApplicationRef) as ApplicationRef));\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction PlatformRef__tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformRef_.ctorParameters;\n/** @type {?} */\nPlatformRef_.prototype._modules;\n/** @type {?} */\nPlatformRef_.prototype._destroyListeners;\n/** @type {?} */\nPlatformRef_.prototype._destroyed;\n/** @type {?} */\nPlatformRef_.prototype._injector;\n}\n\n/**\n * A reference to an Angular application running on a page.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ApplicationRef {\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the [componentType]'s\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * [componentType]'s selector.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  abstract bootstrap<C>(\n      componentFactory: ComponentFactory<C>|Type<C>,\n      rootSelectorOrNode?: string|any): ComponentRef<C>;\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  abstract tick(): void;\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  abstract get componentTypes(): Type<any>[];\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  abstract get components(): ComponentRef<any>[];\n\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   */\n  abstract attachView(view: ViewRef): void;\n\n  /**\n   * Detaches a view from dirty checking again.\n   */\n  abstract detachView(view: ViewRef): void;\n\n  /**\n   * Returns the number of attached views.\n   */\n  abstract get viewCount(): number;\n\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   */\n  abstract get isStable(): Observable<boolean>;\n}\n\nfunction ApplicationRef_tsickle_Closure_declarations() {\n\n/**\n * Bootstrap a new component at the root level of the application.\n * \n * ### Bootstrap process\n * \n * When bootstrapping a new root component into an application, Angular mounts the\n * specified application component onto DOM elements identified by the [componentType]'s\n * selector and kicks off automatic change detection to finish initializing the component.\n * \n * Optionally, a component can be mounted onto a DOM element that does not match the\n * [componentType]'s selector.\n * \n * ### Example\n * {\\@example core/ts/platform/platform.ts region='longform'}\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\nApplicationRef.prototype.bootstrap = function(componentFactory, rootSelectorOrNode) {};\n\n/**\n * Invoke this method to explicitly process change detection and its side-effects.\n * \n * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n * further changes are detected. If additional changes are picked up during this second cycle,\n * bindings in the app have side-effects that cannot be resolved in a single change detection\n * pass.\n * In this case, Angular throws an error, since an Angular application can only have one change\n * detection pass during which all change detection must complete.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.tick = function() {};\n\n/**\n * Get a list of component types registered to this application.\n * This list is populated even before the component is created.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.componentTypes = function() {};\n\n/**\n * Get a list of components registered to this application.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.components = function() {};\n\n/**\n * Attaches a view so that it will be dirty checked.\n * The view will be automatically detached when it is destroyed.\n * This will throw if the view is already attached to a ViewContainer.\n * @abstract\n * @param {?} view\n * @return {?}\n */\nApplicationRef.prototype.attachView = function(view) {};\n\n/**\n * Detaches a view from dirty checking again.\n * @abstract\n * @param {?} view\n * @return {?}\n */\nApplicationRef.prototype.detachView = function(view) {};\n\n/**\n * Returns the number of attached views.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.viewCount = function() {};\n\n/**\n * Returns an Observable that indicates when the application is stable or unstable.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.isStable = function() {};\n}\n\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class ApplicationRef_ extends ApplicationRef {\n/**\n * \\@internal\n */\nstatic _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\nprivate _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\nprivate _rootComponents: ComponentRef<any>[] = [];\nprivate _rootComponentTypes: Type<any>[] = [];\nprivate _views: InternalViewRef[] = [];\nprivate _runningTick: boolean = false;\nprivate _enforceNoNewChanges: boolean = false;\nprivate _isStable: Observable<boolean>;\nprivate _stable = true;\n/**\n * @param {?} _zone\n * @param {?} _console\n * @param {?} _injector\n * @param {?} _exceptionHandler\n * @param {?} _componentFactoryResolver\n * @param {?} _initStatus\n */\nconstructor(\nprivate _zone: NgZone,\nprivate _console: Console,\nprivate _injector: Injector,\nprivate _exceptionHandler: ErrorHandler,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _initStatus: ApplicationInitStatus) {\n    super();\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const /** @type {?} */ isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const /** @type {?} */ isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      const /** @type {?} */ stableSub: Subscription = this._zone.onStable.subscribe(() => {\n        NgZone.assertNotInAngularZone();\n\n        // Check whether there are no pending macro/micro tasks in the next tick\n        // to allow for NgZone to update the state.\n        scheduleMicroTask(() => {\n          if (!this._stable && !this._zone.hasPendingMacrotasks &&\n              !this._zone.hasPendingMicrotasks) {\n            this._stable = true;\n            observer.next(true);\n          }\n        });\n      });\n\n      const /** @type {?} */ unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    this._isStable = merge(isCurrentlyStable, share.call(isStable));\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nattachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\ndetachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n/**\n * @template C\n * @param {?} componentOrFactory\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\nbootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let /** @type {?} */ componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory = /** @type {?} */((\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n    }\n    this._rootComponentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const /** @type {?} */ testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\n\nprivate _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const /** @type {?} */ listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\n\nprivate _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this._rootComponents, componentRef);\n  }\n/**\n * @return {?}\n */\ntick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const /** @type {?} */ scope = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch ( /** @type {?} */e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n/**\n * @return {?}\n */\nget viewCount() { return this._views.length; }\n/**\n * @return {?}\n */\nget componentTypes(): Type<any>[] { return this._rootComponentTypes; }\n/**\n * @return {?}\n */\nget components(): ComponentRef<any>[] { return this._rootComponents; }\n/**\n * @return {?}\n */\nget isStable(): Observable<boolean> { return this._isStable; }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: NgZone, },\n{type: Console, },\n{type: Injector, },\n{type: ErrorHandler, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationInitStatus, },\n];\n}\n\nfunction ApplicationRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nApplicationRef_._tickScope;\n/** @type {?} */\nApplicationRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationRef_.ctorParameters;\n/** @type {?} */\nApplicationRef_.prototype._bootstrapListeners;\n/** @type {?} */\nApplicationRef_.prototype._rootComponents;\n/** @type {?} */\nApplicationRef_.prototype._rootComponentTypes;\n/** @type {?} */\nApplicationRef_.prototype._views;\n/** @type {?} */\nApplicationRef_.prototype._runningTick;\n/** @type {?} */\nApplicationRef_.prototype._enforceNoNewChanges;\n/** @type {?} */\nApplicationRef_.prototype._isStable;\n/** @type {?} */\nApplicationRef_.prototype._stable;\n/** @type {?} */\nApplicationRef_.prototype._zone;\n/** @type {?} */\nApplicationRef_.prototype._console;\n/** @type {?} */\nApplicationRef_.prototype._injector;\n/** @type {?} */\nApplicationRef_.prototype._exceptionHandler;\n/** @type {?} */\nApplicationRef_.prototype._componentFactoryResolver;\n/** @type {?} */\nApplicationRef_.prototype._initStatus;\n}\n\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @experimental\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nexport class Testability implements PublicTestability {\n/**\n * \\@internal\n */\n_pendingCount: number = 0;\n/**\n * \\@internal\n */\n_isZoneStable: boolean = true;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n */\n_didWork: boolean = false;\n/**\n * \\@internal\n */\n_callbacks: Function[] = [];\n/**\n * @param {?} _ngZone\n */\nconstructor(private _ngZone: NgZone) { this._watchAngularEvents(); }\n/**\n * \\@internal\n * @return {?}\n */\n_watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n/**\n * @return {?}\n */\nincreasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\ndecreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\nisStable(): boolean {\n    return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          ( /** @type {?} */((this._callbacks.pop())))(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Not Ready\n      this._didWork = true;\n    }\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nwhenStable(callback: Function): void {\n    this._callbacks.push(callback);\n    this._runCallbacksIfReady();\n  }\n/**\n * @return {?}\n */\ngetPendingRequestCount(): number { return this._pendingCount; }\n/**\n * @deprecated use findProviders\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindBindings(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n/**\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: NgZone, },\n];\n}\n\nfunction Testability_tsickle_Closure_declarations() {\n/** @type {?} */\nTestability.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestability.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._pendingCount;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._isZoneStable;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n * @type {?}\n */\nTestability.prototype._didWork;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._callbacks;\n/** @type {?} */\nTestability.prototype._ngZone;\n}\n\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nexport class TestabilityRegistry {\n/**\n * \\@internal\n */\n_applications = new Map<any, Testability>();\nconstructor() { _testabilityGetter.addToWindow(this); }\n/**\n * @param {?} token\n * @param {?} testability\n * @return {?}\n */\nregisterApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\ngetTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n/**\n * @return {?}\n */\ngetAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n/**\n * @return {?}\n */\ngetAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n/**\n * @param {?} elem\n * @param {?=} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction TestabilityRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nTestabilityRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestabilityRegistry.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestabilityRegistry.prototype._applications;\n}\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n * \n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\nexport function GetTestability() {}\n\n\nfunction GetTestability_tsickle_Closure_declarations() {\n/** @type {?} */\nGetTestability.prototype.addToWindow;\n/** @type {?} */\nGetTestability.prototype.findTestabilityInTree;\n}\n\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\nclass _NoopGetTestability implements GetTestability {\n/**\n * @param {?} registry\n * @return {?}\n */\naddToWindow(registry: TestabilityRegistry): void {}\n/**\n * @param {?} registry\n * @param {?} elem\n * @param {?} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet /** @type {?} */ _testabilityGetter: GetTestability = new _NoopGetTestability();\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\nimport {} from 'zone.js';\nimport {EventEmitter} from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n * \n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n * \n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n * \n * ### Example\n * \n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n * \n * \\@Component({ \n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n * \n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n * \n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n * \n *   constructor(private _ngZone: NgZone) {}\n * \n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n * \n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n * \n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n * \n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n * \n * \\@experimental\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n */\nreadonly isStable: boolean = true;\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n */\nreadonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n */\nreadonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n */\nreadonly onStable: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies that an error has been delivered.\n */\nreadonly onError: EventEmitter<any> = new EventEmitter(false);\n/**\n * @param {?} __0\n */\nconstructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error('Angular requires Zone.js prolyfill.');\n    }\n\n    Zone.assertZonePatched();\n    const /** @type {?} */ self = /** @type {?} */(( /** @type {?} */(( this as any)) as NgZonePrivate));\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if (( /** @type {?} */((Zone as any)))['wtfZoneSpec']) {\n      self._inner = self._inner.fork(( /** @type {?} */((Zone as any)))['wtfZoneSpec']);\n    }\n\n    if (enableLongStackTrace && ( /** @type {?} */((Zone as any)))['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork(( /** @type {?} */((Zone as any)))['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n/**\n * @return {?}\n */\nstatic isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n/**\n * @return {?}\n */\nstatic assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n/**\n * @return {?}\n */\nstatic assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n/**\n * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n * the function.\n * \n * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * within the Angular zone.\n * \n * If a synchronous error happens it will be rethrown and not reported via `onError`.\n * @template T\n * @param {?} fn\n * @param {?=} applyThis\n * @param {?=} applyArgs\n * @return {?}\n */\nrun<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return /** @type {?} */(( ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner.run(fn, applyThis, applyArgs) as T));\n  }\n/**\n * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n * returned by the function.\n * \n * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * within the Angular zone.\n * \n * If a synchronous error happens it will be rethrown and not reported via `onError`.\n * @template T\n * @param {?} fn\n * @param {?=} applyThis\n * @param {?=} applyArgs\n * @param {?=} name\n * @return {?}\n */\nrunTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const /** @type {?} */ zone = ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner;\n    const /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return /** @type {?} */(( zone.runTask(task, applyThis, applyArgs) as T));\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n/**\n * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n * rethrown.\n * @template T\n * @param {?} fn\n * @param {?=} applyThis\n * @param {?=} applyArgs\n * @return {?}\n */\nrunGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return /** @type {?} */(( ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner.runGuarded(fn, applyThis, applyArgs) as T));\n  }\n/**\n * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n * the function.\n * \n * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n * work that\n * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * outside of the Angular zone.\n * \n * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n * @template T\n * @param {?} fn\n * @return {?}\n */\nrunOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return /** @type {?} */(( ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._outer.run(fn) as T));\n  }\n}\n\nfunction NgZone_tsickle_Closure_declarations() {\n/** @type {?} */\nNgZone.prototype.hasPendingMicrotasks;\n/** @type {?} */\nNgZone.prototype.hasPendingMacrotasks;\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n * @type {?}\n */\nNgZone.prototype.isStable;\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n * @type {?}\n */\nNgZone.prototype.onUnstable;\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n * @type {?}\n */\nNgZone.prototype.onMicrotaskEmpty;\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n * @type {?}\n */\nNgZone.prototype.onStable;\n/**\n * Notifies that an error has been delivered.\n * @type {?}\n */\nNgZone.prototype.onError;\n}\n\n/**\n * @return {?}\n */\nfunction noop(){};\nconst /** @type {?} */ EMPTY_PAYLOAD = {};\n/**\n * @record\n */\nfunction NgZonePrivate() {}\n\n\nfunction NgZonePrivate_tsickle_Closure_declarations() {\n/** @type {?} */\nNgZonePrivate.prototype._outer;\n/** @type {?} */\nNgZonePrivate.prototype._inner;\n/** @type {?} */\nNgZonePrivate.prototype._nesting;\n/** @type {?} */\nNgZonePrivate.prototype.hasPendingMicrotasks;\n/** @type {?} */\nNgZonePrivate.prototype.hasPendingMacrotasks;\n/** @type {?} */\nNgZonePrivate.prototype.isStable;\n}\n\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: /** @type {?} */(( <any>{'isAngularZone': true})),\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject} from 'rxjs/Subject';\n/**\n * Use by directives and components to emit custom Events.\n * \n * ### Examples\n * \n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n * \n * ```\n * \\@Component({ \n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n * \n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n * \n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n * \n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n * \n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n * \n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  // tslint:disable-next-line\n  __isAsync: boolean;\n/**\n * Creates an instance of {\\@link EventEmitter}, which depending on `isAsync`,\n * delivers events synchronously or asynchronously.\n * \n * @param {?=} isAsync By default, events are delivered synchronously (default value: `false`).\n * Set to `true` for asynchronous event delivery.\n */\nconstructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n/**\n * @param {?=} value\n * @return {?}\n */\nemit(value?: T) { super.next(value); }\n/**\n * @param {?=} generatorOrNext\n * @param {?=} error\n * @param {?=} complete\n * @return {?}\n */\nsubscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let /** @type {?} */ schedulerFn: (t: any) => any;\n    let /** @type {?} */ errorFn = (err: any): any => null;\n    let /** @type {?} */ completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n}\n\nfunction EventEmitter_tsickle_Closure_declarations() {\n/** @type {?} */\nEventEmitter.prototype.__isAsync;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n/**\n * True if WTF is enabled.\n */\nexport const /** @type {?} */ wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n/**\n * Create trace scope.\n * \n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n * \n * Used to mark scope entry. The return value is used to leave the scope.\n * \n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n * \n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n * \n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n/**\n * Used to mark end of Scope.\n * \n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n * \n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nexport const /** @type {?} */ wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n * \n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nexport const /** @type {?} */ wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nexport const /** @type {?} */ wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n/**\n * A scope function for the Web Tracing Framework (WTF).\n * \n * \\@experimental\n * @record\n */\nexport function WtfScopeFn() {}\n\n\nfunction WtfScopeFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(arg0?: any, arg1?: any): any;\n*/\n}\n\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n/**\n * @record\n */\nfunction WTF() {}\n\n\nfunction WTF_tsickle_Closure_declarations() {\n/** @type {?} */\nWTF.prototype.trace;\n}\n\n\ninterface WTF {\n  trace: Trace;\n}\n/**\n * @record\n */\nfunction Trace() {}\n\n\nfunction Trace_tsickle_Closure_declarations() {\n/** @type {?} */\nTrace.prototype.events;\n/** @type {?} */\nTrace.prototype.leaveScope;\n/** @type {?} */\nTrace.prototype.beginTimeRange;\n/** @type {?} */\nTrace.prototype.endTimeRange;\n}\n\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n/**\n * @record\n */\nexport function Range() {}\n\n\nfunction Range_tsickle_Closure_declarations() {\n}\n\n\nexport interface Range {}\n/**\n * @record\n */\nfunction Events() {}\n\n\nfunction Events_tsickle_Closure_declarations() {\n/** @type {?} */\nEvents.prototype.createScope;\n}\n\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n/**\n * @record\n */\nexport function Scope() {}\n\n\nfunction Scope_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(...args: any[] __* TODO #9100 __): any;\n*/\n}\n\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet /** @type {?} */ trace: Trace;\nlet /** @type {?} */ events: Events;\n/**\n * @return {?}\n */\nexport function detectWTF(): boolean {\n  const /** @type {?} */ wtf: WTF = ( /** @type {?} */((global as any)) /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n * \n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * declared in the `entryComponents` property of the module.\n   */\n  abstract get componentFactoryResolver(): ComponentFactoryResolver;\n\n  /**\n   * The NgModule instance.\n   */\n  abstract get instance(): T;\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nfunction NgModuleRef_tsickle_Closure_declarations() {\n\n/**\n * The injector that contains all of the providers of the NgModule.\n * @abstract\n * @return {?}\n */\nNgModuleRef.prototype.injector = function() {};\n\n/**\n * The ComponentFactoryResolver to get hold of the ComponentFactories\n * declared in the `entryComponents` property of the module.\n * @abstract\n * @return {?}\n */\nNgModuleRef.prototype.componentFactoryResolver = function() {};\n\n/**\n * The NgModule instance.\n * @abstract\n * @return {?}\n */\nNgModuleRef.prototype.instance = function() {};\n\n/**\n * Destroys the module instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\nNgModuleRef.prototype.destroy = function() {};\n\n/**\n * Allows to register a callback that will be called when the module is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nNgModuleRef.prototype.onDestroy = function(callback) {};\n}\n\n/**\n * @record\n */\nexport function InternalNgModuleRef() {}\n\n\nfunction InternalNgModuleRef_tsickle_Closure_declarations() {\n/** @type {?} */\nInternalNgModuleRef.prototype._bootstrapComponents;\n}\n\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class NgModuleFactory<T> {\n  abstract get moduleType(): Type<T>;\n  abstract create(parentInjector: Injector|null): NgModuleRef<T>;\n}\n\nfunction NgModuleFactory_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nNgModuleFactory.prototype.moduleType = function() {};\n\n/**\n * @abstract\n * @param {?} parentInjector\n * @return {?}\n */\nNgModuleFactory.prototype.create = function(parentInjector) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component: Function) {\n  const /** @type {?} */ error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error: Error): Type<any> {\n  return ( /** @type {?} */((error as any)))[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryResolver.NULL;\n\n/**\n * @abstract\n * @template T\n * @param {?} component\n * @return {?}\n */\nComponentFactoryResolver.prototype.resolveComponentFactory = function(component) {};\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n * @param {?} _ngModule\n */\nconstructor(\n      factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver,\nprivate _ngModule: NgModuleRef<any>) {\n    for (let /** @type {?} */ i = 0; i < factories.length; i++) {\n      const /** @type {?} */ factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._ngModule;\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n/**\n * @param {?} factory\n * @param {?} ngModule\n */\nconstructor(private factory: ComponentFactory<C>,\nprivate ngModule: NgModuleRef<any>) { super(); }\n/**\n * @return {?}\n */\nget selector() { return this.factory.selector; }\n/**\n * @return {?}\n */\nget componentType() { return this.factory.componentType; }\n/**\n * @return {?}\n */\nget ngContentSelectors() { return this.factory.ngContentSelectors; }\n/**\n * @return {?}\n */\nget inputs() { return this.factory.inputs; }\n/**\n * @return {?}\n */\nget outputs() { return this.factory.outputs; }\n/**\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n\nfunction ComponentFactoryBoundToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.factory;\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.ngModule;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n * \n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * Location of the Host Element of this Component Instance.\n   */\n  abstract get location(): ElementRef;\n\n  /**\n   * The injector on which the component instance exists.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The instance of the Component.\n   */\n  abstract get instance(): C;\n\n  /**\n   * The {@link ViewRef} of the Host View of this Component instance.\n   */\n  abstract get hostView(): ViewRef;\n\n  /**\n   * The {@link ChangeDetectorRef} of the Component instance.\n   */\n  abstract get changeDetectorRef(): ChangeDetectorRef;\n\n  /**\n   * The component type.\n   */\n  abstract get componentType(): Type<any>;\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the component is destroyed.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\nfunction ComponentRef_tsickle_Closure_declarations() {\n\n/**\n * Location of the Host Element of this Component Instance.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.location = function() {};\n\n/**\n * The injector on which the component instance exists.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.injector = function() {};\n\n/**\n * The instance of the Component.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.instance = function() {};\n\n/**\n * The {\\@link ViewRef} of the Host View of this Component instance.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.hostView = function() {};\n\n/**\n * The {\\@link ChangeDetectorRef} of the Component instance.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.changeDetectorRef = function() {};\n\n/**\n * The component type.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.componentType = function() {};\n\n/**\n * Destroys the component instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.destroy = function() {};\n\n/**\n * Allows to register a callback that will be called when the component is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nComponentRef.prototype.onDestroy = function(callback) {};\n}\n\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactory<C> {\n  abstract get selector(): string;\n  abstract get componentType(): Type<any>;\n  /**\n   * selector for all <ng-content> elements in the component.\n   */\n  abstract get ngContentSelectors(): string[];\n  /**\n   * the inputs of the component.\n   */\n  abstract get inputs(): {propName: string, templateName: string}[];\n  /**\n   * the outputs of the component.\n   */\n  abstract get outputs(): {propName: string, templateName: string}[];\n  /**\n   * Creates a new component.\n   */\n  abstract create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C>;\n}\n\nfunction ComponentFactory_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.selector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.componentType = function() {};\n\n/**\n * selector for all <ng-content> elements in the component.\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.ngContentSelectors = function() {};\n\n/**\n * the inputs of the component.\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.inputs = function() {};\n\n/**\n * the outputs of the component.\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.outputs = function() {};\n\n/**\n * Creates a new component.\n * @abstract\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\nComponentFactory.prototype.create = function(injector, projectableNodes, rootSelectorOrNode, ngModule) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken} from '../di';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n * \n * \\@experimental\n */\nexport class ModuleWithComponentFactories<T> {\n/**\n * @param {?} ngModuleFactory\n * @param {?} componentFactories\n */\nconstructor(\npublic ngModuleFactory: NgModuleFactory<T>,\npublic componentFactories: ComponentFactory<any>[]) {}\n}\n\nfunction ModuleWithComponentFactories_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleWithComponentFactories.prototype.ngModuleFactory;\n/** @type {?} */\nModuleWithComponentFactories.prototype.componentFactories;\n}\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n * \n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nexport class Compiler {\n/**\n * Compiles the given NgModule and all of its components. All templates of the components listed\n * in `entryComponents` have to be inlined.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> { throw _throwError(); }\n/**\n * Compiles the given NgModule and all of its components\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> { throw _throwError(); }\n/**\n * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    throw _throwError();\n  }\n/**\n * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    throw _throwError();\n  }\n/**\n * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n * the template of the given component.\n * This is used by the `upgrade` library to compile the appropriate transclude content\n * in the AngularJS wrapper component.\n * \n * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] { throw _throwError(); }\n/**\n * Clears all caches.\n * @return {?}\n */\nclearCache(): void {}\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {}\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction Compiler_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompiler.ctorParameters;\n}\n\n\n/**\n * Options for creating a compiler\n *\n * @experimental\n */\nexport type CompilerOptions = {\n  /**\n   * @deprecated since v4 this option has no effect anymore.\n   */\n  useDebug?: boolean,\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: any[],\n  missingTranslation?: MissingTranslationStrategy,\n  // Whether to support the `<template>` tag and the `template` attribute to define angular\n  // templates. They have been deprecated in 4.x, `<ng-template>` should be used instead.\n  enableLegacyTemplate?: boolean,\n};\n/**\n * Token to provide CompilerOptions in the platform injector.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n/**\n * A factory for creating a Compiler\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class CompilerFactory {\n  abstract createCompiler(options?: CompilerOptions[]): Compiler;\n}\n\nfunction CompilerFactory_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?=} options\n * @return {?}\n */\nCompilerFactory.prototype.createCompiler = function(options) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\nexport class Console {\n/**\n * @param {?} message\n * @return {?}\n */\nlog(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n/**\n * @param {?} message\n * @return {?}\n */\nwarn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction Console_tsickle_Closure_declarations() {\n/** @type {?} */\nConsole.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConsole.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n * \n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nexport const /** @type {?} */ APP_ID = new InjectionToken<string>('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nexport const /** @type {?} */ APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: /** @type {?} */(( <any[]>[])),\n};\n/**\n * @return {?}\n */\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nexport const /** @type {?} */ PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nexport const /** @type {?} */ PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n * \n * `(componentRef: ComponentRef) => void`.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nexport const /** @type {?} */ PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nexport const /** @type {?} */ APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n * \n * \\@experimental\n */\nexport class ApplicationInitStatus {\nprivate resolve: Function;\nprivate reject: Function;\nprivate initialized = false;\nprivate _donePromise: Promise<any>;\nprivate _done = false;\n/**\n * @param {?} appInits\n */\nconstructor(\nprivate appInits: (() => any)[]) {\n    this._donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\nrunInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const /** @type {?} */ asyncInitPromises: Promise<any>[] = [];\n\n    const /** @type {?} */ complete = () => {\n      this._done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n        const /** @type {?} */ initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n/**\n * @return {?}\n */\nget done(): boolean { return this._done; }\n/**\n * @return {?}\n */\nget donePromise(): Promise<any> { return this._donePromise; }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER, ] }, { type: Optional }, ]},\n];\n}\n\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationInitStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationInitStatus.ctorParameters;\n/** @type {?} */\nApplicationInitStatus.prototype.resolve;\n/** @type {?} */\nApplicationInitStatus.prototype.reject;\n/** @type {?} */\nApplicationInitStatus.prototype.initialized;\n/** @type {?} */\nApplicationInitStatus.prototype._donePromise;\n/** @type {?} */\nApplicationInitStatus.prototype._done;\n/** @type {?} */\nApplicationInitStatus.prototype.appInits;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n  return !!obj && typeof obj.subscribe === 'function';\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport {InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host} from './di/metadata';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {Provider, TypeProvider, ValueProvider, ClassProvider, ExistingProvider, FactoryProvider} from './di/provider';\nexport {ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {InjectionToken, OpaqueToken} from './di/injection_token';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `Type` when `Type' is used\n * as token.\n * \\@howToUse \n * ```\n * \\@Injectable() \n * class MyService {}\n * \n * const provider: TypeProvider = MyService;\n * ```\n * \n * \\@description \n * \n * Create an instance by invoking the `new` operator and supplying additional arguments.\n * This form is a short form of `TypeProvider`;\n * \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='TypeProvider'}\n * \n * \\@stable\n * @record\n */\nexport function TypeProvider() {}\n\n\nfunction TypeProvider_tsickle_Closure_declarations() {\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return an instance of `Type` when `Type' is used\n * as token.\n * @howToUse\n * ```\n * @Injectable()\n * class MyService {}\n *\n * const provider: TypeProvider = MyService;\n * ```\n *\n * @description\n *\n * Create an instance by invoking the `new` operator and supplying additional arguments.\n * This form is a short form of `TypeProvider`;\n *\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='TypeProvider'}\n *\n * @stable\n */\nexport interface TypeProvider extends Type<any> {}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value for a token.\n * \\@howToUse \n * ```\n * const provider: ValueProvider = {provide: 'someToken', useValue: 'someValue'};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='ValueProvider'}\n * \n * \\@stable\n * @record\n */\nexport function ValueProvider() {}\n\n\nfunction ValueProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nValueProvider.prototype.provide;\n/**\n * The value to inject.\n * @type {?}\n */\nValueProvider.prototype.useValue;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nValueProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return a value for a token.\n * @howToUse\n * ```\n * const provider: ValueProvider = {provide: 'someToken', useValue: 'someValue'};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='ValueProvider'}\n *\n * @stable\n */\nexport interface ValueProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * The value to inject.\n   */\n  useValue: any;\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `useClass` for a token.\n * \\@howToUse \n * ```\n * \\@Injectable() \n * class MyService {}\n * \n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='ClassProvider'}\n * \n * Note that following two providers are not equal:\n * {\\@example core/di/ts/provider_spec.ts region='ClassProviderDifference'}\n * \n * \\@stable\n * @record\n */\nexport function ClassProvider() {}\n\n\nfunction ClassProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nClassProvider.prototype.provide;\n/**\n * Class to instantiate for the `token`.\n * @type {?}\n */\nClassProvider.prototype.useClass;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nClassProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return an instance of `useClass` for a token.\n * @howToUse\n * ```\n * @Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='ClassProvider'}\n *\n * Note that following two providers are not equal:\n * {@example core/di/ts/provider_spec.ts region='ClassProviderDifference'}\n *\n * @stable\n */\nexport interface ClassProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * Class to instantiate for the `token`.\n   */\n  useClass: Type<any>;\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value of another `useExisting` token.\n * \\@howToUse \n * ```\n * const provider: ExistingProvider = {provide: 'someToken', useExisting: 'someOtherToken'};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='ExistingProvider'}\n * \n * \\@stable\n * @record\n */\nexport function ExistingProvider() {}\n\n\nfunction ExistingProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nExistingProvider.prototype.provide;\n/**\n * Existing `token` to return. (equivalent to `injector.get(useExisting)`)\n * @type {?}\n */\nExistingProvider.prototype.useExisting;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nExistingProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return a value of another `useExisting` token.\n * @howToUse\n * ```\n * const provider: ExistingProvider = {provide: 'someToken', useExisting: 'someOtherToken'};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='ExistingProvider'}\n *\n * @stable\n */\nexport interface ExistingProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * Existing `token` to return. (equivalent to `injector.get(useExisting)`)\n   */\n  useExisting: any;\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value by invoking a `useFactory`\n * function.\n * \\@howToUse \n * ```\n * function serviceFactory() { ... }\n * \n * const provider: FactoryProvider = {provide: 'someToken', useFactory: serviceFactory, deps: []};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='FactoryProvider'}\n * \n * Dependencies can also be marked as optional:\n * {\\@example core/di/ts/provider_spec.ts region='FactoryProviderOptionalDeps'}\n * \n * \\@stable\n * @record\n */\nexport function FactoryProvider() {}\n\n\nfunction FactoryProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nFactoryProvider.prototype.provide;\n/**\n * A function to invoke to create a value for this `token`. The function is invoked with\n * resolved values of `token`s in the `deps` field.\n * @type {?}\n */\nFactoryProvider.prototype.useFactory;\n/**\n * A list of `token`s which need to be resolved by the injector. The list of values is then\n * used as arguments to the `useFactory` function.\n * @type {?|undefined}\n */\nFactoryProvider.prototype.deps;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nFactoryProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return a value by invoking a `useFactory`\n * function.\n * @howToUse\n * ```\n * function serviceFactory() { ... }\n *\n * const provider: FactoryProvider = {provide: 'someToken', useFactory: serviceFactory, deps: []};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='FactoryProvider'}\n *\n * Dependencies can also be marked as optional:\n * {@example core/di/ts/provider_spec.ts region='FactoryProviderOptionalDeps'}\n *\n * @stable\n */\nexport interface FactoryProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * A function to invoke to create a value for this `token`. The function is invoked with\n   * resolved values of `token`s in the `deps` field.\n   */\n  useFactory: Function;\n\n  /**\n   * A list of `token`s which need to be resolved by the injector. The list of values is then\n   * used as arguments to the `useFactory` function.\n   */\n  deps?: any[];\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n\n/**\n * @whatItDoes Describes how the {@link Injector} should be configured.\n * @howToUse\n * See {@link TypeProvider}, {@link ValueProvider}, {@link ClassProvider}, {@link ExistingProvider},\n * {@link FactoryProvider}.\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * @stable\n */\nexport type Provider =\n    TypeProvider | ValueProvider | ClassProvider | ExistingProvider | FactoryProvider | any[];\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst /** @type {?} */ UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n * \n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n * \n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n * \n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n * \n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n * \n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ReflectiveInjector implements Injector {\n/**\n * Turns an array of provider definitions into an array of resolved providers.\n * \n * A resolution is a process of flattening multiple nested arrays and converting individual\n * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n * \n * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n * \n * expect(providers.length).toEqual(2);\n * \n * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n * expect(providers[0].key.displayName).toBe(\"Car\");\n * expect(providers[0].dependencies.length).toEqual(1);\n * expect(providers[0].factory).toBeDefined();\n * \n * expect(providers[1].key.displayName).toBe(\"Engine\");\n * });\n * ```\n * \n * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n * @param {?} providers\n * @return {?}\n */\nstatic resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n/**\n * Resolves an array of providers and creates an injector from those providers.\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \n * This function is slower than the corresponding `fromResolvedProviders`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic resolveAndCreate(providers: Provider[], parent?: Injector): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n/**\n * Creates an injector from previously resolved providers.\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, Engine]);\n * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \\@experimental\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent?: Injector):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n\n\n  /**\n   * Parent of this injector.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n   *\n   * ```typescript\n   * var parent = ReflectiveInjector.resolveAndCreate([]);\n   * var child = parent.resolveAndCreateChild([]);\n   * expect(child.parent).toBe(parent);\n   * ```\n   */\n  abstract get parent(): Injector|null;\n\n  /**\n   * Resolves an array of providers and creates a child injector from those providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * The passed-in providers can be an array of `Type`, {@link Provider},\n   * or a recursive array of more providers.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n   * var child = parent.resolveAndCreateChild([ChildProvider]);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   *\n   * This function is slower than the corresponding `createChildFromResolved`\n   * because it needs to resolve the passed-in providers first.\n   * See {@link ReflectiveInjector#resolve} and {@link ReflectiveInjector#createChildFromResolved}.\n   */\n  abstract resolveAndCreateChild(providers: Provider[]): ReflectiveInjector;\n\n  /**\n   * Creates a child injector from previously resolved providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n   * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n   *\n   * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n   * var child = parent.createChildFromResolved(childProviders);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector;\n\n  /**\n   * Resolves a provider and instantiates an object in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   *\n   * var car = injector.resolveAndInstantiate(Car);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n   * ```\n   */\n  abstract resolveAndInstantiate(provider: Provider): any;\n\n  /**\n   * Instantiates an object using a resolved provider in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   * var carProvider = ReflectiveInjector.resolve([Car])[0];\n   * var car = injector.instantiateResolved(carProvider);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n   * ```\n   */\n  abstract instantiateResolved(provider: ResolvedReflectiveProvider): any;\n\n  abstract get(token: any, notFoundValue?: any): any;\n}\n\nfunction ReflectiveInjector_tsickle_Closure_declarations() {\n\n/**\n * Parent of this injector.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n * \n * ```typescript\n * var parent = ReflectiveInjector.resolveAndCreate([]);\n * var child = parent.resolveAndCreateChild([]);\n * expect(child.parent).toBe(parent);\n * ```\n * @abstract\n * @return {?}\n */\nReflectiveInjector.prototype.parent = function() {};\n\n/**\n * Resolves an array of providers and creates a child injector from those providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n * var child = parent.resolveAndCreateChild([ChildProvider]);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * \n * This function is slower than the corresponding `createChildFromResolved`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#createChildFromResolved}.\n * @abstract\n * @param {?} providers\n * @return {?}\n */\nReflectiveInjector.prototype.resolveAndCreateChild = function(providers) {};\n\n/**\n * Creates a child injector from previously resolved providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n * \n * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n * var child = parent.createChildFromResolved(childProviders);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * @abstract\n * @param {?} providers\n * @return {?}\n */\nReflectiveInjector.prototype.createChildFromResolved = function(providers) {};\n\n/**\n * Resolves a provider and instantiates an object in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * \n * var car = injector.resolveAndInstantiate(Car);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\nReflectiveInjector.prototype.resolveAndInstantiate = function(provider) {};\n\n/**\n * Instantiates an object using a resolved provider in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * var carProvider = ReflectiveInjector.resolve([Car])[0];\n * var car = injector.instantiateResolved(carProvider);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\nReflectiveInjector.prototype.instantiateResolved = function(provider) {};\n\n/**\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nReflectiveInjector.prototype.get = function(token, notFoundValue) {};\n}\n\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n/**\n * \\@internal\n */\n_constructionCounter: number = 0;\n/**\n * \\@internal\n */\n\npublic _providers: ResolvedReflectiveProvider[];\n/**\n * \\@internal\n */\n\npublic _parent: Injector|null;\n\n  keyIds: number[];\n  objs: any[];\n/**\n * Private\n * @param {?} _providers\n * @param {?=} _parent\n */\nconstructor(_providers: ResolvedReflectiveProvider[], _parent?: Injector) {\n    this._providers = _providers;\n    this._parent = _parent || null;\n\n    const /** @type {?} */ len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let /** @type {?} */ i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget parent(): Injector|null { return this._parent; }\n/**\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n/**\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const /** @type {?} */ inj = new ReflectiveInjector_(providers);\n    inj._parent = this;\n    return inj;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n/**\n * \\@internal\n * @param {?} provider\n * @return {?}\n */\n_new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n/**\n * @return {?}\n */\n\nprivate _getMaxNumberOfObjects(): number { return this.objs.length; }\n/**\n * @param {?} provider\n * @return {?}\n */\n\nprivate _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n      for (let /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n/**\n * @param {?} provider\n * @param {?} ResolvedReflectiveFactory\n * @return {?}\n */\n\nprivate _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n\n    let /** @type {?} */ deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch ( /** @type {?} */e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let /** @type {?} */ obj: any;\n    try {\n      obj = factory(...deps);\n    } catch ( /** @type {?} */e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n/**\n * @param {?} dep\n * @return {?}\n */\n\nprivate _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n/**\n * @param {?} key\n * @param {?} visibility\n * @param {?} notFoundValue\n * @return {?}\n */\n\nprivate _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf|null, notFoundValue: any): any {\n    if (key === INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n/**\n * @param {?} keyId\n * @return {?}\n */\n\nprivate _getObjByKeyId(keyId: number): any {\n    for (let /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const /** @type {?} */ obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @param {?} visibility\n * @return {?}\n */\n_getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf|null): any {\n    let /** @type {?} */ inj: Injector|null;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this._parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const /** @type {?} */ inj_ = /** @type {?} */(( <ReflectiveInjector_>inj));\n      const /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_._parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n/**\n * @return {?}\n */\nget displayName(): string {\n    const /** @type {?} */ providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.displayName; }\n}\n\nfunction ReflectiveInjector__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._constructionCounter;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._providers;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._parent;\n/** @type {?} */\nReflectiveInjector_.prototype.keyIds;\n/** @type {?} */\nReflectiveInjector_.prototype.objs;\n}\n\n\nconst /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const /** @type {?} */ res: any[] = new Array(injector._providers.length);\n  for (let /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @record\n */\nfunction NormalizedProvider() {}\n\n\nfunction NormalizedProvider_tsickle_Closure_declarations() {\n}\n\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n/**\n * @param {?} key\n * @param {?} optional\n * @param {?} visibility\n */\nconstructor(\npublic key: ReflectiveKey,\npublic optional: boolean,\npublic visibility: Self|SkipSelf|null) {}\n/**\n * @param {?} key\n * @return {?}\n */\nstatic fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nfunction ReflectiveDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveDependency.prototype.key;\n/** @type {?} */\nReflectiveDependency.prototype.optional;\n/** @type {?} */\nReflectiveDependency.prototype.visibility;\n}\n\n\nconst /** @type {?} */ _EMPTY_LIST: any[] = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n * \n * It is usually created automatically by `Injector.resolveAndCreate`.\n * \n * It can be created manually, as follows:\n * \n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n * \n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n * \n * expect(injector.get('message')).toEqual('Hello');\n * ```\n * \n * \\@experimental\n * @record\n */\nexport function ResolvedReflectiveProvider() {}\n\n\nfunction ResolvedReflectiveProvider_tsickle_Closure_declarations() {\n/**\n * A key, usually a `Type<any>`.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.key;\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.resolvedFactories;\n/**\n * Indicates if the provider is a multi-provider or a regular provider.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.multiProvider;\n}\n\n\n/**\n * An internal resolved representation of a {@link Provider} used by the {@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @experimental\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n/**\n * @param {?} key\n * @param {?} resolvedFactories\n * @param {?} multiProvider\n */\nconstructor(\npublic key: ReflectiveKey,\npublic resolvedFactories: ResolvedReflectiveFactory[],\npublic multiProvider: boolean) {}\n/**\n * @return {?}\n */\nget resolvedFactory(): ResolvedReflectiveFactory { return this.resolvedFactories[0]; }\n}\n\nfunction ResolvedReflectiveProvider__tsickle_Closure_declarations() {\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.key;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.resolvedFactories;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.multiProvider;\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nexport class ResolvedReflectiveFactory {\n/**\n * @param {?} factory\n * @param {?} dependencies\n */\nconstructor(\npublic factory: Function,\npublic dependencies: ReflectiveDependency[]) {}\n}\n\nfunction ResolvedReflectiveFactory_tsickle_Closure_declarations() {\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.factory;\n/**\n * Arguments (dependencies) to the `factory` function.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.dependencies;\n}\n\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let /** @type {?} */ factoryFn: Function;\n  let /** @type {?} */ resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n * \n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)],\n      provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const /** @type {?} */ normalized = _normalizeProviders(providers, []);\n  const /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n  const /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    const /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let /** @type {?} */ resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && ( /** @type {?} */((b as any))).provide !== undefined) {\n      res.push( /** @type {?} */((b as NormalizedProvider)));\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nexport function constructDependencies(\n    typeOrFunc: any, dependencies?: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const /** @type {?} */ params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const /** @type {?} */ params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let /** @type {?} */ token: any = null;\n  let /** @type {?} */ optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let /** @type {?} */ visibility: Self|SkipSelf|null = null;\n\n  for (let /** @type {?} */ i = 0; i < metadata.length; ++i) {\n    const /** @type {?} */ paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf | null): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n/**\n * @param {?} reflectionCapabilities\n */\nconstructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n/**\n * @param {?} caps\n * @return {?}\n */\nupdateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n/**\n * @param {?} type\n * @return {?}\n */\nfactory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n/**\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\nfunction Reflector_tsickle_Closure_declarations() {\n/** @type {?} */\nReflector.prototype.reflectionCapabilities;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * @record\n */\nexport function PlatformReflectionCapabilities() {}\n\n\nfunction PlatformReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.isReflectionEnabled;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.factory;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.hasLifecycleHook;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.parameters;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.annotations;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.propMetadata;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.getter;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.setter;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.method;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.importUri;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resourceUri;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resolveIdentifier;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resolveEnum;\n}\n\n\nexport interface PlatformReflectionCapabilities {\n  isReflectionEnabled(): boolean;\n  factory(type: Type<any>): Function;\n  hasLifecycleHook(type: any, lcProperty: string): boolean;\n  parameters(type: Type<any>): any[][];\n  annotations(type: Type<any>): any[];\n  propMetadata(typeOrFunc: Type<any>): {[key: string]: any[]};\n  getter(name: string): GetterFn;\n  setter(name: string): SetterFn;\n  method(name: string): MethodFn;\n  importUri(type: Type<any>): string;\n  resourceUri(type: Type<any>): string;\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any;\n  resolveEnum(enumIdentifier: any, name: string): any;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const /** @type {?} */ DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @template T\n * @param {?} t\n * @return {?}\n */\nfactory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n/**\n * \\@internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let /** @type {?} */ result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>type))).parameters && ( /** @type {?} */((<any>type))).parameters !== parentCtor.parameters) {\n      return ( /** @type {?} */((<any>type))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */ tsickleCtorParams = ( /** @type {?} */((<any>type))).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const /** @type {?} */ paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n      const /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n      const /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n      if (paramTypes || paramAnnotations) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(( /** @type {?} */((<any>type.length)))).fill(undefined);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nparameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(type);\n    let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).annotations && ( /** @type {?} */((<any>typeOrFunc))).annotations !== parentCtor.annotations) {\n      let /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).decorators && ( /** @type {?} */((<any>typeOrFunc))).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).propMetadata &&\n        ( /** @type {?} */((<any>typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).propDecorators &&\n        ( /** @type {?} */((<any>typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      const /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return `./${stringify(type)}`; }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectionCapabilities.prototype._reflect;\n}\n\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */ decoratorType = decoratorInvocation.type;\n    const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor: Function): Type<any> {\n  const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n * \n * \\@description \n * \n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n * \n * \\@stable\n */\nexport const /** @type {?} */ Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n * \n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n * \n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n * \n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * \\@experimental\n */\nexport class ReflectiveKey {\n/**\n * Private\n * @param {?} token\n * @param {?} id\n */\nconstructor(public token: Object,\npublic id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n  }\n/**\n * Returns a stringified token.\n * @return {?}\n */\nget displayName(): string { return stringify(this.token); }\n/**\n * Retrieves a `Key` for a token.\n * @param {?} token\n * @return {?}\n */\nstatic get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n/**\n * @return {?} the number of keys registered in the system.\n */\nstatic get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nfunction ReflectiveKey_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveKey.prototype.token;\n/** @type {?} */\nReflectiveKey.prototype.id;\n}\n\n/**\n * \\@internal\n */\nexport class KeyRegistry {\nprivate _allKeys = new Map<Object, ReflectiveKey>();\n/**\n * @param {?} token\n * @return {?}\n */\nget(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return /** @type {?} */(( this._allKeys.get(token)));\n    }\n\n    const /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n/**\n * @return {?}\n */\nget numberOfKeys(): number { return this._allKeys.size; }\n}\n\nfunction KeyRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyRegistry.prototype._allKeys;\n}\n\n\nconst /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const /** @type {?} */ res: any[] = [];\n  for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n    const /** @type {?} */ tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n/**\n * @record\n */\nexport function InjectionError() {}\n\n\nfunction InjectionError_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectionError.prototype.keys;\n/** @type {?} */\nInjectionError.prototype.injectors;\n/** @type {?} */\nInjectionError.prototype.constructResolvingMessage;\n/** @type {?} */\nInjectionError.prototype.addKey;\n}\n\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (keys: ReflectiveKey[]) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (keys: ReflectiveKey[]) => string,\n    originalError?: Error): InjectionError {\n  const /** @type {?} */ keys = [key];\n  const /** @type {?} */ errMsg = constructResolvingMessage(keys);\n  const /** @type {?} */ error = /** @type {?} */((\n      (originalError ? wrappedError(errMsg, originalError) : Error(errMsg)) as InjectionError));\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n * \n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const /** @type {?} */ first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when dependencies form a cycle.\n * \n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n * \n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n * \n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n * \n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n * \n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n * \n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const /** @type {?} */ first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n * \n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n * \n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n * \n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * \n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n * \n * ```typescript\n * class B {}\n * \n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n * \n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const /** @type {?} */ signature: string[] = [];\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n    const /** @type {?} */ parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n * \n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n * \n * ```typescript\n * class A {}\n * \n * var injector = Injector.resolveAndCreate([A]);\n * \n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n * \n * ### Example\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n * \n * \\@description \n * \n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n * \n * ### Example\n * \n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n * \n * \\@NgModule({ \n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n * \n * \\@stable\n */\nexport class ErrorHandler {\n/**\n * \\@internal\n */\n_console: Console = console;\n/**\n * @param {?=} deprecatedParameter\n */\nconstructor(\n      /**\n       * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n       * rethrow.\n       */\n      deprecatedParameter?: boolean) {}\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any): void {\n    const /** @type {?} */ originalError = this._findOriginalError(error);\n    const /** @type {?} */ context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const /** @type {?} */ errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findOriginalError(error: Error): any {\n    let /** @type {?} */ e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nfunction ErrorHandler_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nErrorHandler.prototype._console;\n}\n\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message: string, originalError: any): Error {\n  const /** @type {?} */ msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const /** @type {?} */ error = Error(msg);\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view/index';\n\nexport const /** @type {?} */ ERROR_TYPE = 'ngType';\nexport const /** @type {?} */ ERROR_COMPONENT_TYPE = 'ngComponentType';\nexport const /** @type {?} */ ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const /** @type {?} */ ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const /** @type {?} */ ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error: Error): Function {\n  return ( /** @type {?} */((error as any)))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error: Error): DebugContext {\n  return ( /** @type {?} */((error as any)))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error: Error): Error {\n  return ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return ( /** @type {?} */((error as any)))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  ( /** @type {?} */((<any>console.error)))(...values);\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectionToken} from './injection_token';\n\nconst /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\nexport const /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nclass _NullInjector implements Injector {\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      throw new Error(`No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse \n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n * \n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new _NullInjector();\n\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * If not found:\n   * - Throws an error if no `notFoundValue` that is not equal to\n   * Injector.THROW_IF_NOT_FOUND is given\n   * - Returns the `notFoundValue` otherwise\n   */\n  abstract get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T): T;\n  /**\n   * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n}\n\nfunction Injector_tsickle_Closure_declarations() {\n/** @type {?} */\nInjector.THROW_IF_NOT_FOUND;\n/** @type {?} */\nInjector.NULL;\n\n/**\n * Retrieves an instance from the injector based on the provided token.\n * If not found:\n * - Throws an error if no `notFoundValue` that is not equal to\n * Injector.THROW_IF_NOT_FOUND is given\n * - Returns the `notFoundValue` otherwise\n * @abstract\n * @template T\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nInjector.prototype.get = function(token, notFoundValue) {};\n\n/**\n * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n * @suppress {duplicate}\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nInjector.prototype.get = function(token, notFoundValue) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n * \n * ### Example\n * \n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\nexport function ForwardRefFn() {}\n\n\nfunction ForwardRefFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n}\n\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @experimental\n */\nexport interface ForwardRefFn { (): any; }\n/**\n * Allows to refer to references which are not yet defined.\n * \n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n * \n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  ( /** @type {?} */((<any>forwardRefFn))).__forward_ref__ = forwardRef;\n  ( /** @type {?} */((<any>forwardRefFn))).toString = function() { return stringify(this()); };\n  return ( /** @type {?} */((<Type<any>> /** @type {?} */((<any>forwardRefFn)))));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * \n * Acts as the identity function when given a non-forward-ref value.\n * \n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n * \n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n * \n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n      type.__forward_ref__ === forwardRef) {\n    return ( /** @type {?} */((<ForwardRefFn>type)))();\n  } else {\n    return type;\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\n/**\n * Type of the Inject decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function InjectDecorator() {}\n\n\nfunction InjectDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(token: any): any;\n*/\n/* TODO: handle strange member:\nnew (token: any): Inject;\n*/\n}\n\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @stable\n */\nexport interface InjectDecorator {\n  /**\n   * @whatItDoes A parameter decorator that specifies a dependency.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Inject(\"MyEngine\") public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, {@link Injector} will use the type annotation of the\n   * parameter.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   *\n   * @stable\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @stable\n */\nexport interface Inject { token: any; }\n/**\n * Inject decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Inject: InjectDecorator = makeParamDecorator('Inject', (token: any) => ({token}));\n/**\n * Type of the Optional decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function OptionalDecorator() {}\n\n\nfunction OptionalDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): Optional;\n*/\n}\n\n\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @stable\n */\nexport interface OptionalDecorator {\n  /**\n   * @whatItDoes A parameter metadata that marks a dependency as optional.\n   * {@link Injector} provides `null` if the dependency is not found.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Optional() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @stable\n */\nexport interface Optional {}\n/**\n * Optional decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Optional: OptionalDecorator = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function InjectableDecorator() {}\n\n\nfunction InjectableDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): Injectable;\n*/\n}\n\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @stable\n */\nexport interface InjectableDecorator {\n  /**\n   * @whatItDoes A marker metadata that marks a class as available to {@link Injector} for creation.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {}\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * {@link Injector} will throw an error when trying to instantiate a class that\n   * does not have `@Injectable` marker, as shown in the example below.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @stable\n */\nexport interface Injectable {}\n/**\n * Injectable decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Injectable: InjectableDecorator = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function SelfDecorator() {}\n\n\nfunction SelfDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): Self;\n*/\n}\n\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @stable\n */\nexport interface SelfDecorator {\n  /**\n   * @whatItDoes Specifies that an {@link Injector} should retrieve a dependency only from itself.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Self() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @stable\n */\nexport interface Self {}\n/**\n * Self decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Self: SelfDecorator = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function SkipSelfDecorator() {}\n\n\nfunction SkipSelfDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): SkipSelf;\n*/\n}\n\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * @stable\n */\nexport interface SkipSelfDecorator {\n  /**\n   * @whatItDoes Specifies that the dependency resolution should start from the parent injector.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@SkipSelf() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n * @stable\n */\nexport interface SkipSelf {}\n/**\n * SkipSelf decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function HostDecorator() {}\n\n\nfunction HostDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): Host;\n*/\n}\n\n\n/**\n * Type of the Host decorator / constructor function.\n *\n * @stable\n */\nexport interface HostDecorator {\n  /**\n   * @whatItDoes Specifies that an injector should retrieve a dependency from any injector until\n   * reaching the host element of the current component.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Host() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @stable\n */\nexport interface Host {}\n/**\n * Host decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Host: HostDecorator = makeParamDecorator('Host');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@whatItDoes Represents the version of Angular\n * \n * \\@stable\n */\nexport class Version {\n/**\n * @param {?} full\n */\nconstructor(public full: string) {}\n/**\n * @return {?}\n */\nget major(): string { return this.full.split('.')[0]; }\n/**\n * @return {?}\n */\nget minor(): string { return this.full.split('.')[1]; }\n/**\n * @return {?}\n */\nget patch(): string { return this.full.split('.').slice(2).join('.'); }\n}\n\nfunction Version_tsickle_Closure_declarations() {\n/** @type {?} */\nVersion.prototype.full;\n}\n\n/**\n * \\@stable\n */\nexport const /** @type {?} */ VERSION = new Version('5.0.0-beta.2');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This indirection is needed to free up Component, etc symbols in the public API\n * to be used by the decorator versions of these annotations.\n */\n\nimport {Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren} from './metadata/di';\nimport {Component, Directive, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nimport {ModuleWithProviders, NgModule, SchemaMetadata} from './metadata/ng_module';\nimport {ViewEncapsulation} from './metadata/view';\n\nexport {ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildDecorator, ContentChildren, ContentChildrenDecorator, Query, ViewChild, ViewChildDecorator, ViewChildren, ViewChildrenDecorator} from './metadata/di';\nexport {Component, ComponentDecorator, Directive, DirectiveDecorator, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nexport {AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, DoCheck, OnChanges, OnDestroy, OnInit} from './metadata/lifecycle_hooks';\nexport {CUSTOM_ELEMENTS_SCHEMA, ModuleWithProviders, NO_ERRORS_SCHEMA, NgModule, SchemaMetadata} from './metadata/ng_module';\nexport {ViewEncapsulation} from './metadata/view';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport type ViewEncapsulation = number;\nexport let ViewEncapsulation: any = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * Metadata properties available for configuring Views.\n * \n * For details on the `\\@Component` annotation, see {\\@link Component}.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n * \n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n * \n * @deprecated Use Component instead.\n * \n * {\\@link Component}\n */\nexport class ViewMetadata {\n/**\n * {\\@link Component#templateUrl}\n */\ntemplateUrl: string|undefined;\n/**\n * {\\@link Component#template}\n */\ntemplate: string|undefined;\n/**\n * {\\@link Component#stylesUrl}\n */\nstyleUrls: string[]|undefined;\n/**\n * {\\@link Component#styles}\n */\nstyles: string[]|undefined;\n/**\n * {\\@link Component#encapsulation}\n */\nencapsulation: ViewEncapsulation|undefined;\n/**\n * {\\@link Component#animation}\n */\nanimations: any[]|undefined;\n/**\n * {\\@link Component#interpolation}\n */\ninterpolation: [string, string]|undefined;\n/**\n * @param {?=} opts\n */\nconstructor(opts: {\n    templateUrl?: string,\n    template?: string,\n    encapsulation?: ViewEncapsulation,\n    styles?: string[],\n    styleUrls?: string[],\n    animations?: any[],\n    interpolation?: [string, string]\n  } = {}) {\n    this.templateUrl = opts.templateUrl;\n    this.template = opts.template;\n    this.styleUrls = opts.styleUrls;\n    this.styles = opts.styles;\n    this.encapsulation = opts.encapsulation;\n    this.animations = opts.animations;\n    this.interpolation = opts.interpolation;\n  }\n}\n\nfunction ViewMetadata_tsickle_Closure_declarations() {\n/**\n * {\\@link Component#templateUrl}\n * @type {?}\n */\nViewMetadata.prototype.templateUrl;\n/**\n * {\\@link Component#template}\n * @type {?}\n */\nViewMetadata.prototype.template;\n/**\n * {\\@link Component#stylesUrl}\n * @type {?}\n */\nViewMetadata.prototype.styleUrls;\n/**\n * {\\@link Component#styles}\n * @type {?}\n */\nViewMetadata.prototype.styles;\n/**\n * {\\@link Component#encapsulation}\n * @type {?}\n */\nViewMetadata.prototype.encapsulation;\n/**\n * {\\@link Component#animation}\n * @type {?}\n */\nViewMetadata.prototype.animations;\n/**\n * {\\@link Component#interpolation}\n * @type {?}\n */\nViewMetadata.prototype.interpolation;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n/**\n * A wrapper around a module that also includes the providers.\n * \n * \\@stable\n * @record\n */\nexport function ModuleWithProviders() {}\n\n\nfunction ModuleWithProviders_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleWithProviders.prototype.ngModule;\n/** @type {?|undefined} */\nModuleWithProviders.prototype.providers;\n}\n\n\n/**\n * A wrapper around a module that also includes the providers.\n *\n * @stable\n */\nexport interface ModuleWithProviders {\n  ngModule: Type<any>;\n  providers?: Provider[];\n}\n/**\n * Interface for schema definitions in \\@NgModules.\n * \n * \\@experimental\n * @record\n */\nexport function SchemaMetadata() {}\n\n\nfunction SchemaMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nSchemaMetadata.prototype.name;\n}\n\n\n/**\n * Interface for schema definitions in @NgModules.\n *\n * @experimental\n */\nexport interface SchemaMetadata { name: string; }\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n * \n * \\@stable\n */\nexport const /** @type {?} */ CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function NgModuleDecorator() {}\n\n\nfunction NgModuleDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(obj?: NgModule): TypeDecorator;\n*/\n/* TODO: handle strange member:\nnew (obj?: NgModule): NgModule;\n*/\n}\n\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * @stable\n */\nexport interface NgModuleDecorator {\n  /**\n   * Defines an NgModule.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @stable\n */\nexport interface NgModule {\n  /**\n   * Defines the set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Specifies a list of directives/pipes that belong to this module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of modules whose exported directives/pipes\n   * should be available to templates in this module.\n   * This can also contain {@link ModuleWithProviders}.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   */\n  imports?: Array<Type<any>|ModuleWithProviders|any[]>;\n\n  /**\n   * Specifies a list of directives/pipes/modules that can be used within the template\n   * of any component that is part of an Angular module\n   * that imports this Angular module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of components that should be compiled when this module is defined.\n   * For each component listed here, Angular will create a {@link ComponentFactory}\n   * and store it in the {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * Defines the components that should be bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * will automatically be added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * Elements and properties that are not Angular components nor directives have to be declared in\n   * the schema.\n   *\n   * Available schemas:\n   * - `NO_ERRORS_SCHEMA`: any elements and properties are allowed,\n   * - `CUSTOM_ELEMENTS_SCHEMA`: any custom elements (tag name has \"-\") with any properties are\n   *   allowed.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA` we're trusting that\n   * allowed elements (and its properties) securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * An opaque ID for this module, e.g. a name or a path. Used to identify modules in\n   * `getModuleFactory`. If left `undefined`, the `NgModule` will not be registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n}\n/**\n * NgModule decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ NgModule: NgModuleDecorator =\n    makeDecorator('NgModule', (ngModule: NgModule) => ngModule);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SimpleChange} from '../change_detection/change_detection_util';\n/**\n * A `changes` object whose keys are property names and\n * values are instances of {\\@link SimpleChange}. See {\\@link OnChanges}\n * \\@stable\n * @record\n */\nexport function SimpleChanges() {}\n\n\nfunction SimpleChanges_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n[propName: string]: SimpleChange;\n*/\n}\n\n\n\n/**\n * A `changes` object whose keys are property names and\n * values are instances of {@link SimpleChange}. See {@link OnChanges}\n * @stable\n */\nexport interface SimpleChanges { [propName: string]: SimpleChange; }\n/**\n * \\@whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n * \n * \\@description \n * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n * and content children are checked if at least one of them has changed.\n * The `changes` parameter contains the changed properties.\n * \n * See {\\@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function OnChanges() {}\n\n\nfunction OnChanges_tsickle_Closure_declarations() {\n/** @type {?} */\nOnChanges.prototype.ngOnChanges;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n *\n * @description\n * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n * and content children are checked if at least one of them has changed.\n * The `changes` parameter contains the changed properties.\n *\n * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnChanges { ngOnChanges(changes: SimpleChanges): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n * initialized.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n * \n * \\@description \n * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n * first time, and before any of its children have been checked. It is invoked only once when the\n * directive is instantiated.\n * \n * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function OnInit() {}\n\n\nfunction OnInit_tsickle_Closure_declarations() {\n/** @type {?} */\nOnInit.prototype.ngOnInit;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n *\n * @description\n * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n * first time, and before any of its children have been checked. It is invoked only once when the\n * directive is instantiated.\n *\n * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnInit { ngOnInit(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n * \n * \\@description \n * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n * algorithm. The default change detection algorithm looks for differences by comparing\n * bound-property values by reference across change detection runs.\n * \n * Note that a directive typically should not use both `DoCheck` and {\\@link OnChanges} to respond to\n * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n * detector detects changes.\n * \n * See {\\@link KeyValueDiffers} and {\\@link IterableDiffers} for implementing custom dirty checking\n * for collections.\n * \n * See {\\@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function DoCheck() {}\n\n\nfunction DoCheck_tsickle_Closure_declarations() {\n/** @type {?} */\nDoCheck.prototype.ngDoCheck;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n *\n * @description\n * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n * algorithm. The default change detection algorithm looks for differences by comparing\n * bound-property values by reference across change detection runs.\n *\n * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n * detector detects changes.\n *\n * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n * for collections.\n *\n * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface DoCheck { ngDoCheck(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n * \n * \\@description \n * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n * instance is destroyed.\n * \n * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function OnDestroy() {}\n\n\nfunction OnDestroy_tsickle_Closure_declarations() {\n/** @type {?} */\nOnDestroy.prototype.ngOnDestroy;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n *\n * @description\n * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n * instance is destroyed.\n *\n * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnDestroy { ngOnDestroy(): void; }\n/**\n *\n * \\@whatItDoes Lifecycle hook that is called after a directive's content has been fully\n * initialized.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n * \n * \\@description \n * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function AfterContentInit() {}\n\n\nfunction AfterContentInit_tsickle_Closure_declarations() {\n/** @type {?} */\nAfterContentInit.prototype.ngAfterContentInit;\n}\n\n\n/**\n *\n * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterContentInit { ngAfterContentInit(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called after every check of a directive's content.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n * \n * \\@description \n * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function AfterContentChecked() {}\n\n\nfunction AfterContentChecked_tsickle_Closure_declarations() {\n/** @type {?} */\nAfterContentChecked.prototype.ngAfterContentChecked;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterContentChecked { ngAfterContentChecked(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called after a component's view has been fully\n * initialized.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n * \n * \\@description \n * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function AfterViewInit() {}\n\n\nfunction AfterViewInit_tsickle_Closure_declarations() {\n/** @type {?} */\nAfterViewInit.prototype.ngAfterViewInit;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterViewInit { ngAfterViewInit(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called after every check of a component's view.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n * \n * \\@description \n * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function AfterViewChecked() {}\n\n\nfunction AfterViewChecked_tsickle_Closure_declarations() {\n/** @type {?} */\nAfterViewChecked.prototype.ngAfterViewChecked;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterViewChecked { ngAfterViewChecked(): void; }\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\n\nimport {ViewEncapsulation} from './view';\n/**\n * Type of the Directive decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function DirectiveDecorator() {}\n\n\nfunction DirectiveDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(obj: Directive): TypeDecorator;\n*/\n/* TODO: handle strange member:\nnew (obj: Directive): Directive;\n*/\n}\n\n\n\n/**\n * Type of the Directive decorator / constructor function.\n *\n * @stable\n */\nexport interface DirectiveDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular directive and collects directive configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * }\n   * ```\n   *\n   * @description\n   *\n   * Directive decorator allows you to mark a class as an Angular directive and provide additional\n   * metadata that determines how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directives allow you to attach behavior to elements in the DOM..\n   *\n   * A directive must belong to an NgModule in order for it to be usable\n   * by another directive, component, or application. To specify that a directive is a member of an\n   * NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Directive decorator,\n   * directives can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   * attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **outputs** - list of class property names that expose output events that others can\n   * subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the {@link Directive} decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\nexport interface Directive {\n  /**\n   * The CSS selector that triggers the instantiation of a directive.\n   *\n   * Angular only allows directives to trigger on CSS selectors that do not cross element\n   * boundaries.\n   *\n   * `selector` may be declared as one of the following:\n   *\n   * - `element-name`: select by element name.\n   * - `.class`: select by class name.\n   * - `[attribute]`: select by attribute name.\n   * - `[attribute=value]`: select by attribute name and value.\n   * - `:not(sub_selector)`: select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: select if either `selector1` or `selector2` matches.\n   *\n   *\n   * ### Example\n   *\n   * Suppose we have a directive with an `input[type=text]` selector.\n   *\n   * And the following HTML:\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   * The directive would only be instantiated on the `<input type=\"text\">` element.\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   *\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ivhfXY?p=preview))\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   * class App {}\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/d5CNq7?p=preview))\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   *   outputs: ['everySecond', 'five5Secs: everyFiveSeconds']\n   * })\n   * class IntervalDir {\n   *   everySecond = new EventEmitter();\n   *   five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Specify the events, actions, properties and attributes related to the host element.\n   *\n   * ## Host Listeners\n   *\n   * Specifies which DOM events a directive listens to via a set of `(event)` to `method`\n   * key-value pairs:\n   *\n   * - `event`: the DOM event that the directive listens to.\n   * - `statement`: the statement to execute when the event occurs.\n   * If the evaluation of the statement returns `false`, then `preventDefault`is applied on the DOM\n   * event.\n   *\n   * To listen to global events, a target must be added to the event name.\n   * The target can be `window`, `document` or `body`.\n   *\n   * When writing a directive event binding, you can also refer to the $event local variable.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/DlA5KU?p=preview))\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'button[counting]',\n   *   host: {\n   *     '(click)': 'onClick($event.target)'\n   *   }\n   * })\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   onClick(btn) {\n   *     console.log(\"button\", btn, \"number of clicks:\", this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<button counting>Increment</button>`\n   * })\n   * class App {}\n   * ```\n   *\n   * ## Host Property Bindings\n   *\n   * Specifies which DOM properties a directive updates.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/gNg0ED?p=preview))\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[ngModel]',\n   *   host: {\n   *     '[class.valid]': 'valid',\n   *     '[class.invalid]': 'invalid'\n   *   }\n   * })\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   get valid { return this.control.valid; }\n   *   get invalid { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   * ## Attributes\n   *\n   * Specifies static attributes that should be propagated to a host element.\n   *\n   * ### Example\n   *\n   * In this example using `my-button` directive (ex.: `<div my-button></div>`) on a host element\n   * (here: `<div>` ) will ensure that this element will get the \"button\" role.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[my-button]',\n   *   host: {\n   *     'role': 'button'\n   *   }\n   * })\n   * class MyButton {\n   * }\n   * ```\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * Defines the set of injectable objects that are visible to a Directive and its light DOM\n   * children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'greet',\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   *\n   * ```\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * ### Example\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   */\n  queries?: {[key: string]: any};\n}\n/**\n * Directive decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Directive: DirectiveDecorator =\n    makeDecorator('Directive', (dir: Directive = {}) => dir);\n/**\n * Type of the Component decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function ComponentDecorator() {}\n\n\nfunction ComponentDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(obj: Component): TypeDecorator;\n*/\n/* TODO: handle strange member:\nnew (obj: Component): Component;\n*/\n}\n\n\n/**\n * Type of the Component decorator / constructor function.\n *\n * @stable\n */\nexport interface ComponentDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular component and collects component configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @description\n   * Component decorator allows you to mark a class as an Angular component and provide additional\n   * metadata that determines how the component should be processed, instantiated and used at\n   * runtime.\n   *\n   * Components are the most basic building block of an UI in an Angular application.\n   * An Angular application is a tree of Angular components.\n   * Angular components are a subset of directives. Unlike directives, components always have\n   * a template and only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be usable\n   * by another component or application. To specify that a component is a member of an NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Component decorator,\n   * components can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **animations** - list of animations of this component\n   * * **changeDetection** - change detection strategy used by this component\n   * * **encapsulation** - style encapsulation strategy used by this component\n   * * **entryComponents** - list of components that are dynamically inserted into the view of this\n   *   component\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   *   attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **interpolation** - custom interpolation markers used in this component's template\n   * * **moduleId** - ES/CommonJS module id of the file in which this component is defined\n   * * **outputs** - list of class property names that expose output events that others can\n   *   subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   * * **styleUrls** - list of urls to stylesheets to be applied to this component's view\n   * * **styles** - inline-defined styles to be applied to this component's view\n   * * **template** - inline-defined template for the view\n   * * **templateUrl** - url to an external file containing a template for the view\n   * * **viewProviders** - list of providers available to this component and its view children\n   *\n   * ### Example\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the {@link Component} decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Type of the Component metadata.\n *\n * @stable\n */\nexport interface Component extends Directive {\n  /**\n   * Defines the used change detection strategy.\n   *\n   * When a component is instantiated, Angular creates a change detector, which is responsible for\n   * propagating the component's bindings.\n   *\n   * The `changeDetection` property defines, whether the change detection will be checked every time\n   * or only when the component tells it to do so.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module id of the module that contains the component.\n   * Needed to be able to resolve relative urls for templates and styles.\n   * In CommonJS, this can always be set to `module.id`, similarly SystemJS exposes `__moduleName`\n   * variable within each module.\n   *\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'someDir',\n   *   moduleId: module.id\n   * })\n   * class SomeDir {\n   * }\n   *\n   * ```\n   */\n  moduleId?: string;\n\n  /**\n   * Specifies a template URL for an Angular component.\n   *\n   *Only one of `templateUrl` or `template` can be defined per View.\n   */\n  templateUrl?: string;\n\n  /**\n   * Specifies an inline template for an Angular component.\n   *\n   * Only one of `templateUrl` or `template` can be defined per Component.\n   */\n  template?: string;\n\n  /**\n   * Specifies stylesheet URLs for an Angular component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * Specifies inline stylesheets for an Angular component.\n   */\n  styles?: string[];\n\n  /**\n   * Animations are defined on components via an animation-like DSL. This DSL approach to describing\n   * animations allows for a flexibility that both benefits developers and the framework.\n   *\n   * Animations work by listening on state changes that occur on an element within\n   * the template. When a state change occurs, Angular can then take advantage and animate the\n   * arc in between. This works similar to how CSS transitions work, however, by having a\n   * programmatic DSL, animations are not limited to environments that are DOM-specific.\n   * (Angular can also perform optimizations behind the scenes to make animations more performant.)\n   *\n   * For animations to be available for use, animation state changes are placed within\n   * {@link trigger animation triggers} which are housed inside of the `animations` annotation\n   * metadata. Within a trigger both {@link state state} and {@link transition transition} entries\n   * can be placed.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'animation-cmp',\n   *   templateUrl: 'animation-cmp.html',\n   *   animations: [\n   *     // this here is our animation trigger that\n   *     // will contain our state change animations.\n   *     trigger('myTriggerName', [\n   *       // the styles defined for the `on` and `off`\n   *       // states declared below are persisted on the\n   *       // element once the animation completes.\n   *       state('on', style({ opacity: 1 }),\n   *       state('off', style({ opacity: 0 }),\n   *\n   *       // this here is our animation that kicks off when\n   *       // this state change jump is true\n   *       transition('on => off', [\n   *         animate(\"1s\")\n   *       ])\n   *     ])\n   *   ]\n   * })\n   * ```\n   *\n   * As depicted in the code above, a group of related animation states are all contained within\n   * an animation `trigger` (the code example above called the trigger `myTriggerName`).\n   * When a trigger is created then it can be bound onto an element within the component's\n   * template via a property prefixed by an `@` symbol followed by trigger name and an expression\n   * that\n   * is used to determine the state value for that trigger.\n   *\n   * ```html\n   * <!-- animation-cmp.html -->\n   * <div @myTriggerName=\"expression\">...</div>\n   * ```\n   *\n   * For state changes to be executed, the `expression` value must change value from its existing\n   * value\n   * to something that we have set an animation to animate on (in the example above we are listening\n   * to a change of state between `on` and `off`). The `expression` value attached to the trigger\n   * must be something that can be evaluated with the template/component context.\n   *\n   * ### DSL Animation Functions\n   *\n   * Please visit each of the animation DSL functions listed below to gain a better understanding\n   * of how and why they are used for crafting animations in Angular:\n   *\n   * - {@link trigger trigger()}\n   * - {@link state state()}\n   * - {@link transition transition()}\n   * - {@link group group()}\n   * - {@link sequence sequence()}\n   * - {@link style style()}\n   * - {@link animate animate()}\n   * - {@link keyframes keyframes()}\n   */\n  animations?: any[];\n\n  /**\n   * Specifies how the template and the styles should be encapsulated:\n   * - {@link ViewEncapsulation#Native `ViewEncapsulation.Native`} to use shadow roots - only works\n   *   if natively available on the platform,\n   * - {@link ViewEncapsulation#Emulated `ViewEncapsulation.Emulated`} to use shimmed CSS that\n   *   emulates the native behavior,\n   * - {@link ViewEncapsulation#None `ViewEncapsulation.None`} to use global CSS without any\n   *   encapsulation.\n   *\n   * When no `encapsulation` is defined for the component, the default value from the\n   * {@link CompilerOptions} is used. The default is `ViewEncapsulation.Emulated`}. Provide a new\n   * `CompilerOptions` to override this value.\n   *\n   * If the encapsulation is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * nor `styleUrls` the encapsulation will automatically be switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (respectively `{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * Defines the components that should be compiled as well when\n   * this component is defined. For each components listed here,\n   * Angular will create a {@link ComponentFactory} and store it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n}\n/**\n * Component decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Component: ComponentDecorator = makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function PipeDecorator() {}\n\n\nfunction PipeDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(obj: Pipe): TypeDecorator;\n*/\n/* TODO: handle strange member:\nnew (obj: Pipe): Pipe;\n*/\n}\n\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @stable\n */\nexport interface PipeDecorator {\n  /**\n   * Declare reusable pipe function.\n   *\n   * A \"pure\" pipe is only re-evaluated when either the input or any of the arguments change.\n   *\n   * When not specified, pipes default to being pure.\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the {@link Pipe} decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @stable\n */\nexport interface Pipe {\n  name: string;\n  pure?: boolean;\n}\n/**\n * Pipe decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Pipe: PipeDecorator = makeDecorator('Pipe', (p: Pipe) => ({pure: true, ...p}));\n/**\n * Type of the Input decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function InputDecorator() {}\n\n\nfunction InputDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(bindingPropertyName?: string): any;\n*/\n/* TODO: handle strange member:\nnew (bindingPropertyName?: string): any;\n*/\n}\n\n\n\n/**\n * Type of the Input decorator / constructor function.\n *\n * @stable\n */\nexport interface InputDecorator {\n  /**\n   * Declares a data-bound input property.\n   *\n   * Angular automatically updates data-bound properties during change detection.\n   *\n   * `Input` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * The following example creates a component with two input properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   @Input() bankName: string;\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Input metadata.\n *\n * @stable\n */\nexport interface Input {\n  /**\n   * Name used when instantiating a component in the template.\n   */\n  bindingPropertyName?: string;\n}\n/**\n * Input decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Input: InputDecorator =\n    makePropDecorator('Input', (bindingPropertyName?: string) => ({bindingPropertyName}));\n/**\n * Type of the Output decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function OutputDecorator() {}\n\n\nfunction OutputDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(bindingPropertyName?: string): any;\n*/\n/* TODO: handle strange member:\nnew (bindingPropertyName?: string): any;\n*/\n}\n\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @stable\n */\nexport interface OutputDecorator {\n  /**\n   * Declares an event-bound output property.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * `Output` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   * })\n   * class IntervalDir {\n   *   @Output() everySecond = new EventEmitter();\n   *   @Output('everyFiveSeconds') five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @stable\n */\nexport interface Output { bindingPropertyName?: string; }\n/**\n * Output decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Output: OutputDecorator =\n    makePropDecorator('Output', (bindingPropertyName?: string) => ({bindingPropertyName}));\n/**\n * Type of the HostBinding decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function HostBindingDecorator() {}\n\n\nfunction HostBindingDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(hostPropertyName?: string): any;\n*/\n/* TODO: handle strange member:\nnew (hostPropertyName?: string): any;\n*/\n}\n\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @stable\n */\nexport interface HostBindingDecorator {\n  /**\n   * Declares a host property binding.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * `HostBinding` takes an optional parameter that specifies the property\n   * name of the host element that will be updated. When not provided,\n   * the class property name is used.\n   *\n   * ### Example\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   * @stable\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @stable\n */\nexport interface HostBinding { hostPropertyName?: string; }\n/**\n * HostBinding decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n/**\n * Type of the HostListener decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function HostListenerDecorator() {}\n\n\nfunction HostListenerDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(eventName: string, args?: string[]): any;\n*/\n/* TODO: handle strange member:\nnew (eventName: string, args?: string[]): any;\n*/\n}\n\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @stable\n */\nexport interface HostListenerDecorator {\n  /**\n   * Declares a host listener.\n   *\n   * Angular will invoke the decorated method when the host element emits the specified event.\n   *\n   * If the decorated method returns `false`, then `preventDefault` is applied on the DOM event.\n   *\n   * ### Example\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({selector: 'button[counting]'})\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   @HostListener('click', ['$event.target'])\n   *   onClick(btn) {\n   *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: '<button counting>Increment</button>',\n   * })\n   * class App {}\n   * ```\n   * @stable\n   * @Annotation\n   */\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @stable\n */\nexport interface HostListener {\n  eventName?: string;\n  args?: string[];\n}\n/**\n * HostListener decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport type ChangeDetectionStrategy = number;\nexport let ChangeDetectionStrategy: any = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\nexport type ChangeDetectorStatus = number;\nexport let ChangeDetectorStatus: any = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n * \n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n * \n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n * \n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n * \n * \\@NgModule({ \n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n * \n * \\@experimental\n */\nexport const /** @type {?} */ ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function AttributeDecorator() {}\n\n\nfunction AttributeDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(name: string): any;\n*/\n/* TODO: handle strange member:\nnew (name: string): Attribute;\n*/\n}\n\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @stable\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 DSL\n   *\n   * ```\n   * var MyComponent = ng\n   *   .Component({...})\n   *   .Class({\n   *     constructor: [new ng.Attribute('title'), function(title) {\n   *       ...\n   *     }]\n   *   })\n   * ```\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   * @stable\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n */\nexport interface Attribute { attributeName?: string; }\n/**\n * Attribute decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n *\n * @stable\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n/**\n * Base class for query metadata.\n * \n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Query {}\n/**\n * Type of the ContentChildren decorator / constructor function.\n * \n * See {\\@link ContentChildren}.\n * \n * \\@stable\n * @record\n */\nexport function ContentChildrenDecorator() {}\n\n\nfunction ContentChildrenDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n*/\n/* TODO: handle strange member:\nnew (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n*/\n}\n\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {@link ContentChildren}.\n *\n * @stable\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChildren to get the {@link QueryList} of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n * @stable\n * @Annotation\n */\nexport type ContentChildren = Query;\n/**\n * ContentChildren decorator and metadata.\n * \n *  \\@stable\n *  \\@Annotation\n */\nexport const /** @type {?} */ ContentChildren: ContentChildrenDecorator = makePropDecorator(\n    'ContentChildren',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n    Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n * \n * \n * \\@stable\n * @record\n */\nexport function ContentChildDecorator() {}\n\n\nfunction ContentChildDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(selector: Type<any>|Function|string, opts?: {read?: any}): any;\n*/\n/* TODO: handle strange member:\nnew (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n*/\n}\n\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * @stable\n */\nexport interface ContentChildDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * See {@link ContentChild}.\n *\n * @stable\n */\nexport type ContentChild = Query;\n/**\n * ContentChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n * \n * See {\\@link ViewChildren}.\n * \n * \\@stable\n * @record\n */\nexport function ViewChildrenDecorator() {}\n\n\nfunction ViewChildrenDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(selector: Type<any>|Function|string, opts?: {read?: any}): any;\n*/\n/* TODO: handle strange member:\nnew (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n*/\n}\n\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {@link ViewChildren}.\n *\n * @stable\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @stable\n */\nexport type ViewChildren = Query;\n/**\n * ViewChildren decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n * \n * See {\\@link ViewChild}\n * \n * \\@stable\n * @record\n */\nexport function ViewChildDecorator() {}\n\n\nfunction ViewChildDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(selector: Type<any>|Function|string, opts?: {read?: any}): any;\n*/\n/* TODO: handle strange member:\nnew (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n*/\n}\n\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {@link ViewChild}\n *\n * @stable\n */\nexport interface ViewChildDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChild to get the first element or the directive matching the selector from the\n   * view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @stable\n */\nexport type ViewChild = Query;\n/**\n * ViewChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {global, stringify} from '../util';\n\nlet /** @type {?} */ _nextClassId = 0;\nconst /** @type {?} */ Reflect = global['Reflect'];\n\n/**\n * Declares the interface to be used with {@link Class}.\n *\n * @stable\n */\nexport type ClassDefinition = {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type<any>;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function | any[];\n} &\n{\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type<any>|Function|any[];\n};\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n * \n * DSL syntax:\n * \n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n * \n * ES7 syntax:\n * \n * ```\n * \\@ng.Component({...}) \n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\nexport function TypeDecorator() {}\n\n\nfunction TypeDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n<T extends Type<any>>(type: T): T;\n*/\n/* TODO: handle strange member:\n(target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n*/\n/**\n * Storage for the accumulated annotations so far used by the DSL syntax.\n * \n * Used by {\\@link Class} to annotate the generated class.\n * @type {?}\n */\nTypeDecorator.prototype.annotations;\n/**\n * Generate a class from the definition and annotate it with {\\@link TypeDecorator#annotations}.\n * @type {?}\n */\nTypeDecorator.prototype.Class;\n}\n\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): Type<any>;\n}\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation: any): any {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray: Function | any[] | undefined, key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n      fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n\n  if (Array.isArray(fnOrArray)) {\n    const /** @type {?} */ annotations: any[] = /** @type {?} */(( fnOrArray as any[]));\n    const /** @type {?} */ annoLength = annotations.length - 1;\n    const /** @type {?} */ fn: Function = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(\n          `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength != fn.length) {\n      throw new Error(\n          `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    const /** @type {?} */ paramsAnnotations: any[][] = [];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n      const /** @type {?} */ paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      const /** @type {?} */ annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let /** @type {?} */ j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n\n  throw new Error(\n      `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n * \n * ## Basic Example\n * \n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n * \n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n * \n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n * \n * or equivalent to ES5:\n * \n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n * \n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n * \n * ### Example with parameter annotations\n * \n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n * \n * ### Example with inheritance\n * \n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n * \n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nexport function Class(clsDef: ClassDefinition): Type<any> {\n  const /** @type {?} */ constructor = applyParams(\n      clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\n  let /** @type {?} */ proto = constructor.prototype;\n\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      ( /** @type {?} */((<Function>constructor))).prototype = proto =\n          Object.create(( /** @type {?} */((<Function>clsDef.extends))).prototype);\n    } else {\n      throw new Error(\n          `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n\n  for (const /** @type {?} */ key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(clsDef[key], key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  const /** @type {?} */ constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    ( /** @type {?} */((constructor as any)))['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return /** @type {?} */(( <Type<any>>constructor));\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    chainFn?: (fn: Function) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {?} objOrType\n * @return {?}\n */\nfunction DecoratorFactory(objOrType: any): (cls: any) => any {\n    if (!(Reflect && Reflect.getOwnMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>DecoratorFactory)))(objOrType);\n    const /** @type {?} */ chainAnnotation =\n        typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const /** @type {?} */ TypeDecorator: TypeDecorator = /** @type {?} */(( <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      const /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    }));\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>DecoratorFactory))).annotationCls = DecoratorFactory;\n  return /** @type {?} */(( DecoratorFactory as any));\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const /** @type {?} */ values = props(...args);\n      for (const /** @type {?} */ propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>ParamDecoratorFactory)))(...args);\n\n    ( /** @type {?} */((<any>ParamDecorator))).annotation = annotationInstance;\n    return ParamDecorator;\n/**\n * @param {?} cls\n * @param {?} unusedKey\n * @param {?} index\n * @return {?}\n */\nfunction ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      const /** @type {?} */ parameters: (any[] | null)[] = Reflect.getOwnMetadata('parameters', cls) || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || []; /** @type {?} */((\n      parameters[index])).push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>ParamDecoratorFactory))).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const /** @type {?} */ decoratorInstance = new ( /** @type {?} */((<any>PropDecoratorFactory)))(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>PropDecoratorFactory))).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\nimport {} from 'zone.js';\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst /** @type {?} */ __window = typeof window !== 'undefined' && window;\nconst /** @type {?} */ __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst /** @type {?} */ __global = typeof global !== 'undefined' && global;\nconst /** @type {?} */ _global: {[name: string]: any} = __window || __global || __self;\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet /** @type {?} */ _symbolIterator: any = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const /** @type {?} */ Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        const /** @type {?} */ key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            ( /** @type {?} */((Map as any))).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const /** @type {?} */ res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n * \n * ```typescript\n * var t = new OpaqueToken(\"value\");\n * \n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n * \n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n * \n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n * \n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nexport class OpaqueToken {\n/**\n * @param {?} _desc\n */\nconstructor(protected _desc: string) {}\n/**\n * @return {?}\n */\ntoString(): string { return `Token ${this._desc}`; }\n}\n\nfunction OpaqueToken_tsickle_Closure_declarations() {\n/** @type {?} */\nOpaqueToken.prototype._desc;\n}\n\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n * \n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n * \n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n * \n * \\@stable\n */\nexport class InjectionToken<T> extends OpaqueToken {\nprivate _differentiate_from_OpaqueToken_structurally: any;\n/**\n * @param {?} desc\n */\nconstructor(desc: string) { super(desc); }\n/**\n * @return {?}\n */\ntoString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nfunction InjectionToken_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectionToken.prototype._differentiate_from_OpaqueToken_structurally;\n}\n\n"],"names":["_transition","transition","_keyframes","keyframes","_state","state","_style","style","_sequence","sequence","_group","group","_animate","animate","_trigger","trigger","AnimationGroupMetadata","AnimationSequenceMetadata","AnimationAnimateMetadata","AnimationStyleMetadata","AnimationKeyframesSequenceMetadata","AnimationTransitionMetadata","AnimationStateMetadata","AnimationTriggerMetadata","AnimationMetadata","AUTO_STYLE","viewDef","anchorDef","renderNode","tokenKey","RendererV1","NOT_CREATED","_createProviderInstance","InjectorRefTokenKey","createScope","global","ResolvedReflectiveFactory"],"mappings":"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"}